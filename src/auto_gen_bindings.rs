/* automatically generated by rust-bindgen 0.69.1 */

pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __TIMESIZE: u32 = 64;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const __GLIBC_USE_C2X_STRTOL: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 38;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const __bool_true_false_are_defined: u32 = 1;
pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub type wchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct max_align_t {
    pub __clang_max_align_nonce1: ::std::os::raw::c_longlong,
    pub __bindgen_padding_0: u64,
    pub __clang_max_align_nonce2: u128,
}
#[test]
fn bindgen_test_layout_max_align_t() {
    const UNINIT: ::std::mem::MaybeUninit<max_align_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<max_align_t>(),
        32usize,
        concat!("Size of: ", stringify!(max_align_t))
    );
    assert_eq!(
        ::std::mem::align_of::<max_align_t>(),
        16usize,
        concat!("Alignment of ", stringify!(max_align_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce1) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(max_align_t),
            "::",
            stringify!(__clang_max_align_nonce1)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce2) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(max_align_t),
            "::",
            stringify!(__clang_max_align_nonce2)
        )
    );
}
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
#[test]
fn bindgen_test_layout___fsid_t() {
    const UNINIT: ::std::mem::MaybeUninit<__fsid_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<__fsid_t>(),
        8usize,
        concat!("Size of: ", stringify!(__fsid_t))
    );
    assert_eq!(
        ::std::mem::align_of::<__fsid_t>(),
        4usize,
        concat!("Alignment of ", stringify!(__fsid_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__val) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__fsid_t),
            "::",
            stringify!(__val)
        )
    );
}
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __suseconds64_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
pub const ar_ResolvedWriteMode_ar_ResolvedWriteMode_Update: ar_ResolvedWriteMode = 0;
pub const ar_ResolvedWriteMode_ar_ResolvedWriteMode_Replace: ar_ResolvedWriteMode = 1;
#[doc = " enums"]
pub type ar_ResolvedWriteMode = ::std::os::raw::c_uint;
pub const gf_CameraProjection_gf_CameraProjection_Perspective: gf_CameraProjection = 0;
pub const gf_CameraProjection_gf_CameraProjection_Orthographic: gf_CameraProjection = 1;
pub type gf_CameraProjection = ::std::os::raw::c_uint;
pub const gf_CameraFOVDirection_gf_CameraFOVDirection_FOVHorizontal: gf_CameraFOVDirection = 0;
pub const gf_CameraFOVDirection_gf_CameraFOVDirection_FOVVertical: gf_CameraFOVDirection = 1;
pub type gf_CameraFOVDirection = ::std::os::raw::c_uint;
pub const gf_FrustumProjectionType_gf_FrustumProjectionType_Orthographic: gf_FrustumProjectionType =
    0;
pub const gf_FrustumProjectionType_gf_FrustumProjectionType_Perspective: gf_FrustumProjectionType =
    1;
pub type gf_FrustumProjectionType = ::std::os::raw::c_uint;
pub const ndr_VersionFilter_ndr_VersionFilter_NdrVersionFilterDefaultOnly: ndr_VersionFilter = 0;
pub const ndr_VersionFilter_ndr_VersionFilter_NdrVersionFilterAllVersions: ndr_VersionFilter = 1;
pub const ndr_VersionFilter_ndr_VersionFilter_NdrNumVersionFilters: ndr_VersionFilter = 2;
pub type ndr_VersionFilter = ::std::os::raw::c_uint;
pub const pcp_ArcType_pcp_ArcType_PcpArcTypeRoot: pcp_ArcType = 0;
pub const pcp_ArcType_pcp_ArcType_PcpArcTypeInherit: pcp_ArcType = 1;
pub const pcp_ArcType_pcp_ArcType_PcpArcTypeVariant: pcp_ArcType = 2;
pub const pcp_ArcType_pcp_ArcType_PcpArcTypeRelocate: pcp_ArcType = 3;
pub const pcp_ArcType_pcp_ArcType_PcpArcTypeReference: pcp_ArcType = 4;
pub const pcp_ArcType_pcp_ArcType_PcpArcTypePayload: pcp_ArcType = 5;
pub const pcp_ArcType_pcp_ArcType_PcpArcTypeSpecialize: pcp_ArcType = 6;
pub const pcp_ArcType_pcp_ArcType_PcpNumArcTypes: pcp_ArcType = 7;
pub type pcp_ArcType = ::std::os::raw::c_uint;
pub const pcp_TargetType_pcp_TargetType_TargetTypeConnection: pcp_TargetType = 1;
pub const pcp_TargetType_pcp_TargetType_TargetTypeRelationshipTarget: pcp_TargetType = 2;
pub type pcp_TargetType = ::std::os::raw::c_uint;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypeNone: pcp_DependencyType = 0;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypeRoot: pcp_DependencyType = 1;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypePurelyDirect: pcp_DependencyType =
    2;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypePartlyDirect: pcp_DependencyType =
    4;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypeAncestral: pcp_DependencyType = 8;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypeVirtual: pcp_DependencyType = 16;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypeNonVirtual: pcp_DependencyType =
    32;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypeDirect: pcp_DependencyType = 6;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypeAnyNonVirtual: pcp_DependencyType =
    47;
pub const pcp_DependencyType_pcp_DependencyType_PcpDependencyTypeAnyIncludingVirtual:
    pcp_DependencyType = 63;
pub type pcp_DependencyType = ::std::os::raw::c_uint;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_ArcCycle: pcp_ErrorType = 0;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_ArcPermissionDenied: pcp_ErrorType = 1;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_IndexCapacityExceeded: pcp_ErrorType = 2;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_ArcCapacityExceeded: pcp_ErrorType = 3;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_ArcNamespaceDepthCapacityExceeded:
    pcp_ErrorType = 4;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InconsistentPropertyType: pcp_ErrorType = 5;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InconsistentAttributeType: pcp_ErrorType = 6;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InconsistentAttributeVariability: pcp_ErrorType =
    7;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InternalAssetPath: pcp_ErrorType = 8;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidPrimPath: pcp_ErrorType = 9;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidAssetPath: pcp_ErrorType = 10;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidInstanceTargetPath: pcp_ErrorType = 11;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidExternalTargetPath: pcp_ErrorType = 12;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidTargetPath: pcp_ErrorType = 13;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidReferenceOffset: pcp_ErrorType = 14;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidSublayerOffset: pcp_ErrorType = 15;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidSublayerOwnership: pcp_ErrorType = 16;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidSublayerPath: pcp_ErrorType = 17;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_InvalidVariantSelection: pcp_ErrorType = 18;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_MutedAssetPath: pcp_ErrorType = 19;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_OpinionAtRelocationSource: pcp_ErrorType = 20;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_PrimPermissionDenied: pcp_ErrorType = 21;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_PropertyPermissionDenied: pcp_ErrorType = 22;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_SublayerCycle: pcp_ErrorType = 23;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_TargetPermissionDenied: pcp_ErrorType = 24;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_UnresolvedPrimPath: pcp_ErrorType = 25;
pub const pcp_ErrorType_pcp_ErrorType_PcpErrorType_VariableExpressionError: pcp_ErrorType = 26;
pub type pcp_ErrorType = ::std::os::raw::c_uint;
pub const pcp_EditType_pcp_EditType_EditPath: pcp_EditType = 0;
pub const pcp_EditType_pcp_EditType_EditInherit: pcp_EditType = 1;
pub const pcp_EditType_pcp_EditType_EditSpecializes: pcp_EditType = 2;
pub const pcp_EditType_pcp_EditType_EditReference: pcp_EditType = 3;
pub const pcp_EditType_pcp_EditType_EditPayload: pcp_EditType = 4;
pub const pcp_EditType_pcp_EditType_EditRelocate: pcp_EditType = 5;
pub type pcp_EditType = ::std::os::raw::c_uint;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypeRoot: pcp_PcpRangeType = 0;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypeInherit: pcp_PcpRangeType = 1;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypeVariant: pcp_PcpRangeType = 2;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypeReference: pcp_PcpRangeType = 3;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypePayload: pcp_PcpRangeType = 4;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypeSpecialize: pcp_PcpRangeType = 5;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypeAll: pcp_PcpRangeType = 6;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypeWeakerThanRoot: pcp_PcpRangeType = 7;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypeStrongerThanPayload: pcp_PcpRangeType = 8;
pub const pcp_PcpRangeType_pcp_PcpRangeType_PcpRangeTypeInvalid: pcp_PcpRangeType = 9;
pub type pcp_PcpRangeType = ::std::os::raw::c_uint;
pub const sdf_SdfChangeListSubLayerChangeType_sdf_SdfChangeListSubLayerChangeType_SubLayerAdded:
    sdf_SdfChangeListSubLayerChangeType = 0;
pub const sdf_SdfChangeListSubLayerChangeType_sdf_SdfChangeListSubLayerChangeType_SubLayerRemoved : sdf_SdfChangeListSubLayerChangeType = 1 ;
pub const sdf_SdfChangeListSubLayerChangeType_sdf_SdfChangeListSubLayerChangeType_SubLayerOffset:
    sdf_SdfChangeListSubLayerChangeType = 2;
pub type sdf_SdfChangeListSubLayerChangeType = ::std::os::raw::c_uint;
pub const sdf_ListOpType_sdf_ListOpType_SdfListOpTypeExplicit: sdf_ListOpType = 0;
pub const sdf_ListOpType_sdf_ListOpType_SdfListOpTypeAdded: sdf_ListOpType = 1;
pub const sdf_ListOpType_sdf_ListOpType_SdfListOpTypeDeleted: sdf_ListOpType = 2;
pub const sdf_ListOpType_sdf_ListOpType_SdfListOpTypeOrdered: sdf_ListOpType = 3;
pub const sdf_ListOpType_sdf_ListOpType_SdfListOpTypePrepended: sdf_ListOpType = 4;
pub const sdf_ListOpType_sdf_ListOpType_SdfListOpTypeAppended: sdf_ListOpType = 5;
pub type sdf_ListOpType = ::std::os::raw::c_uint;
pub const sdf_NamespaceEditDetailResult_sdf_NamespaceEditDetailResult_Error:
    sdf_NamespaceEditDetailResult = 0;
pub const sdf_NamespaceEditDetailResult_sdf_NamespaceEditDetailResult_Unbatched:
    sdf_NamespaceEditDetailResult = 1;
pub const sdf_NamespaceEditDetailResult_sdf_NamespaceEditDetailResult_Okay:
    sdf_NamespaceEditDetailResult = 2;
pub type sdf_NamespaceEditDetailResult = ::std::os::raw::c_uint;
pub const sdf_Op_sdf_Op_Complement: sdf_Op = 0;
pub const sdf_Op_sdf_Op_ImpliedUnion: sdf_Op = 1;
pub const sdf_Op_sdf_Op_Union: sdf_Op = 2;
pub const sdf_Op_sdf_Op_Intersection: sdf_Op = 3;
pub const sdf_Op_sdf_Op_Difference: sdf_Op = 4;
pub const sdf_Op_sdf_Op_ExpressionRef: sdf_Op = 5;
pub const sdf_Op_sdf_Op_Pattern: sdf_Op = 6;
pub type sdf_Op = ::std::os::raw::c_uint;
pub const sdf_PredicateExpressionFnCallKind_sdf_PredicateExpressionFnCallKind_BareCall:
    sdf_PredicateExpressionFnCallKind = 0;
pub const sdf_PredicateExpressionFnCallKind_sdf_PredicateExpressionFnCallKind_ColonCall:
    sdf_PredicateExpressionFnCallKind = 1;
pub const sdf_PredicateExpressionFnCallKind_sdf_PredicateExpressionFnCallKind_ParenCall:
    sdf_PredicateExpressionFnCallKind = 2;
pub type sdf_PredicateExpressionFnCallKind = ::std::os::raw::c_uint;
pub const sdf_PredicateExpressionOp_sdf_PredicateExpressionOp_Call: sdf_PredicateExpressionOp = 0;
pub const sdf_PredicateExpressionOp_sdf_PredicateExpressionOp_Not: sdf_PredicateExpressionOp = 1;
pub const sdf_PredicateExpressionOp_sdf_PredicateExpressionOp_ImpliedAnd:
    sdf_PredicateExpressionOp = 2;
pub const sdf_PredicateExpressionOp_sdf_PredicateExpressionOp_And: sdf_PredicateExpressionOp = 3;
pub const sdf_PredicateExpressionOp_sdf_PredicateExpressionOp_Or: sdf_PredicateExpressionOp = 4;
pub type sdf_PredicateExpressionOp = ::std::os::raw::c_uint;
pub const sdf_Permission_sdf_Permission_SdfPermissionPublic: sdf_Permission = 0;
pub const sdf_Permission_sdf_Permission_SdfPermissionPrivate: sdf_Permission = 1;
pub const sdf_Permission_sdf_Permission_SdfNumPermissions: sdf_Permission = 2;
pub type sdf_Permission = ::std::os::raw::c_uint;
pub const sdf_Specifier_sdf_Specifier_SdfSpecifierDef: sdf_Specifier = 0;
pub const sdf_Specifier_sdf_Specifier_SdfSpecifierOver: sdf_Specifier = 1;
pub const sdf_Specifier_sdf_Specifier_SdfSpecifierClass: sdf_Specifier = 2;
pub const sdf_Specifier_sdf_Specifier_SdfNumSpecifiers: sdf_Specifier = 3;
pub type sdf_Specifier = ::std::os::raw::c_uint;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeUnknown: sdf_SpecType = 0;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeAttribute: sdf_SpecType = 1;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeConnection: sdf_SpecType = 2;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeExpression: sdf_SpecType = 3;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeMapper: sdf_SpecType = 4;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeMapperArg: sdf_SpecType = 5;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypePrim: sdf_SpecType = 6;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypePseudoRoot: sdf_SpecType = 7;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeRelationship: sdf_SpecType = 8;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeRelationshipTarget: sdf_SpecType = 9;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeVariant: sdf_SpecType = 10;
pub const sdf_SpecType_sdf_SpecType_SdfSpecTypeVariantSet: sdf_SpecType = 11;
pub const sdf_SpecType_sdf_SpecType_SdfNumSpecTypes: sdf_SpecType = 12;
pub type sdf_SpecType = ::std::os::raw::c_uint;
pub const sdf_Variability_sdf_Variability_SdfVariabilityVarying: sdf_Variability = 0;
pub const sdf_Variability_sdf_Variability_SdfVariabilityUniform: sdf_Variability = 1;
pub const sdf_Variability_sdf_Variability_SdfNumVariabilities: sdf_Variability = 2;
pub type sdf_Variability = ::std::os::raw::c_uint;
pub const usd_InterpolationType_usd_InterpolationType_UsdInterpolationTypeHeld:
    usd_InterpolationType = 0;
pub const usd_InterpolationType_usd_InterpolationType_UsdInterpolationTypeLinear:
    usd_InterpolationType = 1;
pub type usd_InterpolationType = ::std::os::raw::c_uint;
pub const usd_ListPosition_usd_ListPosition_UsdListPositionFrontOfPrependList: usd_ListPosition = 0;
pub const usd_ListPosition_usd_ListPosition_UsdListPositionBackOfPrependList: usd_ListPosition = 1;
pub const usd_ListPosition_usd_ListPosition_UsdListPositionFrontOfAppendList: usd_ListPosition = 2;
pub const usd_ListPosition_usd_ListPosition_UsdListPositionBackOfAppendList: usd_ListPosition = 3;
pub type usd_ListPosition = ::std::os::raw::c_uint;
pub const usd_LoadPolicy_usd_LoadPolicy_UsdLoadWithDescendants: usd_LoadPolicy = 0;
pub const usd_LoadPolicy_usd_LoadPolicy_UsdLoadWithoutDescendants: usd_LoadPolicy = 1;
pub type usd_LoadPolicy = ::std::os::raw::c_uint;
pub const usd_SchemaKind_usd_SchemaKind_Invalid: usd_SchemaKind = 0;
pub const usd_SchemaKind_usd_SchemaKind_AbstractBase: usd_SchemaKind = 1;
pub const usd_SchemaKind_usd_SchemaKind_AbstractTyped: usd_SchemaKind = 2;
pub const usd_SchemaKind_usd_SchemaKind_ConcreteTyped: usd_SchemaKind = 3;
pub const usd_SchemaKind_usd_SchemaKind_NonAppliedAPI: usd_SchemaKind = 4;
pub const usd_SchemaKind_usd_SchemaKind_SingleApplyAPI: usd_SchemaKind = 5;
pub const usd_SchemaKind_usd_SchemaKind_MultipleApplyAPI: usd_SchemaKind = 6;
pub type usd_SchemaKind = ::std::os::raw::c_uint;
pub const usd_ModelAPIKindValidation_usd_ModelAPIKindValidation_KindValidationNone:
    usd_ModelAPIKindValidation = 0;
pub const usd_ModelAPIKindValidation_usd_ModelAPIKindValidation_KindValidationModelHierarchy:
    usd_ModelAPIKindValidation = 1;
pub type usd_ModelAPIKindValidation = ::std::os::raw::c_uint;
pub const usd_UsdObjType_usd_UsdObjType_UsdTypeObject: usd_UsdObjType = 0;
pub const usd_UsdObjType_usd_UsdObjType_UsdTypePrim: usd_UsdObjType = 1;
pub const usd_UsdObjType_usd_UsdObjType_UsdTypeProperty: usd_UsdObjType = 2;
pub const usd_UsdObjType_usd_UsdObjType_UsdTypeAttribute: usd_UsdObjType = 3;
pub const usd_UsdObjType_usd_UsdObjType_UsdTypeRelationship: usd_UsdObjType = 4;
pub const usd_UsdObjType_usd_UsdObjType_Usd_NumObjTypes: usd_UsdObjType = 5;
pub type usd_UsdObjType = ::std::os::raw::c_uint;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_All:
    usd_PrimCompositionQueryArcTypeFilter = 0;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_Reference:
    usd_PrimCompositionQueryArcTypeFilter = 1;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_Payload:
    usd_PrimCompositionQueryArcTypeFilter = 2;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_Inherit:
    usd_PrimCompositionQueryArcTypeFilter = 3;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_Specialize:
    usd_PrimCompositionQueryArcTypeFilter = 4;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_Variant:
    usd_PrimCompositionQueryArcTypeFilter = 5;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_ReferenceOrPayload : usd_PrimCompositionQueryArcTypeFilter = 6 ;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_InheritOrSpecialize : usd_PrimCompositionQueryArcTypeFilter = 7 ;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_NotReferenceOrPayload : usd_PrimCompositionQueryArcTypeFilter = 8 ;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_NotInheritOrSpecialize : usd_PrimCompositionQueryArcTypeFilter = 9 ;
pub const usd_PrimCompositionQueryArcTypeFilter_usd_PrimCompositionQueryArcTypeFilter_NotVariant:
    usd_PrimCompositionQueryArcTypeFilter = 10;
pub type usd_PrimCompositionQueryArcTypeFilter = ::std::os::raw::c_uint;
pub const usd_PrimCompositionQueryArcIntroducedFilter_usd_PrimCompositionQueryArcIntroducedFilter_All : usd_PrimCompositionQueryArcIntroducedFilter = 0 ;
pub const usd_PrimCompositionQueryArcIntroducedFilter_usd_PrimCompositionQueryArcIntroducedFilter_IntroducedInRootLayerStack : usd_PrimCompositionQueryArcIntroducedFilter = 1 ;
pub const usd_PrimCompositionQueryArcIntroducedFilter_usd_PrimCompositionQueryArcIntroducedFilter_IntroducedInRootLayerPrimSpec : usd_PrimCompositionQueryArcIntroducedFilter = 2 ;
pub type usd_PrimCompositionQueryArcIntroducedFilter = ::std::os::raw::c_uint;
pub const usd_PrimCompositionQueryDependencyTypeFilter_usd_PrimCompositionQueryDependencyTypeFilter_All : usd_PrimCompositionQueryDependencyTypeFilter = 0 ;
pub const usd_PrimCompositionQueryDependencyTypeFilter_usd_PrimCompositionQueryDependencyTypeFilter_Direct : usd_PrimCompositionQueryDependencyTypeFilter = 1 ;
pub const usd_PrimCompositionQueryDependencyTypeFilter_usd_PrimCompositionQueryDependencyTypeFilter_Ancestral : usd_PrimCompositionQueryDependencyTypeFilter = 2 ;
pub type usd_PrimCompositionQueryDependencyTypeFilter = ::std::os::raw::c_uint;
pub const usd_PrimCompositionQueryHasSpecsFilter_usd_PrimCompositionQueryHasSpecsFilter_All:
    usd_PrimCompositionQueryHasSpecsFilter = 0;
pub const usd_PrimCompositionQueryHasSpecsFilter_usd_PrimCompositionQueryHasSpecsFilter_HasSpecs:
    usd_PrimCompositionQueryHasSpecsFilter = 1;
pub const usd_PrimCompositionQueryHasSpecsFilter_usd_PrimCompositionQueryHasSpecsFilter_HasNoSpecs : usd_PrimCompositionQueryHasSpecsFilter = 2 ;
pub type usd_PrimCompositionQueryHasSpecsFilter = ::std::os::raw::c_uint;
pub const usd_ResolveInfoSource_usd_ResolveInfoSource_UsdResolveInfoSourceNone:
    usd_ResolveInfoSource = 0;
pub const usd_ResolveInfoSource_usd_ResolveInfoSource_UsdResolveInfoSourceFallback:
    usd_ResolveInfoSource = 1;
pub const usd_ResolveInfoSource_usd_ResolveInfoSource_UsdResolveInfoSourceDefault:
    usd_ResolveInfoSource = 2;
pub const usd_ResolveInfoSource_usd_ResolveInfoSource_UsdResolveInfoSourceTimeSamples:
    usd_ResolveInfoSource = 3;
pub const usd_ResolveInfoSource_usd_ResolveInfoSource_UsdResolveInfoSourceValueClips:
    usd_ResolveInfoSource = 4;
pub type usd_ResolveInfoSource = ::std::os::raw::c_uint;
pub const usd_SchemaRegistryVersionPolicy_usd_SchemaRegistryVersionPolicy_All:
    usd_SchemaRegistryVersionPolicy = 0;
pub const usd_SchemaRegistryVersionPolicy_usd_SchemaRegistryVersionPolicy_GreaterThan:
    usd_SchemaRegistryVersionPolicy = 1;
pub const usd_SchemaRegistryVersionPolicy_usd_SchemaRegistryVersionPolicy_GreaterThanOrEqual:
    usd_SchemaRegistryVersionPolicy = 2;
pub const usd_SchemaRegistryVersionPolicy_usd_SchemaRegistryVersionPolicy_LessThan:
    usd_SchemaRegistryVersionPolicy = 3;
pub const usd_SchemaRegistryVersionPolicy_usd_SchemaRegistryVersionPolicy_LessThanOrEqual:
    usd_SchemaRegistryVersionPolicy = 4;
pub type usd_SchemaRegistryVersionPolicy = ::std::os::raw::c_uint;
pub const usd_StageInitialLoadSet_usd_StageInitialLoadSet_LoadAll: usd_StageInitialLoadSet = 0;
pub const usd_StageInitialLoadSet_usd_StageInitialLoadSet_LoadNone: usd_StageInitialLoadSet = 1;
pub type usd_StageInitialLoadSet = ::std::os::raw::c_uint;
pub const usd_StageLoadRulesRule_usd_StageLoadRulesRule_AllRule: usd_StageLoadRulesRule = 0;
pub const usd_StageLoadRulesRule_usd_StageLoadRulesRule_OnlyRule: usd_StageLoadRulesRule = 1;
pub const usd_StageLoadRulesRule_usd_StageLoadRulesRule_NoneRule: usd_StageLoadRulesRule = 2;
pub type usd_StageLoadRulesRule = ::std::os::raw::c_uint;
pub const usdGeom_ProtoXformInclusion_usdGeom_ProtoXformInclusion_IncludeProtoXform:
    usdGeom_ProtoXformInclusion = 0;
pub const usdGeom_ProtoXformInclusion_usdGeom_ProtoXformInclusion_ExcludeProtoXform:
    usdGeom_ProtoXformInclusion = 1;
pub type usdGeom_ProtoXformInclusion = ::std::os::raw::c_uint;
pub const usdGeom_MaskApplication_usdGeom_MaskApplication_ApplyMask: usdGeom_MaskApplication = 0;
pub const usdGeom_MaskApplication_usdGeom_MaskApplication_IgnoreMask: usdGeom_MaskApplication = 1;
pub type usdGeom_MaskApplication = ::std::os::raw::c_uint;
pub const usdGeom_XformCommonAPIRotationOrder_usdGeom_XformCommonAPIRotationOrder_RotationOrderXYZ : usdGeom_XformCommonAPIRotationOrder = 0 ;
pub const usdGeom_XformCommonAPIRotationOrder_usdGeom_XformCommonAPIRotationOrder_RotationOrderXZY : usdGeom_XformCommonAPIRotationOrder = 1 ;
pub const usdGeom_XformCommonAPIRotationOrder_usdGeom_XformCommonAPIRotationOrder_RotationOrderYXZ : usdGeom_XformCommonAPIRotationOrder = 2 ;
pub const usdGeom_XformCommonAPIRotationOrder_usdGeom_XformCommonAPIRotationOrder_RotationOrderYZX : usdGeom_XformCommonAPIRotationOrder = 3 ;
pub const usdGeom_XformCommonAPIRotationOrder_usdGeom_XformCommonAPIRotationOrder_RotationOrderZXY : usdGeom_XformCommonAPIRotationOrder = 4 ;
pub const usdGeom_XformCommonAPIRotationOrder_usdGeom_XformCommonAPIRotationOrder_RotationOrderZYX : usdGeom_XformCommonAPIRotationOrder = 5 ;
pub type usdGeom_XformCommonAPIRotationOrder = ::std::os::raw::c_uint;
pub const usdGeom_XformCommonAPIOpFlags_usdGeom_XformCommonAPIOpFlags_OpNone:
    usdGeom_XformCommonAPIOpFlags = 0;
pub const usdGeom_XformCommonAPIOpFlags_usdGeom_XformCommonAPIOpFlags_OpTranslate:
    usdGeom_XformCommonAPIOpFlags = 1;
pub const usdGeom_XformCommonAPIOpFlags_usdGeom_XformCommonAPIOpFlags_OpPivot:
    usdGeom_XformCommonAPIOpFlags = 2;
pub const usdGeom_XformCommonAPIOpFlags_usdGeom_XformCommonAPIOpFlags_OpRotate:
    usdGeom_XformCommonAPIOpFlags = 4;
pub const usdGeom_XformCommonAPIOpFlags_usdGeom_XformCommonAPIOpFlags_OpScale:
    usdGeom_XformCommonAPIOpFlags = 8;
pub type usdGeom_XformCommonAPIOpFlags = ::std::os::raw::c_uint;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeInvalid: usdGeom_XformOpType = 0;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeTranslate: usdGeom_XformOpType = 1;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeScale: usdGeom_XformOpType = 2;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeRotateX: usdGeom_XformOpType = 3;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeRotateY: usdGeom_XformOpType = 4;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeRotateZ: usdGeom_XformOpType = 5;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeRotateXYZ: usdGeom_XformOpType = 6;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeRotateXZY: usdGeom_XformOpType = 7;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeRotateYXZ: usdGeom_XformOpType = 8;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeRotateYZX: usdGeom_XformOpType = 9;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeRotateZXY: usdGeom_XformOpType = 10;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeRotateZYX: usdGeom_XformOpType = 11;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeOrient: usdGeom_XformOpType = 12;
pub const usdGeom_XformOpType_usdGeom_XformOpType_TypeTransform: usdGeom_XformOpType = 13;
pub type usdGeom_XformOpType = ::std::os::raw::c_uint;
pub const usdGeom_XformOpPrecision_usdGeom_XformOpPrecision_PrecisionDouble:
    usdGeom_XformOpPrecision = 0;
pub const usdGeom_XformOpPrecision_usdGeom_XformOpPrecision_PrecisionFloat:
    usdGeom_XformOpPrecision = 1;
pub const usdGeom_XformOpPrecision_usdGeom_XformOpPrecision_PrecisionHalf:
    usdGeom_XformOpPrecision = 2;
pub type usdGeom_XformOpPrecision = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_ArAsset_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_AssetSharedPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_ConstCharSharedPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_FileSizePair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_AssetInfo_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_ResolvedPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_Resolver_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_ResolverContext_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_ResolverContextVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_Timestamp_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_WritableAsset_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ar_WritableAssetSharedPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec2f_t {
    pub x: f32,
    pub y: f32,
}
#[test]
fn bindgen_test_layout_gf_Vec2f_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec2f_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec2f_t>(),
        8usize,
        concat!("Size of: ", stringify!(gf_Vec2f_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec2f_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Vec2f_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec2f_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec2f_t),
            "::",
            stringify!(y)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec2fArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3f_t {
    pub x: f32,
    pub y: f32,
    pub z: f32,
}
#[test]
fn bindgen_test_layout_gf_Vec3f_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec3f_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec3f_t>(),
        12usize,
        concat!("Size of: ", stringify!(gf_Vec3f_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec3f_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Vec3f_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3f_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3f_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3f_t),
            "::",
            stringify!(z)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3fArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3fArrayVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec4f_t {
    pub x: f32,
    pub y: f32,
    pub z: f32,
    pub w: f32,
}
#[test]
fn bindgen_test_layout_gf_Vec4f_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec4f_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec4f_t>(),
        16usize,
        concat!("Size of: ", stringify!(gf_Vec4f_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec4f_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Vec4f_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4f_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4f_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4f_t),
            "::",
            stringify!(z)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).w) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4f_t),
            "::",
            stringify!(w)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec4fArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec4fVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec2h_t {
    pub x: ::std::os::raw::c_short,
    pub y: ::std::os::raw::c_short,
}
#[test]
fn bindgen_test_layout_gf_Vec2h_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec2h_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec2h_t>(),
        4usize,
        concat!("Size of: ", stringify!(gf_Vec2h_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec2h_t>(),
        2usize,
        concat!("Alignment of ", stringify!(gf_Vec2h_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec2h_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec2h_t),
            "::",
            stringify!(y)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec2hArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3h_t {
    pub x: ::std::os::raw::c_short,
    pub y: ::std::os::raw::c_short,
    pub z: ::std::os::raw::c_short,
}
#[test]
fn bindgen_test_layout_gf_Vec3h_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec3h_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec3h_t>(),
        6usize,
        concat!("Size of: ", stringify!(gf_Vec3h_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec3h_t>(),
        2usize,
        concat!("Alignment of ", stringify!(gf_Vec3h_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3h_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3h_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3h_t),
            "::",
            stringify!(z)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3hArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec4h_t {
    pub x: ::std::os::raw::c_short,
    pub y: ::std::os::raw::c_short,
    pub z: ::std::os::raw::c_short,
    pub w: ::std::os::raw::c_short,
}
#[test]
fn bindgen_test_layout_gf_Vec4h_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec4h_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec4h_t>(),
        8usize,
        concat!("Size of: ", stringify!(gf_Vec4h_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec4h_t>(),
        2usize,
        concat!("Alignment of ", stringify!(gf_Vec4h_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4h_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4h_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4h_t),
            "::",
            stringify!(z)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).w) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4h_t),
            "::",
            stringify!(w)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec4hArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec2d_t {
    pub x: f64,
    pub y: f64,
}
#[test]
fn bindgen_test_layout_gf_Vec2d_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec2d_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec2d_t>(),
        16usize,
        concat!("Size of: ", stringify!(gf_Vec2d_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec2d_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Vec2d_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec2d_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec2d_t),
            "::",
            stringify!(y)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec2dArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3d_t {
    pub x: f64,
    pub y: f64,
    pub z: f64,
}
#[test]
fn bindgen_test_layout_gf_Vec3d_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec3d_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec3d_t>(),
        24usize,
        concat!("Size of: ", stringify!(gf_Vec3d_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec3d_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Vec3d_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3d_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3d_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3d_t),
            "::",
            stringify!(z)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3dVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3dArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec4d_t {
    pub x: f64,
    pub y: f64,
    pub z: f64,
    pub w: f64,
}
#[test]
fn bindgen_test_layout_gf_Vec4d_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec4d_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec4d_t>(),
        32usize,
        concat!("Size of: ", stringify!(gf_Vec4d_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec4d_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Vec4d_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4d_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4d_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4d_t),
            "::",
            stringify!(z)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).w) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4d_t),
            "::",
            stringify!(w)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec4dArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec2i_t {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_gf_Vec2i_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec2i_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec2i_t>(),
        8usize,
        concat!("Size of: ", stringify!(gf_Vec2i_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec2i_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Vec2i_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec2i_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec2i_t),
            "::",
            stringify!(y)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec2iArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3i_t {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_gf_Vec3i_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec3i_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec3i_t>(),
        12usize,
        concat!("Size of: ", stringify!(gf_Vec3i_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec3i_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Vec3i_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3i_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3i_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec3i_t),
            "::",
            stringify!(z)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec3iArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec4i_t {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
    pub w: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_gf_Vec4i_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Vec4i_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Vec4i_t>(),
        16usize,
        concat!("Size of: ", stringify!(gf_Vec4i_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Vec4i_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Vec4i_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4i_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4i_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4i_t),
            "::",
            stringify!(z)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).w) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Vec4i_t),
            "::",
            stringify!(w)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Vec4iArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix2d_t {
    pub m: [f64; 4usize],
}
#[test]
fn bindgen_test_layout_gf_Matrix2d_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Matrix2d_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Matrix2d_t>(),
        32usize,
        concat!("Size of: ", stringify!(gf_Matrix2d_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Matrix2d_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Matrix2d_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).m) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Matrix2d_t),
            "::",
            stringify!(m)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix2dArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix3d_t {
    pub m: [f64; 9usize],
}
#[test]
fn bindgen_test_layout_gf_Matrix3d_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Matrix3d_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Matrix3d_t>(),
        72usize,
        concat!("Size of: ", stringify!(gf_Matrix3d_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Matrix3d_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Matrix3d_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).m) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Matrix3d_t),
            "::",
            stringify!(m)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix3dArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix4d_t {
    pub m: [f64; 16usize],
}
#[test]
fn bindgen_test_layout_gf_Matrix4d_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Matrix4d_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Matrix4d_t>(),
        128usize,
        concat!("Size of: ", stringify!(gf_Matrix4d_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Matrix4d_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Matrix4d_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).m) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Matrix4d_t),
            "::",
            stringify!(m)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix4dArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix4dArrayVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix2f_t {
    pub m: [f32; 4usize],
}
#[test]
fn bindgen_test_layout_gf_Matrix2f_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Matrix2f_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Matrix2f_t>(),
        16usize,
        concat!("Size of: ", stringify!(gf_Matrix2f_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Matrix2f_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Matrix2f_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).m) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Matrix2f_t),
            "::",
            stringify!(m)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix2fArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix3f_t {
    pub m: [f32; 9usize],
}
#[test]
fn bindgen_test_layout_gf_Matrix3f_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Matrix3f_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Matrix3f_t>(),
        36usize,
        concat!("Size of: ", stringify!(gf_Matrix3f_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Matrix3f_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Matrix3f_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).m) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Matrix3f_t),
            "::",
            stringify!(m)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix3fArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix4f_t {
    pub m: [f32; 16usize],
}
#[test]
fn bindgen_test_layout_gf_Matrix4f_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Matrix4f_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Matrix4f_t>(),
        64usize,
        concat!("Size of: ", stringify!(gf_Matrix4f_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Matrix4f_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Matrix4f_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).m) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Matrix4f_t),
            "::",
            stringify!(m)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Matrix4fArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Quatd_t {
    pub x: f64,
    pub y: f64,
    pub z: f64,
    pub w: f64,
}
#[test]
fn bindgen_test_layout_gf_Quatd_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Quatd_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Quatd_t>(),
        32usize,
        concat!("Size of: ", stringify!(gf_Quatd_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Quatd_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Quatd_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quatd_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quatd_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quatd_t),
            "::",
            stringify!(z)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).w) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quatd_t),
            "::",
            stringify!(w)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_QuatdArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Quatf_t {
    pub x: f32,
    pub y: f32,
    pub z: f32,
    pub w: f32,
}
#[test]
fn bindgen_test_layout_gf_Quatf_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Quatf_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Quatf_t>(),
        16usize,
        concat!("Size of: ", stringify!(gf_Quatf_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Quatf_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Quatf_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quatf_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quatf_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quatf_t),
            "::",
            stringify!(z)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).w) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quatf_t),
            "::",
            stringify!(w)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_QuatfArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Quath_t {
    pub x: ::std::os::raw::c_short,
    pub y: ::std::os::raw::c_short,
    pub z: ::std::os::raw::c_short,
    pub w: ::std::os::raw::c_short,
}
#[test]
fn bindgen_test_layout_gf_Quath_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Quath_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Quath_t>(),
        8usize,
        concat!("Size of: ", stringify!(gf_Quath_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Quath_t>(),
        2usize,
        concat!("Alignment of ", stringify!(gf_Quath_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quath_t),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quath_t),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quath_t),
            "::",
            stringify!(z)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).w) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Quath_t),
            "::",
            stringify!(w)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_QuathArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Interval_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_BBox3d_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Range1d_t {
    pub mn: f64,
    pub mx: f64,
}
#[test]
fn bindgen_test_layout_gf_Range1d_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Range1d_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Range1d_t>(),
        16usize,
        concat!("Size of: ", stringify!(gf_Range1d_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Range1d_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Range1d_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mn) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range1d_t),
            "::",
            stringify!(mn)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mx) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range1d_t),
            "::",
            stringify!(mx)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Range1f_t {
    pub mn: f32,
    pub mx: f32,
}
#[test]
fn bindgen_test_layout_gf_Range1f_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Range1f_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Range1f_t>(),
        8usize,
        concat!("Size of: ", stringify!(gf_Range1f_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Range1f_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Range1f_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mn) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range1f_t),
            "::",
            stringify!(mn)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mx) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range1f_t),
            "::",
            stringify!(mx)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Range2d_t {
    pub mn: gf_Vec2d_t,
    pub mx: gf_Vec2d_t,
}
#[test]
fn bindgen_test_layout_gf_Range2d_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Range2d_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Range2d_t>(),
        32usize,
        concat!("Size of: ", stringify!(gf_Range2d_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Range2d_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Range2d_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mn) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range2d_t),
            "::",
            stringify!(mn)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mx) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range2d_t),
            "::",
            stringify!(mx)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Range2f_t {
    pub mn: gf_Vec2f_t,
    pub mx: gf_Vec2f_t,
}
#[test]
fn bindgen_test_layout_gf_Range2f_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Range2f_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Range2f_t>(),
        16usize,
        concat!("Size of: ", stringify!(gf_Range2f_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Range2f_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Range2f_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mn) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range2f_t),
            "::",
            stringify!(mn)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mx) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range2f_t),
            "::",
            stringify!(mx)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Range3d_t {
    pub mn: gf_Vec3d_t,
    pub mx: gf_Vec3d_t,
}
#[test]
fn bindgen_test_layout_gf_Range3d_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Range3d_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Range3d_t>(),
        48usize,
        concat!("Size of: ", stringify!(gf_Range3d_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Range3d_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Range3d_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mn) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range3d_t),
            "::",
            stringify!(mn)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mx) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range3d_t),
            "::",
            stringify!(mx)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Range3f_t {
    pub mn: gf_Vec3f_t,
    pub mx: gf_Vec3f_t,
}
#[test]
fn bindgen_test_layout_gf_Range3f_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Range3f_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Range3f_t>(),
        24usize,
        concat!("Size of: ", stringify!(gf_Range3f_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Range3f_t>(),
        4usize,
        concat!("Alignment of ", stringify!(gf_Range3f_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mn) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range3f_t),
            "::",
            stringify!(mn)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mx) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Range3f_t),
            "::",
            stringify!(mx)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Camera_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Frustum_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Ray_t {
    pub startPoint: gf_Vec3d_t,
    pub direction: gf_Vec3d_t,
}
#[test]
fn bindgen_test_layout_gf_Ray_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Ray_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Ray_t>(),
        48usize,
        concat!("Size of: ", stringify!(gf_Ray_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Ray_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Ray_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).startPoint) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Ray_t),
            "::",
            stringify!(startPoint)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).direction) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Ray_t),
            "::",
            stringify!(direction)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gf_Rotation_t {
    pub axis: gf_Vec3d_t,
    pub angle: f64,
}
#[test]
fn bindgen_test_layout_gf_Rotation_t() {
    const UNINIT: ::std::mem::MaybeUninit<gf_Rotation_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<gf_Rotation_t>(),
        32usize,
        concat!("Size of: ", stringify!(gf_Rotation_t))
    );
    assert_eq!(
        ::std::mem::align_of::<gf_Rotation_t>(),
        8usize,
        concat!("Alignment of ", stringify!(gf_Rotation_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).axis) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Rotation_t),
            "::",
            stringify!(axis)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).angle) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(gf_Rotation_t),
            "::",
            stringify!(angle)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct js_Array_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct js_Object_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct js_Value_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct js_TokenValuePair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_NdrVersion_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_DiscoveryPluginContext_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_DiscoveryPlugin_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_DiscoveryPluginRefPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_DiscoveryUri_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_Node_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_NodeUniquePtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_NodeConstPtrVec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_NodeDiscoveryResult_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_NodeDiscoveryResultVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_ParserPlugin_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_Property_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_PropertyUniquePtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_PropertyUniquePtrVec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_SdfTypeIndicator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_Registry_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_NdrRegistryDiscoveryPluginRefPtrVec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_TokenMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ndr_OptionVec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_Arc_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_Cache_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_InvalidAssetPathMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_CachePayloadSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_Changes_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_PcpChangesCacheChanges_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_SourceArcInfo_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_SourceArcInfoVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_Dependency_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_DependencyVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_CulledDependency_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_DynamicFileFormatContext_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_DynamicFileFormatDependencyData_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_DynamicFileFormatInterface_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorBase_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorBaseSharedPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorBaseSharedPtrVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorArcCycle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorArcPermissionDenied_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorCapacityExceeded_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInconsistentPropertyBase_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInconsistentPropertyType_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInconsistentAttributeType_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInconsistentAttributeVariability_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidPrimPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidAssetPathBase_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidAssetPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorMutedAssetPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorTargetPathBase_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidInstaceTargetPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidExternalTargetPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidTargetPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidSublayerOffset_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidReferenceOffset_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidSublayerOwnership_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorInvalidSublayerPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorOpinionAtRelocationSource_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorPrimPermissionDenied_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorPropertyPermissionDenied_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorSublayerCycle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorTargetPermissionDenied_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorUnresolvedPrimPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ErrorVariableExpressionError_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ExpressionVariables_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ExpressionVariableCachingComposer_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ExpressionVariablesDependencyData_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_ExpressionVariablesSource_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_InstanceKey_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_NodeIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_NodeReverseIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_PrimIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_PrimReverseIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_PropertyIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_PropertyReverseIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_LayerStack_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_LayerStackPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_LayerStackPtrVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_LayerStackRefPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_LayerStackIdentifier_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_MapExpression_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_MapExpressionVariable_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_MapFunction_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_MapFunctionPathMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_NamespaceEdits_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_NamespaceEditsCacheSite_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_NamespaceEditsLayerStackSite_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_NodeRef_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_PrimIndex_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_PrimIndexOutputs_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_PrimIndexInputs_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_PropertyIndex_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_Site_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_TargetIndex_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_VariantFallbackMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pcp_SiteTrackerSegment_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractData_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataPtrVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataConstPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataConstPtrVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataRefPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataRefPtrVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataConstRefPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataConstRefPtrVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataValue_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AbstractDataConstValue_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_Allowed_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AssetPath_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AssetPathArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AttributeSpec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AttributeSpecHandle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AttributeSpecHandleVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_AttributeSpecView_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_ChangeBlock_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_ChangeList_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SdfChangeListEntry_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_ChangeListEntryList_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PathChangeListEntryPair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerChangeListVec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SdfCopySpecsValueEdit_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SdfData_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SdfFileFormat_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_FileFormatConstPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_FileFormatFileFormatArguments_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_Layer_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerHandle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerRefPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerHandleVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerHandleSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerHints_t {
    pub mightHaveRelocates: bool,
}
#[test]
fn bindgen_test_layout_sdf_LayerHints_t() {
    const UNINIT: ::std::mem::MaybeUninit<sdf_LayerHints_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<sdf_LayerHints_t>(),
        1usize,
        concat!("Size of: ", stringify!(sdf_LayerHints_t))
    );
    assert_eq!(
        ::std::mem::align_of::<sdf_LayerHints_t>(),
        1usize,
        concat!("Alignment of ", stringify!(sdf_LayerHints_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).mightHaveRelocates) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(sdf_LayerHints_t),
            "::",
            stringify!(mightHaveRelocates)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerOffset_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerOffsetVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerStateDelegate_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerTree_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerTreeHandle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_LayerTreeHandleVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_StringListOp_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NamespaceEdit_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NamespaceEditVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NamespaceEditDetail_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NamespaceEditDetailVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_BatchNamespaceEdit_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_Notice_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeBase_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeBaseLayersDidChange_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeBaseLayersDidChangeConstIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeLayersDidChangeSentPerLayer_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeLayersDidChange_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeLayerInfoDidChange_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeLayerIdentifierDidChange_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeLayerDidReplaceContent_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeLayerDidReloadContent_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeDidSaveLayerToFile_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeLayerDirtinessChanged_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NoticeLayerMutenessChanged_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_Path_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PathSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PathVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SdfPathExpression_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PathPattern_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_Component_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_ExpressionReference_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_Payload_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PayloadVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PredicateExpression_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PredicateExpressionFnArg_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PredicateExpressionFnCall_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PrimSpec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PrimSpecHandle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PrimSpecHandleVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PrimSpecHandleOffsetPair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PrimSpecHandleOffsetPairVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PrimSpecView_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PropertySpec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PropertySpecHandle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PropertySpecHandleVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PropertySpecHandleOffsetPair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PropertySpecHandleOffsetPairVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PropertySpecView_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_DictionaryProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NameOrderProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SubLayerProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_NameEditorProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PathEditorProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_PayloadEditorProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_ReferenceEditorProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariantSelectionProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_RelocatesMapProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariantSetsProxy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_Reference_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_ReferenceVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_RelationshipSpec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_RelationshipSpecHandle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_RelationshipSpecHandleVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_RelationshipSpecView_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_RelationshipSpecHandleOffsetPair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_RelationshipSpecHandleOffsetPairVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SdfSchemaBase_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_FieldDefinition_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SpecDefinition_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SdfSchema_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SchemaBaseFieldDefinitionInfoVec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SdfSpec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_SpecHandle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_TimeCode_t {
    pub time: f64,
}
#[test]
fn bindgen_test_layout_sdf_TimeCode_t() {
    const UNINIT: ::std::mem::MaybeUninit<sdf_TimeCode_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<sdf_TimeCode_t>(),
        8usize,
        concat!("Size of: ", stringify!(sdf_TimeCode_t))
    );
    assert_eq!(
        ::std::mem::align_of::<sdf_TimeCode_t>(),
        8usize,
        concat!("Alignment of ", stringify!(sdf_TimeCode_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).time) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(sdf_TimeCode_t),
            "::",
            stringify!(time)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_RelocatesMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_TimeSampleMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_ValueBlock_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_ValueTypeName_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_ValueTypeNameVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_TupleDimensions_t {
    pub d: [usize; 2usize],
    pub size: usize,
}
#[test]
fn bindgen_test_layout_sdf_TupleDimensions_t() {
    const UNINIT: ::std::mem::MaybeUninit<sdf_TupleDimensions_t> =
        ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<sdf_TupleDimensions_t>(),
        24usize,
        concat!("Size of: ", stringify!(sdf_TupleDimensions_t))
    );
    assert_eq!(
        ::std::mem::align_of::<sdf_TupleDimensions_t>(),
        8usize,
        concat!("Alignment of ", stringify!(sdf_TupleDimensions_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).d) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(sdf_TupleDimensions_t),
            "::",
            stringify!(d)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).size) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(sdf_TupleDimensions_t),
            "::",
            stringify!(size)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariableExpression_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariableExpressionResult_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariantSetSpec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariantSetSpecHandle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariantSpec_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariantSpecHandle_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariantSpecHandleVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdf_VariantView_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdr_Registry_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdr_ShaderNode_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdr_ShaderNodeVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sdr_ShaderProperty_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct std_String_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct std_StringVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct std_StringPair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct std_StringPairVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct std_StringSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct std_StringUnorderedSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct std_DoubleVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct std_DoubleSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tf_Enum_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tf_Token_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tf_Type_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tf_TypeSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tf_TypeVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tf_TokenVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tf_TokenSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tf_TokenTokenPair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_AttributeQuery_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_AttributeQueryVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_ClipsAPI_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_CollectionAPI_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_CollectionAPIVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_CollectionMembershipQuery_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_CollectionMembershipQueryHash_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_CollectionMembershipQueryPathExpansionRuleMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_MetadataValueMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_CrateInfo_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_CrateInfoSection_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_CratreInfoSectionVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_CrateInfoSummaryStats_t {
    pub numSpecs: usize,
    pub numUniquePaths: usize,
    pub numUniqueTokens: usize,
    pub numUniqueStrings: usize,
    pub numUniqueFields: usize,
    pub numUniqueFieldSets: usize,
}
#[test]
fn bindgen_test_layout_usd_CrateInfoSummaryStats_t() {
    const UNINIT: ::std::mem::MaybeUninit<usd_CrateInfoSummaryStats_t> =
        ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<usd_CrateInfoSummaryStats_t>(),
        48usize,
        concat!("Size of: ", stringify!(usd_CrateInfoSummaryStats_t))
    );
    assert_eq!(
        ::std::mem::align_of::<usd_CrateInfoSummaryStats_t>(),
        8usize,
        concat!("Alignment of ", stringify!(usd_CrateInfoSummaryStats_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).numSpecs) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_CrateInfoSummaryStats_t),
            "::",
            stringify!(numSpecs)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).numUniquePaths) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_CrateInfoSummaryStats_t),
            "::",
            stringify!(numUniquePaths)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).numUniqueTokens) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_CrateInfoSummaryStats_t),
            "::",
            stringify!(numUniqueTokens)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).numUniqueStrings) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_CrateInfoSummaryStats_t),
            "::",
            stringify!(numUniqueStrings)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).numUniqueFields) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_CrateInfoSummaryStats_t),
            "::",
            stringify!(numUniqueFields)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).numUniqueFieldSets) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_CrateInfoSummaryStats_t),
            "::",
            stringify!(numUniqueFieldSets)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_EditTarget_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Inherits_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_ModelAPI_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Notice_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageNotice_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageContentsChanged_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_ObjectsChanged_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_ObjectsChangedPathRange_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_ObjectsChangedPathRangeIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageEditTargetChanged_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_LayerMutingChanged_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Attribute_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_AttributeVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Object_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_ObjectSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Prim_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimTypeInfo_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimFlagsPredicate_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Property_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PropertyVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Relationship_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_RelationshipVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Payloads_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimCompositionQuery_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimCompositionQueryArc_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimCompositionQueryArcVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimCompositionQueryFilter_t {
    pub arcTypeFilter: ::std::os::raw::c_int,
    pub dependencyTypeFilter: ::std::os::raw::c_int,
    pub arcIntroducedFilter: ::std::os::raw::c_int,
    pub hasSpecsFilter: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_usd_PrimCompositionQueryFilter_t() {
    const UNINIT: ::std::mem::MaybeUninit<usd_PrimCompositionQueryFilter_t> =
        ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<usd_PrimCompositionQueryFilter_t>(),
        16usize,
        concat!("Size of: ", stringify!(usd_PrimCompositionQueryFilter_t))
    );
    assert_eq!(
        ::std::mem::align_of::<usd_PrimCompositionQueryFilter_t>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(usd_PrimCompositionQueryFilter_t)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).arcTypeFilter) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_PrimCompositionQueryFilter_t),
            "::",
            stringify!(arcTypeFilter)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).dependencyTypeFilter) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_PrimCompositionQueryFilter_t),
            "::",
            stringify!(dependencyTypeFilter)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).arcIntroducedFilter) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_PrimCompositionQueryFilter_t),
            "::",
            stringify!(arcIntroducedFilter)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).hasSpecsFilter) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_PrimCompositionQueryFilter_t),
            "::",
            stringify!(hasSpecsFilter)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimDefinition_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimDefinitionProperty_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimDefinitionAttribute_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimDefinitionRelationship_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimRange_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimRangeIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimSiblingRange_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimSiblingIterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimSubtreeRange_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_References_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_ResolveInfo_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_ResolveTarget_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_APISchemaBase_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_SchemaBase_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_SchemaRegistry_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_SchemaRegistrySchemaInfo_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_SchemaRegistrySchemaInfoConstPtrVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_TokenSchemaVersionPair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_SchemaRegistryTokenToTokenVectorMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PrimDefinitionPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Specializes_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_Stage_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageRefPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageRefPtrVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageWeakPtr_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageCache_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageCacheId_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_UsdStageCacheRequest_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageLoadRules_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PathStageLoadRulesRulePair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_PathStageLoadRulesRulePairVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_UsdStagePopulationMask_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_TimeCode_t {
    pub time: f64,
}
#[test]
fn bindgen_test_layout_usd_TimeCode_t() {
    const UNINIT: ::std::mem::MaybeUninit<usd_TimeCode_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<usd_TimeCode_t>(),
        8usize,
        concat!("Size of: ", stringify!(usd_TimeCode_t))
    );
    assert_eq!(
        ::std::mem::align_of::<usd_TimeCode_t>(),
        8usize,
        concat!("Alignment of ", stringify!(usd_TimeCode_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).time) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(usd_TimeCode_t),
            "::",
            stringify!(time)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_TimeCodeVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_UsdVariantSet_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_UsdVariantSets_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usd_StageEditTargetPair_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_BasisCurves_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_BBoxCache_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_PathMatrixHashMap_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Boundable_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Camera_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Capsule_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Cone_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_ConstraintTarget_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_ConstraintTargetVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Cube_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Curves_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Cylinder_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Gprim_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_HermiteCurves_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Imageable_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_ImageablePurposeInfo_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Mesh_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_ModelAPI_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_MotionAPI_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_NurbsCurves_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_NurbsPatch_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Plane_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_PointBased_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_PointInstancer_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Points_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Primvar_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_PrimvarVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_PrimvarsAPI_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Scope_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Sphere_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Subset_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_SubsetVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_VisibilityAPI_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Xform_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_XformCache_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_XformCommonAPI_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_XformCommonAPIOps_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_Xformable_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_XformOp_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct usdGeom_XformOpVector_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vt_Value_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vt_TokenArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vt_BoolArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vt_IntArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vt_FloatArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vt_DoubleArray_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vt_Dictionary_t {
    _unused: [u8; 0],
}
extern "C" {
    #[doc = " functions"]
    pub fn ar_ArAsset_GetSize(
        _this: *const ar_ArAsset_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ArAsset_GetBuffer(
        _this: *const ar_ArAsset_t,
        _result: *mut *mut ar_ConstCharSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ArAsset_Read(
        _this: *const ar_ArAsset_t,
        buffer: *mut ::std::os::raw::c_void,
        count: usize,
        offset: usize,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ArAsset_GetFileUnsafe(
        _this: *const ar_ArAsset_t,
        _result: *mut *mut ar_FileSizePair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ArAsset_GetDetachedAsset(
        _this: *const ar_ArAsset_t,
        _result: *mut *mut ar_AssetSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ArAsset_dtor(_this: *mut ar_ArAsset_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_AssetSharedPtr_dtor(_this: *mut ar_AssetSharedPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_AssetSharedPtr_GetSize(
        _this: *const ar_AssetSharedPtr_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_AssetSharedPtr_GetBuffer(
        _this: *const ar_AssetSharedPtr_t,
        _result: *mut *mut ar_ConstCharSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_AssetSharedPtr_Read(
        _this: *const ar_AssetSharedPtr_t,
        buffer: *mut ::std::os::raw::c_void,
        count: usize,
        offset: usize,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_AssetSharedPtr_GetFileUnsafe(
        _this: *const ar_AssetSharedPtr_t,
        _result: *mut *mut ar_FileSizePair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_AssetSharedPtr_GetDetachedAsset(
        _this: *const ar_AssetSharedPtr_t,
        _result: *mut *mut ar_AssetSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ConstCharSharedPtr_get(
        _this: *const ar_ConstCharSharedPtr_t,
        _result: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ConstCharSharedPtr_dtor(_this: *mut ar_ConstCharSharedPtr_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_FileSizePair_dtor(_this: *mut ar_FileSizePair_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_AssetInfo_default(_result: *mut *mut ar_AssetInfo_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_AssetInfo_dtor(_this: *mut ar_AssetInfo_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolvedPath_GetPathString(
        _this: *const ar_ResolvedPath_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolvedPath_GetHash(
        _this: *const ar_ResolvedPath_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolvedPath_IsEmpty(
        _this: *const ar_ResolvedPath_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolvedPath_ctor(
        resolvedPath: *const std_String_t,
        _result: *mut *mut ar_ResolvedPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolvedPath_dtor(_this: *mut ar_ResolvedPath_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_CreateIdentifier(
        _this: *const ar_Resolver_t,
        assetPath: *const std_String_t,
        anchorAssetPath: *const ar_ResolvedPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_CreateIdentifierForNewAsset(
        _this: *const ar_Resolver_t,
        assetPath: *const std_String_t,
        anchorAssetPath: *const ar_ResolvedPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_Resolve(
        _this: *const ar_Resolver_t,
        assetPath: *const std_String_t,
        _result: *mut *mut ar_ResolvedPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_ResolveForNewAsset(
        _this: *const ar_Resolver_t,
        assetPath: *const std_String_t,
        _result: *mut *mut ar_ResolvedPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_BindContext(
        _this: *mut ar_Resolver_t,
        context: *const ar_ResolverContext_t,
        bindingData: *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_UnbindContext(
        _this: *mut ar_Resolver_t,
        context: *const ar_ResolverContext_t,
        bindingData: *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_CreateDefaultContext(
        _this: *const ar_Resolver_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_CreateDefaultContextForAsset(
        _this: *const ar_Resolver_t,
        assetPath: *const std_String_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_CreateContextFromString_00(
        _this: *const ar_Resolver_t,
        contextStr: *const std_String_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_CreateContextFromString_01(
        _this: *const ar_Resolver_t,
        uriScheme: *const std_String_t,
        contextStr: *const std_String_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_CreateContextFromStrings(
        _this: *const ar_Resolver_t,
        contextStrs: *const std_StringPairVector_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_RefreshContext(
        _this: *mut ar_Resolver_t,
        context: *const ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_GetCurrentContext(
        _this: *const ar_Resolver_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_IsContextDependentPath(
        _this: *const ar_Resolver_t,
        assetPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_GetExtension(
        _this: *const ar_Resolver_t,
        assetPath: *const std_String_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_GetAssetInfo(
        _this: *const ar_Resolver_t,
        assetPath: *const std_String_t,
        resolvedPath: *const ar_ResolvedPath_t,
        _result: *mut *mut ar_AssetInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_GetModificationTimestamp(
        _this: *const ar_Resolver_t,
        assetPath: *const std_String_t,
        resolvedPath: *const ar_ResolvedPath_t,
        _result: *mut *mut ar_Timestamp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_OpenAsset(
        _this: *const ar_Resolver_t,
        resolvedPath: *const ar_ResolvedPath_t,
        _result: *mut *mut ar_AssetSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_OpenAssetForWrite(
        _this: *const ar_Resolver_t,
        resolvedPath: *const ar_ResolvedPath_t,
        writeMode: ::std::os::raw::c_int,
        _result: *mut *mut ar_WritableAssetSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_CanWriteAssetToPath(
        _this: *const ar_Resolver_t,
        resolvedPath: *const ar_ResolvedPath_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_BeginCacheScope(
        _this: *mut ar_Resolver_t,
        cacheScopeData: *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_EndCacheScope(
        _this: *mut ar_Resolver_t,
        cacheScopeData: *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_IsRepositoryPath(
        _this: *const ar_Resolver_t,
        path: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Resolver_dtor(_this: *mut ar_Resolver_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContext_IsEmpty(
        _this: *const ar_ResolverContext_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContext_GetDebugString(
        _this: *const ar_ResolverContext_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContext_op_eq(
        _this: *const ar_ResolverContext_t,
        rhs: *const ar_ResolverContext_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContext_op_neq(
        _this: *const ar_ResolverContext_t,
        rhs: *const ar_ResolverContext_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContext_op_lt(
        _this: *const ar_ResolverContext_t,
        rhs: *const ar_ResolverContext_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContext_default(
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContext_ctor(
        ctxs: *const ar_ResolverContextVector_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContext_dtor(_this: *mut ar_ResolverContext_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_data(
        _this: *mut ar_ResolverContextVector_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_data_const(
        _this: *const ar_ResolverContextVector_t,
        _result: *mut *const ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_empty(
        _this: *const ar_ResolverContextVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_size(
        _this: *const ar_ResolverContextVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_max_size(
        _this: *const ar_ResolverContextVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_capacity(
        _this: *const ar_ResolverContextVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_clear(
        _this: *mut ar_ResolverContextVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_pop_back(
        _this: *mut ar_ResolverContextVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_op_index(
        _this: *const ar_ResolverContextVector_t,
        __n: usize,
        _result: *mut *const ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_default(
        _result: *mut *mut ar_ResolverContextVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_ResolverContextVector_dtor(
        _this: *mut ar_ResolverContextVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Timestamp_IsValid(
        _this: *const ar_Timestamp_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Timestamp_GetTime(
        _this: *const ar_Timestamp_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Timestamp_default(_result: *mut *mut ar_Timestamp_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Timestamp_from_time(
        time: f64,
        _result: *mut *mut ar_Timestamp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_Timestamp_dtor(_this: *mut ar_Timestamp_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_WritableAsset_Close(
        _this: *mut ar_WritableAsset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_WritableAsset_Write(
        _this: *mut ar_WritableAsset_t,
        buffer: *const ::std::os::raw::c_void,
        count: usize,
        offset: usize,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_WritableAsset_dtor(_this: *mut ar_WritableAsset_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_WritableAssetSharedPtr_dtor(
        _this: *mut ar_WritableAssetSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_WritableAssetSharedPtr_Close(
        _this: *mut ar_WritableAssetSharedPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_WritableAssetSharedPtr_Write(
        _this: *mut ar_WritableAssetSharedPtr_t,
        buffer: *const ::std::os::raw::c_void,
        count: usize,
        offset: usize,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_set_ar_resolver_factory(
        type_: *const tf_Type_t,
        create_id: *mut ::std::os::raw::c_void,
        create_identifier: *mut ::std::os::raw::c_void,
        open_asset: *mut ::std::os::raw::c_void,
        resolve: *mut ::std::os::raw::c_void,
        resolve_for_new_asset: *mut ::std::os::raw::c_void,
        open_asset_for_write: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ar_asset_from_string(
        string: *mut std_String_t,
        _result: *mut *mut ar_AssetSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2fArray_data(
        _this: *mut gf_Vec2fArray_t,
        _result: *mut *mut gf_Vec2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2fArray_data_const(
        _this: *const gf_Vec2fArray_t,
        _result: *mut *const gf_Vec2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2fArray_size(
        _this: *const gf_Vec2fArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2fArray_resize(
        _this: *mut gf_Vec2fArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2fArray_op_index(
        _this: *mut gf_Vec2fArray_t,
        index: usize,
        _result: *mut *mut gf_Vec2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2fArray_op_index_const(
        _this: *const gf_Vec2fArray_t,
        index: usize,
        _result: *mut *const gf_Vec2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2fArray_new(_result: *mut *mut gf_Vec2fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2fArray_dtor(_this: *mut gf_Vec2fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArray_data(
        _this: *mut gf_Vec3fArray_t,
        _result: *mut *mut gf_Vec3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArray_data_const(
        _this: *const gf_Vec3fArray_t,
        _result: *mut *const gf_Vec3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArray_size(
        _this: *const gf_Vec3fArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArray_resize(
        _this: *mut gf_Vec3fArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArray_op_index(
        _this: *mut gf_Vec3fArray_t,
        index: usize,
        _result: *mut *mut gf_Vec3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArray_op_index_const(
        _this: *const gf_Vec3fArray_t,
        index: usize,
        _result: *mut *const gf_Vec3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArray_new(_result: *mut *mut gf_Vec3fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArray_dtor(_this: *mut gf_Vec3fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_data(
        _this: *mut gf_Vec3fArrayVector_t,
        _result: *mut *mut gf_Vec3fArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_data_const(
        _this: *const gf_Vec3fArrayVector_t,
        _result: *mut *const gf_Vec3fArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_empty(
        _this: *const gf_Vec3fArrayVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_size(
        _this: *const gf_Vec3fArrayVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_max_size(
        _this: *const gf_Vec3fArrayVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_capacity(
        _this: *const gf_Vec3fArrayVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_clear(_this: *mut gf_Vec3fArrayVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_pop_back(_this: *mut gf_Vec3fArrayVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_op_index(
        _this: *const gf_Vec3fArrayVector_t,
        __n: usize,
        _result: *mut *const gf_Vec3fArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_default(
        _result: *mut *mut gf_Vec3fArrayVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3fArrayVector_dtor(_this: *mut gf_Vec3fArrayVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fArray_data(
        _this: *mut gf_Vec4fArray_t,
        _result: *mut *mut gf_Vec4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fArray_data_const(
        _this: *const gf_Vec4fArray_t,
        _result: *mut *const gf_Vec4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fArray_size(
        _this: *const gf_Vec4fArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fArray_resize(
        _this: *mut gf_Vec4fArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fArray_op_index(
        _this: *mut gf_Vec4fArray_t,
        index: usize,
        _result: *mut *mut gf_Vec4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fArray_op_index_const(
        _this: *const gf_Vec4fArray_t,
        index: usize,
        _result: *mut *const gf_Vec4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fArray_new(_result: *mut *mut gf_Vec4fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fArray_dtor(_this: *mut gf_Vec4fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_data(
        _this: *mut gf_Vec4fVector_t,
        _result: *mut *mut gf_Vec4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_data_const(
        _this: *const gf_Vec4fVector_t,
        _result: *mut *const gf_Vec4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_empty(
        _this: *const gf_Vec4fVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_size(
        _this: *const gf_Vec4fVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_max_size(
        _this: *const gf_Vec4fVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_capacity(
        _this: *const gf_Vec4fVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_clear(_this: *mut gf_Vec4fVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_pop_back(_this: *mut gf_Vec4fVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_op_index(
        _this: *const gf_Vec4fVector_t,
        __n: usize,
        _result: *mut *const gf_Vec4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_default(_result: *mut *mut gf_Vec4fVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4fVector_dtor(_this: *mut gf_Vec4fVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2hArray_data(
        _this: *mut gf_Vec2hArray_t,
        _result: *mut *mut gf_Vec2h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2hArray_data_const(
        _this: *const gf_Vec2hArray_t,
        _result: *mut *const gf_Vec2h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2hArray_size(
        _this: *const gf_Vec2hArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2hArray_resize(
        _this: *mut gf_Vec2hArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2hArray_op_index(
        _this: *mut gf_Vec2hArray_t,
        index: usize,
        _result: *mut *mut gf_Vec2h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2hArray_op_index_const(
        _this: *const gf_Vec2hArray_t,
        index: usize,
        _result: *mut *const gf_Vec2h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2hArray_new(_result: *mut *mut gf_Vec2hArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2hArray_dtor(_this: *mut gf_Vec2hArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3hArray_data(
        _this: *mut gf_Vec3hArray_t,
        _result: *mut *mut gf_Vec3h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3hArray_data_const(
        _this: *const gf_Vec3hArray_t,
        _result: *mut *const gf_Vec3h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3hArray_size(
        _this: *const gf_Vec3hArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3hArray_resize(
        _this: *mut gf_Vec3hArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3hArray_op_index(
        _this: *mut gf_Vec3hArray_t,
        index: usize,
        _result: *mut *mut gf_Vec3h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3hArray_op_index_const(
        _this: *const gf_Vec3hArray_t,
        index: usize,
        _result: *mut *const gf_Vec3h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3hArray_new(_result: *mut *mut gf_Vec3hArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3hArray_dtor(_this: *mut gf_Vec3hArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4hArray_data(
        _this: *mut gf_Vec4hArray_t,
        _result: *mut *mut gf_Vec4h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4hArray_data_const(
        _this: *const gf_Vec4hArray_t,
        _result: *mut *const gf_Vec4h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4hArray_size(
        _this: *const gf_Vec4hArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4hArray_resize(
        _this: *mut gf_Vec4hArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4hArray_op_index(
        _this: *mut gf_Vec4hArray_t,
        index: usize,
        _result: *mut *mut gf_Vec4h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4hArray_op_index_const(
        _this: *const gf_Vec4hArray_t,
        index: usize,
        _result: *mut *const gf_Vec4h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4hArray_new(_result: *mut *mut gf_Vec4hArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4hArray_dtor(_this: *mut gf_Vec4hArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2dArray_data(
        _this: *mut gf_Vec2dArray_t,
        _result: *mut *mut gf_Vec2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2dArray_data_const(
        _this: *const gf_Vec2dArray_t,
        _result: *mut *const gf_Vec2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2dArray_size(
        _this: *const gf_Vec2dArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2dArray_resize(
        _this: *mut gf_Vec2dArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2dArray_op_index(
        _this: *mut gf_Vec2dArray_t,
        index: usize,
        _result: *mut *mut gf_Vec2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2dArray_op_index_const(
        _this: *const gf_Vec2dArray_t,
        index: usize,
        _result: *mut *const gf_Vec2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2dArray_new(_result: *mut *mut gf_Vec2dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2dArray_dtor(_this: *mut gf_Vec2dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_data(
        _this: *mut gf_Vec3dVector_t,
        _result: *mut *mut gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_data_const(
        _this: *const gf_Vec3dVector_t,
        _result: *mut *const gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_empty(
        _this: *const gf_Vec3dVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_size(
        _this: *const gf_Vec3dVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_max_size(
        _this: *const gf_Vec3dVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_capacity(
        _this: *const gf_Vec3dVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_clear(_this: *mut gf_Vec3dVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_pop_back(_this: *mut gf_Vec3dVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_op_index(
        _this: *const gf_Vec3dVector_t,
        __n: usize,
        _result: *mut *const gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_default(_result: *mut *mut gf_Vec3dVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dVector_dtor(_this: *mut gf_Vec3dVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dArray_data(
        _this: *mut gf_Vec3dArray_t,
        _result: *mut *mut gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dArray_data_const(
        _this: *const gf_Vec3dArray_t,
        _result: *mut *const gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dArray_size(
        _this: *const gf_Vec3dArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dArray_resize(
        _this: *mut gf_Vec3dArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dArray_op_index(
        _this: *mut gf_Vec3dArray_t,
        index: usize,
        _result: *mut *mut gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dArray_op_index_const(
        _this: *const gf_Vec3dArray_t,
        index: usize,
        _result: *mut *const gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dArray_new(_result: *mut *mut gf_Vec3dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3dArray_dtor(_this: *mut gf_Vec3dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4dArray_data(
        _this: *mut gf_Vec4dArray_t,
        _result: *mut *mut gf_Vec4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4dArray_data_const(
        _this: *const gf_Vec4dArray_t,
        _result: *mut *const gf_Vec4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4dArray_size(
        _this: *const gf_Vec4dArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4dArray_resize(
        _this: *mut gf_Vec4dArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4dArray_op_index(
        _this: *mut gf_Vec4dArray_t,
        index: usize,
        _result: *mut *mut gf_Vec4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4dArray_op_index_const(
        _this: *const gf_Vec4dArray_t,
        index: usize,
        _result: *mut *const gf_Vec4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4dArray_new(_result: *mut *mut gf_Vec4dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4dArray_dtor(_this: *mut gf_Vec4dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2iArray_data(
        _this: *mut gf_Vec2iArray_t,
        _result: *mut *mut gf_Vec2i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2iArray_data_const(
        _this: *const gf_Vec2iArray_t,
        _result: *mut *const gf_Vec2i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2iArray_size(
        _this: *const gf_Vec2iArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2iArray_resize(
        _this: *mut gf_Vec2iArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2iArray_op_index(
        _this: *mut gf_Vec2iArray_t,
        index: usize,
        _result: *mut *mut gf_Vec2i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2iArray_op_index_const(
        _this: *const gf_Vec2iArray_t,
        index: usize,
        _result: *mut *const gf_Vec2i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2iArray_new(_result: *mut *mut gf_Vec2iArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec2iArray_dtor(_this: *mut gf_Vec2iArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3iArray_data(
        _this: *mut gf_Vec3iArray_t,
        _result: *mut *mut gf_Vec3i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3iArray_data_const(
        _this: *const gf_Vec3iArray_t,
        _result: *mut *const gf_Vec3i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3iArray_size(
        _this: *const gf_Vec3iArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3iArray_resize(
        _this: *mut gf_Vec3iArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3iArray_op_index(
        _this: *mut gf_Vec3iArray_t,
        index: usize,
        _result: *mut *mut gf_Vec3i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3iArray_op_index_const(
        _this: *const gf_Vec3iArray_t,
        index: usize,
        _result: *mut *const gf_Vec3i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3iArray_new(_result: *mut *mut gf_Vec3iArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec3iArray_dtor(_this: *mut gf_Vec3iArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4iArray_data(
        _this: *mut gf_Vec4iArray_t,
        _result: *mut *mut gf_Vec4i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4iArray_data_const(
        _this: *const gf_Vec4iArray_t,
        _result: *mut *const gf_Vec4i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4iArray_size(
        _this: *const gf_Vec4iArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4iArray_resize(
        _this: *mut gf_Vec4iArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4iArray_op_index(
        _this: *mut gf_Vec4iArray_t,
        index: usize,
        _result: *mut *mut gf_Vec4i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4iArray_op_index_const(
        _this: *const gf_Vec4iArray_t,
        index: usize,
        _result: *mut *const gf_Vec4i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4iArray_new(_result: *mut *mut gf_Vec4iArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Vec4iArray_dtor(_this: *mut gf_Vec4iArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2dArray_data(
        _this: *mut gf_Matrix2dArray_t,
        _result: *mut *mut gf_Matrix2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2dArray_data_const(
        _this: *const gf_Matrix2dArray_t,
        _result: *mut *const gf_Matrix2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2dArray_size(
        _this: *const gf_Matrix2dArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2dArray_resize(
        _this: *mut gf_Matrix2dArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2dArray_op_index(
        _this: *mut gf_Matrix2dArray_t,
        index: usize,
        _result: *mut *mut gf_Matrix2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2dArray_op_index_const(
        _this: *const gf_Matrix2dArray_t,
        index: usize,
        _result: *mut *const gf_Matrix2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2dArray_new(_result: *mut *mut gf_Matrix2dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2dArray_dtor(_this: *mut gf_Matrix2dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3dArray_data(
        _this: *mut gf_Matrix3dArray_t,
        _result: *mut *mut gf_Matrix3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3dArray_data_const(
        _this: *const gf_Matrix3dArray_t,
        _result: *mut *const gf_Matrix3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3dArray_size(
        _this: *const gf_Matrix3dArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3dArray_resize(
        _this: *mut gf_Matrix3dArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3dArray_op_index(
        _this: *mut gf_Matrix3dArray_t,
        index: usize,
        _result: *mut *mut gf_Matrix3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3dArray_op_index_const(
        _this: *const gf_Matrix3dArray_t,
        index: usize,
        _result: *mut *const gf_Matrix3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3dArray_new(_result: *mut *mut gf_Matrix3dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3dArray_dtor(_this: *mut gf_Matrix3dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArray_data(
        _this: *mut gf_Matrix4dArray_t,
        _result: *mut *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArray_data_const(
        _this: *const gf_Matrix4dArray_t,
        _result: *mut *const gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArray_size(
        _this: *const gf_Matrix4dArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArray_resize(
        _this: *mut gf_Matrix4dArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArray_op_index(
        _this: *mut gf_Matrix4dArray_t,
        index: usize,
        _result: *mut *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArray_op_index_const(
        _this: *const gf_Matrix4dArray_t,
        index: usize,
        _result: *mut *const gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArray_new(_result: *mut *mut gf_Matrix4dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArray_dtor(_this: *mut gf_Matrix4dArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_data(
        _this: *mut gf_Matrix4dArrayVector_t,
        _result: *mut *mut gf_Matrix4dArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_data_const(
        _this: *const gf_Matrix4dArrayVector_t,
        _result: *mut *const gf_Matrix4dArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_empty(
        _this: *const gf_Matrix4dArrayVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_size(
        _this: *const gf_Matrix4dArrayVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_max_size(
        _this: *const gf_Matrix4dArrayVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_capacity(
        _this: *const gf_Matrix4dArrayVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_clear(
        _this: *mut gf_Matrix4dArrayVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_pop_back(
        _this: *mut gf_Matrix4dArrayVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_op_index(
        _this: *const gf_Matrix4dArrayVector_t,
        __n: usize,
        _result: *mut *const gf_Matrix4dArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_default(
        _result: *mut *mut gf_Matrix4dArrayVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4dArrayVector_dtor(
        _this: *mut gf_Matrix4dArrayVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2fArray_data(
        _this: *mut gf_Matrix2fArray_t,
        _result: *mut *mut gf_Matrix2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2fArray_data_const(
        _this: *const gf_Matrix2fArray_t,
        _result: *mut *const gf_Matrix2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2fArray_size(
        _this: *const gf_Matrix2fArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2fArray_resize(
        _this: *mut gf_Matrix2fArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2fArray_op_index(
        _this: *mut gf_Matrix2fArray_t,
        index: usize,
        _result: *mut *mut gf_Matrix2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2fArray_op_index_const(
        _this: *const gf_Matrix2fArray_t,
        index: usize,
        _result: *mut *const gf_Matrix2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2fArray_new(_result: *mut *mut gf_Matrix2fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix2fArray_dtor(_this: *mut gf_Matrix2fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3fArray_data(
        _this: *mut gf_Matrix3fArray_t,
        _result: *mut *mut gf_Matrix3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3fArray_data_const(
        _this: *const gf_Matrix3fArray_t,
        _result: *mut *const gf_Matrix3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3fArray_size(
        _this: *const gf_Matrix3fArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3fArray_resize(
        _this: *mut gf_Matrix3fArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3fArray_op_index(
        _this: *mut gf_Matrix3fArray_t,
        index: usize,
        _result: *mut *mut gf_Matrix3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3fArray_op_index_const(
        _this: *const gf_Matrix3fArray_t,
        index: usize,
        _result: *mut *const gf_Matrix3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3fArray_new(_result: *mut *mut gf_Matrix3fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix3fArray_dtor(_this: *mut gf_Matrix3fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4fArray_data(
        _this: *mut gf_Matrix4fArray_t,
        _result: *mut *mut gf_Matrix4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4fArray_data_const(
        _this: *const gf_Matrix4fArray_t,
        _result: *mut *const gf_Matrix4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4fArray_size(
        _this: *const gf_Matrix4fArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4fArray_resize(
        _this: *mut gf_Matrix4fArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4fArray_op_index(
        _this: *mut gf_Matrix4fArray_t,
        index: usize,
        _result: *mut *mut gf_Matrix4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4fArray_op_index_const(
        _this: *const gf_Matrix4fArray_t,
        index: usize,
        _result: *mut *const gf_Matrix4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4fArray_new(_result: *mut *mut gf_Matrix4fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Matrix4fArray_dtor(_this: *mut gf_Matrix4fArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatdArray_data(
        _this: *mut gf_QuatdArray_t,
        _result: *mut *mut gf_Quatd_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatdArray_data_const(
        _this: *const gf_QuatdArray_t,
        _result: *mut *const gf_Quatd_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatdArray_size(
        _this: *const gf_QuatdArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatdArray_resize(
        _this: *mut gf_QuatdArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatdArray_op_index(
        _this: *mut gf_QuatdArray_t,
        index: usize,
        _result: *mut *mut gf_Quatd_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatdArray_op_index_const(
        _this: *const gf_QuatdArray_t,
        index: usize,
        _result: *mut *const gf_Quatd_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatdArray_new(_result: *mut *mut gf_QuatdArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatdArray_dtor(_this: *mut gf_QuatdArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatfArray_data(
        _this: *mut gf_QuatfArray_t,
        _result: *mut *mut gf_Quatf_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatfArray_data_const(
        _this: *const gf_QuatfArray_t,
        _result: *mut *const gf_Quatf_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatfArray_size(
        _this: *const gf_QuatfArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatfArray_resize(
        _this: *mut gf_QuatfArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatfArray_op_index(
        _this: *mut gf_QuatfArray_t,
        index: usize,
        _result: *mut *mut gf_Quatf_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatfArray_op_index_const(
        _this: *const gf_QuatfArray_t,
        index: usize,
        _result: *mut *const gf_Quatf_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatfArray_new(_result: *mut *mut gf_QuatfArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuatfArray_dtor(_this: *mut gf_QuatfArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuathArray_data(
        _this: *mut gf_QuathArray_t,
        _result: *mut *mut gf_Quath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuathArray_data_const(
        _this: *const gf_QuathArray_t,
        _result: *mut *const gf_Quath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuathArray_size(
        _this: *const gf_QuathArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuathArray_resize(
        _this: *mut gf_QuathArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuathArray_op_index(
        _this: *mut gf_QuathArray_t,
        index: usize,
        _result: *mut *mut gf_Quath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuathArray_op_index_const(
        _this: *const gf_QuathArray_t,
        index: usize,
        _result: *mut *const gf_Quath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuathArray_new(_result: *mut *mut gf_QuathArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_QuathArray_dtor(_this: *mut gf_QuathArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Interval_GetMin(
        _this: *const gf_Interval_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Interval_GetMax(
        _this: *const gf_Interval_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Interval_GetSize(
        _this: *const gf_Interval_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Interval_default(_result: *mut *mut gf_Interval_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Interval_dtor(_this: *mut gf_Interval_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_BBox3d_Set(
        _this: *mut gf_BBox3d_t,
        box_: *const gf_Range3d_t,
        matrix: *const gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_BBox3d_SetMatrix(
        _this: *mut gf_BBox3d_t,
        matrix: *const gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_BBox3d_SetRange(
        _this: *mut gf_BBox3d_t,
        box_: *const gf_Range3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_BBox3d_new(_result: *mut *mut gf_BBox3d_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_BBox3d_from_range(
        box_: *const gf_Range3d_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_BBox3d_from_range_and_transform(
        box_: *const gf_Range3d_t,
        matrix: *mut gf_Matrix4d_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_BBox3d_dtor(_this: *mut gf_BBox3d_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetTransform(
        _this: *mut gf_Camera_t,
        val: *const gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetClippingRange(
        _this: *mut gf_Camera_t,
        val: *const gf_Range1f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetClippingPlanes(
        _this: *mut gf_Camera_t,
        val: *const gf_Vec4fVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetFStop(_this: *mut gf_Camera_t, val: f32) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetFocusDistance(_this: *mut gf_Camera_t, val: f32) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetFocalLength(_this: *mut gf_Camera_t, val: f32) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetHorizontalAperture(
        _this: *mut gf_Camera_t,
        val: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetHorizontalApertureOffset(
        _this: *mut gf_Camera_t,
        val: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetVerticalAperture(
        _this: *mut gf_Camera_t,
        val: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetVerticalApertureOffset(
        _this: *mut gf_Camera_t,
        val: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetTransform(
        _this: *const gf_Camera_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetClippingRange(
        _this: *const gf_Camera_t,
        _result: *mut gf_Range1f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetClippingPlanes(
        _this: *const gf_Camera_t,
        _result: *mut *const gf_Vec4fVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetFStop(
        _this: *const gf_Camera_t,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetFocusDistance(
        _this: *const gf_Camera_t,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetFocalLength(
        _this: *const gf_Camera_t,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetHorizontalAperture(
        _this: *const gf_Camera_t,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetHorizontalApertureOffset(
        _this: *const gf_Camera_t,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetVerticalAperture(
        _this: *const gf_Camera_t,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetVerticalApertureOffset(
        _this: *const gf_Camera_t,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetFieldOfView(
        _this: *const gf_Camera_t,
        direction: ::std::os::raw::c_uint,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_GetFrustum(
        _this: *const gf_Camera_t,
        _result: *mut *mut gf_Frustum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetPerspectiveFromAspectRatioAndFieldOfView(
        _this: *mut gf_Camera_t,
        aspectRatio: f32,
        fieldOfView: f32,
        direction: ::std::os::raw::c_uint,
        horizontalAperture: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetOrthographicFromAspectRatioAndSize(
        _this: *mut gf_Camera_t,
        aspectRatio: f32,
        orthographicSize: f32,
        direction: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_SetFromViewAndProjectionMatrix(
        _this: *mut gf_Camera_t,
        viewMatrix: *const gf_Matrix4d_t,
        projMatix: *const gf_Matrix4d_t,
        focalLength: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_new(
        transform: *const gf_Matrix4d_t,
        projection: ::std::os::raw::c_uint,
        horizontalAperture: f32,
        verticalAperture: f32,
        horizontalApertureOffset: f32,
        verticalApertureOffset: f32,
        focalLength: f32,
        clippingRange: gf_Range1f_t,
        clippingPlanes: *const gf_Vec4fVector_t,
        fStop: f32,
        focusDistance: f32,
        _result: *mut *mut gf_Camera_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Camera_dtor(_this: *mut gf_Camera_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_SetPerspective(
        _this: *mut gf_Frustum_t,
        fieldOfView: f64,
        isFovVertical: bool,
        aspectRatio: f64,
        nearDistance: f64,
        farDistance: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetPerspective(
        _this: *const gf_Frustum_t,
        isFovVertical: bool,
        fieldOfView: *mut f64,
        aspectRatio: *mut f64,
        nearDistance: *mut f64,
        farDistance: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetFOV(
        _this: *mut gf_Frustum_t,
        isFovVertical: bool,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetOrthographic(
        _this: *const gf_Frustum_t,
        left: *mut f64,
        right: *mut f64,
        bottom: *mut f64,
        top: *mut f64,
        nearPlane: *mut f64,
        farPlane: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_SetOrthographic(
        _this: *mut gf_Frustum_t,
        left: f64,
        right: f64,
        bottom: f64,
        top: f64,
        nearPlane: f64,
        farPlane: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_FitToSphere(
        _this: *mut gf_Frustum_t,
        center: *const gf_Vec3d_t,
        radius: f64,
        slack: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_Transform(
        _this: *mut gf_Frustum_t,
        matrix: *const gf_Matrix4d_t,
        _result: *mut *mut gf_Frustum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeViewDirection(
        _this: *const gf_Frustum_t,
        _result: *mut gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeViewFrame(
        _this: *const gf_Frustum_t,
        side: *mut gf_Vec3d_t,
        up: *mut gf_Vec3d_t,
        view: *mut gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeLookAtPoint(
        _this: *const gf_Frustum_t,
        _result: *mut gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeViewMatrix(
        _this: *const gf_Frustum_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeViewInverse(
        _this: *const gf_Frustum_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeProjectionMatrix(
        _this: *const gf_Frustum_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeAspectRatio(
        _this: *const gf_Frustum_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeCorners(
        _this: *const gf_Frustum_t,
        _result: *mut *mut gf_Vec3dVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeCornersAtDistance(
        _this: *const gf_Frustum_t,
        d: f64,
        _result: *mut *mut gf_Vec3dVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeNarrowedFrustum(
        _this: *const gf_Frustum_t,
        windowPos: *const gf_Vec2d_t,
        size: *const gf_Vec2d_t,
        _result: *mut *mut gf_Frustum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeRay_to_point(
        _this: *const gf_Frustum_t,
        worldSpacePos: *const gf_Vec3d_t,
        _result: *mut gf_Ray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputeRay_from_screen(
        _this: *const gf_Frustum_t,
        windowPos: *const gf_Vec2d_t,
        _result: *mut gf_Ray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputePickRay_to_point(
        _this: *const gf_Frustum_t,
        worldSpacePos: *const gf_Vec3d_t,
        _result: *mut gf_Ray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_ComputePickRay_from_screen(
        _this: *const gf_Frustum_t,
        windowPos: *const gf_Vec2d_t,
        _result: *mut gf_Ray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_SetPosition(
        _this: *mut gf_Frustum_t,
        position: *const gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetPosition(
        _this: *const gf_Frustum_t,
        _result: *mut *const gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetRotation(
        _this: *const gf_Frustum_t,
        _result: *mut *const gf_Rotation_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_SetRotation(
        _this: *mut gf_Frustum_t,
        rotation: *const gf_Rotation_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_SetPositionAndRotationFromMatrix(
        _this: *mut gf_Frustum_t,
        camToWorldXf: *const gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_SetWindow(
        _this: *mut gf_Frustum_t,
        window: *const gf_Range2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetWindow(
        _this: *const gf_Frustum_t,
        _result: *mut *const gf_Range2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_SetNearFar(
        _this: *mut gf_Frustum_t,
        nearFar: *const gf_Range1d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetNearFar(
        _this: *const gf_Frustum_t,
        _result: *mut *const gf_Range1d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_SetViewDistance(
        _this: *mut gf_Frustum_t,
        viewDistance: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetViewDistance(
        _this: *const gf_Frustum_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_SetProjectionType(
        _this: *mut gf_Frustum_t,
        projectionType: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetProjectionType(
        _this: *const gf_Frustum_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_GetReferencePlaneDepth(_result: *mut f64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_Intersects_box(
        _this: *const gf_Frustum_t,
        bbox: *const gf_BBox3d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_Intersects_point(
        _this: *const gf_Frustum_t,
        point: *const gf_Vec3d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_Intersects_line(
        _this: *const gf_Frustum_t,
        p0: *const gf_Vec3d_t,
        p1: *const gf_Vec3d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_Intersects_triangle(
        _this: *const gf_Frustum_t,
        p0: *const gf_Vec3d_t,
        p1: *const gf_Vec3d_t,
        p2: *const gf_Vec3d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_IntersectsViewVolume(
        bbox: *const gf_BBox3d_t,
        vpMat: *const gf_Matrix4d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_new(_result: *mut *mut gf_Frustum_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_from_position_and_rotation(
        position: *const gf_Vec3f_t,
        rotation: *const gf_Rotation_t,
        window: *const gf_Range2d_t,
        nearFar: *const gf_Range1d_t,
        projectionType: ::std::os::raw::c_uint,
        viewDistance: f64,
        _result: *mut *mut gf_Frustum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_from_transform(
        camToWorldXF: *const gf_Matrix4d_t,
        window: *const gf_Range2d_t,
        nearFar: *const gf_Range1d_t,
        projectionType: ::std::os::raw::c_uint,
        viewDistance: f64,
        _result: *mut *mut gf_Frustum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Frustum_dtor(_this: *mut gf_Frustum_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Ray_GetStartPoint(
        _this: *const gf_Ray_t,
        _result: *mut *const gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Ray_GetDirection(
        _this: *const gf_Ray_t,
        _result: *mut *const gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gf_Ray_GetPoint(
        _this: *const gf_Ray_t,
        distance: f64,
        _result: *mut gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_data(
        _this: *mut js_Array_t,
        _result: *mut *mut js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_data_const(
        _this: *const js_Array_t,
        _result: *mut *const js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_empty(_this: *const js_Array_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_size(_this: *const js_Array_t, _result: *mut usize) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_max_size(
        _this: *const js_Array_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_capacity(
        _this: *const js_Array_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_clear(_this: *mut js_Array_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_pop_back(_this: *mut js_Array_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_op_index(
        _this: *const js_Array_t,
        __n: usize,
        _result: *mut *const js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_default(_result: *mut *mut js_Array_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Array_dtor(_this: *mut js_Array_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Object_dtor(_this: *mut js_Object_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_GetJsObject(
        _this: *const js_Value_t,
        _result: *mut *const js_Object_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_GetJsArray(
        _this: *const js_Value_t,
        _result: *mut *const js_Array_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_GetBool(_this: *const js_Value_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_GetInt(
        _this: *const js_Value_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_GetInt64(_this: *const js_Value_t, _result: *mut i64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_GetUInt64(_this: *const js_Value_t, _result: *mut u64)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_GetReal(_this: *const js_Value_t, _result: *mut f64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_IsObject(_this: *const js_Value_t, _result: *mut bool)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_IsArray(_this: *const js_Value_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_IsBool(_this: *const js_Value_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_IsInt(_this: *const js_Value_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_IsUInt64(_this: *const js_Value_t, _result: *mut bool)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_IsReal(_this: *const js_Value_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_new(_result: *mut *mut js_Value_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_from_object(
        param00: *const js_Object_t,
        _result: *mut *mut js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_from_array(
        param00: *const js_Array_t,
        _result: *mut *mut js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_from_string(
        param00: *const ::std::os::raw::c_char,
        _result: *mut *mut js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_from_bool(
        param00: bool,
        _result: *mut *mut js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_from_int(
        param00: ::std::os::raw::c_int,
        _result: *mut *mut js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_from_int64_t(
        param00: ::std::os::raw::c_long,
        _result: *mut *mut js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_from_uint64_t(
        param00: ::std::os::raw::c_ulong,
        _result: *mut *mut js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_from_double(
        param00: f64,
        _result: *mut *mut js_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_Value_dtor(_this: *mut js_Value_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn js_TokenValuePair_dtor(_this: *mut js_TokenValuePair_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_GetAsDefault(
        _this: *const ndr_NdrVersion_t,
        _result: *mut *mut ndr_NdrVersion_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_GetMajor(
        _this: *const ndr_NdrVersion_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_GetMinor(
        _this: *const ndr_NdrVersion_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_IsDefault(
        _this: *const ndr_NdrVersion_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_GetString(
        _this: *const ndr_NdrVersion_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_GetStringSuffix(
        _this: *const ndr_NdrVersion_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_GetHash(
        _this: *const ndr_NdrVersion_t,
        _result: *mut ::std::os::raw::c_ulong,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_op_bool(
        _this: *const ndr_NdrVersion_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_op_not(
        _this: *const ndr_NdrVersion_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_default(_result: *mut *mut ndr_NdrVersion_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_ctor_01(
        major: ::std::os::raw::c_int,
        minor: ::std::os::raw::c_int,
        _result: *mut *mut ndr_NdrVersion_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_ctor_02(
        x: *const std_String_t,
        _result: *mut *mut ndr_NdrVersion_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrVersion_dtor(_this: *mut ndr_NdrVersion_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_DiscoveryPluginContext_GetSourceType(
        _this: *const ndr_DiscoveryPluginContext_t,
        discoveryType: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_DiscoveryPluginContext_dtor(
        _this: *mut ndr_DiscoveryPluginContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_DiscoveryPlugin_DiscoverNodes(
        _this: *mut ndr_DiscoveryPlugin_t,
        param00: *const ndr_DiscoveryPluginContext_t,
        _result: *mut *mut ndr_NodeDiscoveryResultVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_DiscoveryPlugin_GetSearchURIs(
        _this: *const ndr_DiscoveryPlugin_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_DiscoveryPlugin_dtor(_this: *mut ndr_DiscoveryPlugin_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_DiscoveryPluginRefPtr_dtor(
        _this: *mut ndr_DiscoveryPluginRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_DiscoveryPluginRefPtr_DiscoverNodes(
        _this: *mut ndr_DiscoveryPluginRefPtr_t,
        param00: *const ndr_DiscoveryPluginContext_t,
        _result: *mut *mut ndr_NodeDiscoveryResultVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_DiscoveryPluginRefPtr_GetSearchURIs(
        _this: *const ndr_DiscoveryPluginRefPtr_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_DiscoveryUri_dtor(_this: *mut ndr_DiscoveryUri_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetIdentifier(
        _this: *const ndr_Node_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetVersion(
        _this: *const ndr_Node_t,
        _result: *mut *mut ndr_NdrVersion_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetName(
        _this: *const ndr_Node_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetFamily(
        _this: *const ndr_Node_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetContext(
        _this: *const ndr_Node_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetSourceType(
        _this: *const ndr_Node_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetResolvedDefinitionURI(
        _this: *const ndr_Node_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetResolvedImplementationURI(
        _this: *const ndr_Node_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetSourceCode(
        _this: *const ndr_Node_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_IsValid(_this: *const ndr_Node_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetInfoString(
        _this: *const ndr_Node_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetInputNames(
        _this: *const ndr_Node_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetOutputNames(
        _this: *const ndr_Node_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetInput(
        _this: *const ndr_Node_t,
        inputName: *const tf_Token_t,
        _result: *mut *const ndr_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetOutput(
        _this: *const ndr_Node_t,
        outputName: *const tf_Token_t,
        _result: *mut *const ndr_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_GetMetadata(
        _this: *const ndr_Node_t,
        _result: *mut *const ndr_TokenMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Node_dtor(_this: *mut ndr_Node_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_dtor(_this: *mut ndr_NodeUniquePtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetIdentifier(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetVersion(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *mut ndr_NdrVersion_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetName(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetFamily(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetContext(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetSourceType(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetResolvedDefinitionURI(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetResolvedImplementationURI(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetSourceCode(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_IsValid(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetInfoString(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetInputNames(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetOutputNames(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetInput(
        _this: *const ndr_NodeUniquePtr_t,
        inputName: *const tf_Token_t,
        _result: *mut *const ndr_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetOutput(
        _this: *const ndr_NodeUniquePtr_t,
        outputName: *const tf_Token_t,
        _result: *mut *const ndr_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeUniquePtr_GetMetadata(
        _this: *const ndr_NodeUniquePtr_t,
        _result: *mut *const ndr_TokenMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_data(
        _this: *mut ndr_NodeConstPtrVec_t,
        _result: *mut *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_data_const(
        _this: *const ndr_NodeConstPtrVec_t,
        _result: *mut *const *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_empty(
        _this: *const ndr_NodeConstPtrVec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_size(
        _this: *const ndr_NodeConstPtrVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_max_size(
        _this: *const ndr_NodeConstPtrVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_capacity(
        _this: *const ndr_NodeConstPtrVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_clear(_this: *mut ndr_NodeConstPtrVec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_pop_back(_this: *mut ndr_NodeConstPtrVec_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_op_index(
        _this: *const ndr_NodeConstPtrVec_t,
        __n: usize,
        _result: *mut *const *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_default(
        _result: *mut *mut ndr_NodeConstPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeConstPtrVec_dtor(_this: *mut ndr_NodeConstPtrVec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResult_ctor_00(
        identifier: *const tf_Token_t,
        version: *const ndr_NdrVersion_t,
        name: *const std_String_t,
        family: *const tf_Token_t,
        discoveryType: *const tf_Token_t,
        sourceType: *const tf_Token_t,
        uri: *const std_String_t,
        resolvedUri: *const std_String_t,
        sourceCode: *const std_String_t,
        metadata: *const ndr_TokenMap_t,
        blindData: *const std_String_t,
        subIdentifier: *const tf_Token_t,
        _result: *mut *mut ndr_NodeDiscoveryResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResult_dtor(
        _this: *mut ndr_NodeDiscoveryResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_data(
        _this: *mut ndr_NodeDiscoveryResultVector_t,
        _result: *mut *mut ndr_NodeDiscoveryResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_data_const(
        _this: *const ndr_NodeDiscoveryResultVector_t,
        _result: *mut *const ndr_NodeDiscoveryResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_empty(
        _this: *const ndr_NodeDiscoveryResultVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_size(
        _this: *const ndr_NodeDiscoveryResultVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_max_size(
        _this: *const ndr_NodeDiscoveryResultVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_capacity(
        _this: *const ndr_NodeDiscoveryResultVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_clear(
        _this: *mut ndr_NodeDiscoveryResultVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_pop_back(
        _this: *mut ndr_NodeDiscoveryResultVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_op_index(
        _this: *const ndr_NodeDiscoveryResultVector_t,
        __n: usize,
        _result: *mut *const ndr_NodeDiscoveryResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_default(
        _result: *mut *mut ndr_NodeDiscoveryResultVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NodeDiscoveryResultVector_dtor(
        _this: *mut ndr_NodeDiscoveryResultVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_ParserPlugin_Parse(
        _this: *mut ndr_ParserPlugin_t,
        discoveryResult: *const ndr_NodeDiscoveryResult_t,
        _result: *mut *mut ndr_NodeUniquePtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_ParserPlugin_GetDiscoveryTypes(
        _this: *const ndr_ParserPlugin_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_ParserPlugin_GetSourceType(
        _this: *const ndr_ParserPlugin_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_ParserPlugin_GetInvalidNode(
        dr: *const ndr_NodeDiscoveryResult_t,
        _result: *mut *mut ndr_NodeUniquePtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_ParserPlugin_dtor(_this: *mut ndr_ParserPlugin_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_GetName(
        _this: *const ndr_Property_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_GetType(
        _this: *const ndr_Property_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_GetDefaultValue(
        _this: *const ndr_Property_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_IsOutput(
        _this: *const ndr_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_IsArray(
        _this: *const ndr_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_IsDynamicArray(
        _this: *const ndr_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_GetArraySize(
        _this: *const ndr_Property_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_GetInfoString(
        _this: *const ndr_Property_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_GetMetadata(
        _this: *const ndr_Property_t,
        _result: *mut *const ndr_TokenMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_IsConnectable(
        _this: *const ndr_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_CanConnectTo(
        _this: *const ndr_Property_t,
        other: *const ndr_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_GetTypeAsSdfType(
        _this: *const ndr_Property_t,
        _result: *mut *const ndr_SdfTypeIndicator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_GetDefaultValueAsSdfType(
        _this: *const ndr_Property_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_ctor_00(
        name: *const tf_Token_t,
        type_: *const tf_Token_t,
        defaultValue: *const vt_Value_t,
        isOutput: bool,
        arraySize: ::std::os::raw::c_ulong,
        isDynamicArray: bool,
        metadata: *const ndr_TokenMap_t,
        _result: *mut *mut ndr_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Property_dtor(_this: *mut ndr_Property_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_dtor(_this: *mut ndr_PropertyUniquePtr_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_GetName(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_GetType(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_GetDefaultValue(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_IsOutput(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_IsArray(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_IsDynamicArray(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_GetArraySize(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_GetInfoString(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_GetMetadata(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut *const ndr_TokenMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_IsConnectable(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_CanConnectTo(
        _this: *const ndr_PropertyUniquePtr_t,
        other: *const ndr_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_GetTypeAsSdfType(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut *const ndr_SdfTypeIndicator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtr_GetDefaultValueAsSdfType(
        _this: *const ndr_PropertyUniquePtr_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_data(
        _this: *mut ndr_PropertyUniquePtrVec_t,
        _result: *mut *mut ndr_PropertyUniquePtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_data_const(
        _this: *const ndr_PropertyUniquePtrVec_t,
        _result: *mut *const ndr_PropertyUniquePtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_empty(
        _this: *const ndr_PropertyUniquePtrVec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_size(
        _this: *const ndr_PropertyUniquePtrVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_max_size(
        _this: *const ndr_PropertyUniquePtrVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_capacity(
        _this: *const ndr_PropertyUniquePtrVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_clear(
        _this: *mut ndr_PropertyUniquePtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_pop_back(
        _this: *mut ndr_PropertyUniquePtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_op_index(
        _this: *const ndr_PropertyUniquePtrVec_t,
        __n: usize,
        _result: *mut *const ndr_PropertyUniquePtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_default(
        _result: *mut *mut ndr_PropertyUniquePtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_PropertyUniquePtrVec_dtor(
        _this: *mut ndr_PropertyUniquePtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_SdfTypeIndicator_dtor(_this: *mut ndr_SdfTypeIndicator_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_SetExtraDiscoveryPlugins_00(
        _this: *mut ndr_Registry_t,
        plugins: *mut ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_SetExtraDiscoveryPlugins_01(
        _this: *mut ndr_Registry_t,
        pluginTypes: *const tf_TypeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_AddDiscoveryResult_00(
        _this: *mut ndr_Registry_t,
        discoveryResult: *mut ndr_NodeDiscoveryResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_AddDiscoveryResult_01(
        _this: *mut ndr_Registry_t,
        discoveryResult: *const ndr_NodeDiscoveryResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_SetExtraParserPlugins(
        _this: *mut ndr_Registry_t,
        pluginTypes: *const tf_TypeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodeFromAsset(
        _this: *mut ndr_Registry_t,
        asset: *const sdf_AssetPath_t,
        metadata: *const ndr_TokenMap_t,
        subIdentifier: *const tf_Token_t,
        sourceType: *const tf_Token_t,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodeFromSourceCode(
        _this: *mut ndr_Registry_t,
        sourceCode: *const std_String_t,
        sourceType: *const tf_Token_t,
        metadata: *const ndr_TokenMap_t,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetSearchURIs(
        _this: *const ndr_Registry_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodeIdentifiers(
        _this: *const ndr_Registry_t,
        family: *const tf_Token_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodeNames(
        _this: *const ndr_Registry_t,
        family: *const tf_Token_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodeByIdentifier(
        _this: *mut ndr_Registry_t,
        identifier: *const tf_Token_t,
        sourceTypePriority: *const tf_TokenVector_t,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodeByIdentifierAndType(
        _this: *mut ndr_Registry_t,
        identifier: *const tf_Token_t,
        sourceType: *const tf_Token_t,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodeByName(
        _this: *mut ndr_Registry_t,
        name: *const std_String_t,
        sourceTypePriority: *const tf_TokenVector_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodeByNameAndType(
        _this: *mut ndr_Registry_t,
        name: *const std_String_t,
        sourceType: *const tf_Token_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodesByIdentifier(
        _this: *mut ndr_Registry_t,
        identifier: *const tf_Token_t,
        _result: *mut *mut ndr_NodeConstPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodesByName(
        _this: *mut ndr_Registry_t,
        name: *const std_String_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *mut ndr_NodeConstPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetNodesByFamily(
        _this: *mut ndr_Registry_t,
        family: *const tf_Token_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *mut ndr_NodeConstPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_Registry_GetAllNodeSourceTypes(
        _this: *const ndr_Registry_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_data(
        _this: *mut ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
        _result: *mut *mut ndr_DiscoveryPluginRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_data_const(
        _this: *const ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
        _result: *mut *const ndr_DiscoveryPluginRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_empty(
        _this: *const ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_size(
        _this: *const ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_max_size(
        _this: *const ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_capacity(
        _this: *const ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_clear(
        _this: *mut ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_pop_back(
        _this: *mut ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_op_index(
        _this: *const ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
        __n: usize,
        _result: *mut *const ndr_DiscoveryPluginRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_default(
        _result: *mut *mut ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrRegistryDiscoveryPluginRefPtrVec_dtor(
        _this: *mut ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_TokenMap_dtor(_this: *mut ndr_TokenMap_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_data(
        _this: *mut ndr_OptionVec_t,
        _result: *mut *mut tf_TokenTokenPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_data_const(
        _this: *const ndr_OptionVec_t,
        _result: *mut *const tf_TokenTokenPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_empty(
        _this: *const ndr_OptionVec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_size(
        _this: *const ndr_OptionVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_max_size(
        _this: *const ndr_OptionVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_capacity(
        _this: *const ndr_OptionVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_clear(_this: *mut ndr_OptionVec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_pop_back(_this: *mut ndr_OptionVec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_op_index(
        _this: *const ndr_OptionVec_t,
        __n: usize,
        _result: *mut *const tf_TokenTokenPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_default(_result: *mut *mut ndr_OptionVec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_OptionVec_dtor(_this: *mut ndr_OptionVec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ndr_NdrGetIdentifierString(
        id: *const tf_Token_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Arc_default(_result: *mut *mut pcp_Arc_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Arc_dtor(_this: *mut pcp_Arc_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetLayerStackIdentifier(
        _this: *const pcp_Cache_t,
        _result: *mut *const pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetLayerStack(
        _this: *const pcp_Cache_t,
        _result: *mut *mut pcp_LayerStackPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_HasRootLayerStack_00(
        _this: *const pcp_Cache_t,
        layerStack: *const pcp_LayerStackRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_HasRootLayerStack_01(
        _this: *const pcp_Cache_t,
        layerStack: *const pcp_LayerStackPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_IsUsd(_this: *const pcp_Cache_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetFileFormatTarget(
        _this: *const pcp_Cache_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetVariantFallbacks(
        _this: *const pcp_Cache_t,
        _result: *mut *mut pcp_VariantFallbackMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_SetVariantFallbacks(
        _this: *mut pcp_Cache_t,
        map: *const pcp_VariantFallbackMap_t,
        changes: *mut pcp_Changes_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_IsPayloadIncluded(
        _this: *const pcp_Cache_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetIncludedPayloads(
        _this: *const pcp_Cache_t,
        _result: *mut *const pcp_CachePayloadSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_RequestPayloads(
        _this: *mut pcp_Cache_t,
        pathsToInclude: *const sdf_PathSet_t,
        pathsToExclude: *const sdf_PathSet_t,
        changes: *mut pcp_Changes_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_RequestLayerMuting(
        _this: *mut pcp_Cache_t,
        layersToMute: *const std_StringVector_t,
        layersToUnmute: *const std_StringVector_t,
        changes: *mut pcp_Changes_t,
        newLayersMuted: *mut std_StringVector_t,
        newLayersUnmuted: *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetMutedLayers(
        _this: *const pcp_Cache_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_IsLayerMuted_00(
        _this: *const pcp_Cache_t,
        layerIdentifier: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_IsLayerMuted_01(
        _this: *const pcp_Cache_t,
        anchorLayer: *const sdf_LayerHandle_t,
        layerIdentifier: *const std_String_t,
        canonicalMutedLayerIdentifier: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetPrimIndexInputs(
        _this: *mut pcp_Cache_t,
        _result: *mut *mut pcp_PrimIndexInputs_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_ComputeLayerStack(
        _this: *mut pcp_Cache_t,
        identifier: *const pcp_LayerStackIdentifier_t,
        allErrors: *mut pcp_ErrorBaseSharedPtrVector_t,
        _result: *mut *mut pcp_LayerStackRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_FindLayerStack(
        _this: *const pcp_Cache_t,
        identifier: *const pcp_LayerStackIdentifier_t,
        _result: *mut *mut pcp_LayerStackPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_UsesLayerStack(
        _this: *const pcp_Cache_t,
        layerStack: *const pcp_LayerStackPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_ComputePrimIndex(
        _this: *mut pcp_Cache_t,
        primPath: *const sdf_Path_t,
        allErrors: *mut pcp_ErrorBaseSharedPtrVector_t,
        _result: *mut *const pcp_PrimIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_FindPrimIndex(
        _this: *const pcp_Cache_t,
        primPath: *const sdf_Path_t,
        _result: *mut *const pcp_PrimIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_ComputePropertyIndex(
        _this: *mut pcp_Cache_t,
        propPath: *const sdf_Path_t,
        allErrors: *mut pcp_ErrorBaseSharedPtrVector_t,
        _result: *mut *const pcp_PropertyIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_FindPropertyIndex(
        _this: *const pcp_Cache_t,
        propPath: *const sdf_Path_t,
        _result: *mut *const pcp_PropertyIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_ComputeRelationshipTargetPaths(
        _this: *mut pcp_Cache_t,
        relationshipPath: *const sdf_Path_t,
        paths: *mut sdf_PathVector_t,
        localOnly: bool,
        stopProperty: *const sdf_SpecHandle_t,
        includeStopProperty: bool,
        deletedPaths: *mut sdf_PathVector_t,
        allErrors: *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_ComputeAttributeConnectionPaths(
        _this: *mut pcp_Cache_t,
        attributePath: *const sdf_Path_t,
        paths: *mut sdf_PathVector_t,
        localOnly: bool,
        stopProperty: *const sdf_SpecHandle_t,
        includeStopProperty: bool,
        deletedPaths: *mut sdf_PathVector_t,
        allErrors: *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetUsedLayers(
        _this: *const pcp_Cache_t,
        _result: *mut *mut sdf_LayerHandleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetUsedLayersRevision(
        _this: *const pcp_Cache_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetUsedRootLayers(
        _this: *const pcp_Cache_t,
        _result: *mut *mut sdf_LayerHandleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_FindAllLayerStacksUsingLayer(
        _this: *const pcp_Cache_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut *const pcp_LayerStackPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_FindSiteDependencies_00(
        _this: *const pcp_Cache_t,
        siteLayerStack: *const pcp_LayerStackPtr_t,
        sitePath: *const sdf_Path_t,
        depMask: ::std::os::raw::c_uint,
        recurseOnSite: bool,
        recurseOnIndex: bool,
        filterForExistingCachesOnly: bool,
        _result: *mut *mut pcp_DependencyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_FindSiteDependencies_01(
        _this: *const pcp_Cache_t,
        siteLayer: *const sdf_LayerHandle_t,
        sitePath: *const sdf_Path_t,
        depMask: ::std::os::raw::c_uint,
        recurseOnSite: bool,
        recurseOnIndex: bool,
        filterForExistingCachesOnly: bool,
        _result: *mut *mut pcp_DependencyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_CanHaveOpinionForSite(
        _this: *const pcp_Cache_t,
        localPcpSitePath: *const sdf_Path_t,
        layer: *const sdf_LayerHandle_t,
        allowedPathInLayer: *mut sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetInvalidSublayerIdentifiers(
        _this: *const pcp_Cache_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_IsInvalidSublayerIdentifier(
        _this: *const pcp_Cache_t,
        identifier: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetInvalidAssetPaths(
        _this: *const pcp_Cache_t,
        _result: *mut *mut pcp_InvalidAssetPathMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_IsInvalidAssetPath(
        _this: *const pcp_Cache_t,
        resolvedAssetPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_HasAnyDynamicFileFormatArgumentFieldDependencies(
        _this: *const pcp_Cache_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_HasAnyDynamicFileFormatArgumentAttributeDependencies(
        _this: *const pcp_Cache_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_IsPossibleDynamicFileFormatArgumentField(
        _this: *const pcp_Cache_t,
        field: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_IsPossibleDynamicFileFormatArgumentAttribute(
        _this: *const pcp_Cache_t,
        attributeName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetDynamicFileFormatArgumentDependencyData(
        _this: *const pcp_Cache_t,
        primIndexPath: *const sdf_Path_t,
        _result: *mut *const pcp_DynamicFileFormatDependencyData_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetPrimsUsingExpressionVariablesFromLayerStack(
        _this: *const pcp_Cache_t,
        layerStack: *const pcp_LayerStackPtr_t,
        _result: *mut *const sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_GetExpressionVariablesFromLayerStackUsedByPrim(
        _this: *const pcp_Cache_t,
        primIndexPath: *const sdf_Path_t,
        layerStack: *const pcp_LayerStackPtr_t,
        _result: *mut *const std_StringUnorderedSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_Reload(
        _this: *mut pcp_Cache_t,
        changes: *mut pcp_Changes_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_ReloadReferences(
        _this: *mut pcp_Cache_t,
        changes: *mut pcp_Changes_t,
        primPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_PrintStatistics(_this: *const pcp_Cache_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_ctor_00(
        layerStackIdentifier: *const pcp_LayerStackIdentifier_t,
        fileFormatTarget: *const std_String_t,
        usd: bool,
        _result: *mut *mut pcp_Cache_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Cache_dtor(_this: *mut pcp_Cache_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_InvalidAssetPathMap_dtor(
        _this: *mut pcp_InvalidAssetPathMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_CachePayloadSet_dtor(_this: *mut pcp_CachePayloadSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidChange(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        changes: *const sdf_LayerChangeListVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidMaybeFixSublayer(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        layer: *const sdf_LayerHandle_t,
        assetPath: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidMaybeFixAsset(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        site: *const pcp_Site_t,
        srcLayer: *const sdf_LayerHandle_t,
        assetPath: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidMuteLayer(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        layerId: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidUnmuteLayer(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        layerId: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidChangeSignificantly(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidChangeSpecs(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        path: *const sdf_Path_t,
        changedLayer: *const sdf_LayerHandle_t,
        changedPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidChangeSpecStack(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidChangeTargets(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        path: *const sdf_Path_t,
        targetType: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidChangePaths(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
        oldPath: *const sdf_Path_t,
        newPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidDestroyCache(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_DidChangeAssetResolver(
        _this: *mut pcp_Changes_t,
        cache: *const pcp_Cache_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_Swap(
        _this: *mut pcp_Changes_t,
        other: *mut pcp_Changes_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_IsEmpty(
        _this: *const pcp_Changes_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_GetCacheChanges(
        _this: *const pcp_Changes_t,
        _result: *mut *const pcp_PcpChangesCacheChanges_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_Apply(_this: *const pcp_Changes_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_op_assign(
        _this: *mut pcp_Changes_t,
        param00: *const pcp_Changes_t,
        _result: *mut *mut pcp_Changes_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_default(_result: *mut *mut pcp_Changes_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Changes_dtor(_this: *mut pcp_Changes_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PcpChangesCacheChanges_dtor(
        _this: *mut pcp_PcpChangesCacheChanges_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfo_dtor(_this: *mut pcp_SourceArcInfo_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_data(
        _this: *mut pcp_SourceArcInfoVector_t,
        _result: *mut *mut pcp_SourceArcInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_data_const(
        _this: *const pcp_SourceArcInfoVector_t,
        _result: *mut *const pcp_SourceArcInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_empty(
        _this: *const pcp_SourceArcInfoVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_size(
        _this: *const pcp_SourceArcInfoVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_max_size(
        _this: *const pcp_SourceArcInfoVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_capacity(
        _this: *const pcp_SourceArcInfoVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_clear(
        _this: *mut pcp_SourceArcInfoVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_pop_back(
        _this: *mut pcp_SourceArcInfoVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_op_index(
        _this: *const pcp_SourceArcInfoVector_t,
        __n: usize,
        _result: *mut *const pcp_SourceArcInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_default(
        _result: *mut *mut pcp_SourceArcInfoVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SourceArcInfoVector_dtor(
        _this: *mut pcp_SourceArcInfoVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Dependency_dtor(_this: *mut pcp_Dependency_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_data(
        _this: *mut pcp_DependencyVector_t,
        _result: *mut *mut pcp_Dependency_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_data_const(
        _this: *const pcp_DependencyVector_t,
        _result: *mut *const pcp_Dependency_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_empty(
        _this: *const pcp_DependencyVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_size(
        _this: *const pcp_DependencyVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_max_size(
        _this: *const pcp_DependencyVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_capacity(
        _this: *const pcp_DependencyVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_clear(_this: *mut pcp_DependencyVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_pop_back(
        _this: *mut pcp_DependencyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_op_index(
        _this: *const pcp_DependencyVector_t,
        __n: usize,
        _result: *mut *const pcp_Dependency_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_default(
        _result: *mut *mut pcp_DependencyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DependencyVector_dtor(_this: *mut pcp_DependencyVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_CulledDependency_dtor(_this: *mut pcp_CulledDependency_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatContext_ComposeValue(
        _this: *const pcp_DynamicFileFormatContext_t,
        field: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatContext_ComposeAttributeDefaultValue(
        _this: *const pcp_DynamicFileFormatContext_t,
        attributeName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatContext_dtor(
        _this: *mut pcp_DynamicFileFormatContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatDependencyData_Swap(
        _this: *mut pcp_DynamicFileFormatDependencyData_t,
        rhs: *mut pcp_DynamicFileFormatDependencyData_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatDependencyData_swap(
        _this: *mut pcp_DynamicFileFormatDependencyData_t,
        rhs: *mut pcp_DynamicFileFormatDependencyData_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatDependencyData_IsEmpty(
        _this: *const pcp_DynamicFileFormatDependencyData_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatDependencyData_GetRelevantFieldNames(
        _this: *const pcp_DynamicFileFormatDependencyData_t,
        _result: *mut *const tf_TokenSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatDependencyData_GetRelevantAttributeNames(
        _this: *const pcp_DynamicFileFormatDependencyData_t,
        _result: *mut *const tf_TokenSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatDependencyData_CanFieldChangeAffectFileFormatArguments(
        _this: *const pcp_DynamicFileFormatDependencyData_t,
        fieldName: *const tf_Token_t,
        oldValue: *const vt_Value_t,
        newValue: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatDependencyData_CanAttributeDefaultValueChangeAffectFileFormatArguments(
        _this: *const pcp_DynamicFileFormatDependencyData_t,
        attributeName: *const tf_Token_t,
        oldValue: *const vt_Value_t,
        newValue: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatDependencyData_default(
        _result: *mut *mut pcp_DynamicFileFormatDependencyData_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatDependencyData_dtor(
        _this: *mut pcp_DynamicFileFormatDependencyData_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatInterface_ComposeFieldsForFileFormatArguments(
        _this: *const pcp_DynamicFileFormatInterface_t,
        assetPath: *const std_String_t,
        context: *const pcp_DynamicFileFormatContext_t,
        args: *mut sdf_FileFormatFileFormatArguments_t,
        dependencyContextData: *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatInterface_CanFieldChangeAffectFileFormatArguments(
        _this: *const pcp_DynamicFileFormatInterface_t,
        field: *const tf_Token_t,
        oldValue: *const vt_Value_t,
        newValue: *const vt_Value_t,
        dependencyContextData: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatInterface_CanAttributeDefaultValueChangeAffectFileFormatArguments(
        _this: *const pcp_DynamicFileFormatInterface_t,
        attributeName: *const tf_Token_t,
        oldValue: *const vt_Value_t,
        newValue: *const vt_Value_t,
        dependencyContextData: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_DynamicFileFormatInterface_dtor(
        _this: *mut pcp_DynamicFileFormatInterface_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBase_ToString(
        _this: *const pcp_ErrorBase_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBase_dtor(_this: *mut pcp_ErrorBase_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtr_dtor(
        _this: *mut pcp_ErrorBaseSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtr_ToString(
        _this: *const pcp_ErrorBaseSharedPtr_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_data(
        _this: *mut pcp_ErrorBaseSharedPtrVector_t,
        _result: *mut *mut pcp_ErrorBaseSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_data_const(
        _this: *const pcp_ErrorBaseSharedPtrVector_t,
        _result: *mut *const pcp_ErrorBaseSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_empty(
        _this: *const pcp_ErrorBaseSharedPtrVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_size(
        _this: *const pcp_ErrorBaseSharedPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_max_size(
        _this: *const pcp_ErrorBaseSharedPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_capacity(
        _this: *const pcp_ErrorBaseSharedPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_clear(
        _this: *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_pop_back(
        _this: *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_op_index(
        _this: *const pcp_ErrorBaseSharedPtrVector_t,
        __n: usize,
        _result: *mut *const pcp_ErrorBaseSharedPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_default(
        _result: *mut *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorBaseSharedPtrVector_dtor(
        _this: *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorArcCycle_dtor(_this: *mut pcp_ErrorArcCycle_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorArcCycle_ToString(
        _this: *const pcp_ErrorArcCycle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorArcPermissionDenied_dtor(
        _this: *mut pcp_ErrorArcPermissionDenied_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorArcPermissionDenied_ToString(
        _this: *const pcp_ErrorArcPermissionDenied_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorCapacityExceeded_dtor(
        _this: *mut pcp_ErrorCapacityExceeded_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorCapacityExceeded_ToString(
        _this: *const pcp_ErrorCapacityExceeded_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInconsistentPropertyBase_dtor(
        _this: *mut pcp_ErrorInconsistentPropertyBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInconsistentPropertyBase_ToString(
        _this: *const pcp_ErrorInconsistentPropertyBase_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInconsistentPropertyType_dtor(
        _this: *mut pcp_ErrorInconsistentPropertyType_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInconsistentPropertyType_ToString(
        _this: *const pcp_ErrorInconsistentPropertyType_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInconsistentAttributeType_dtor(
        _this: *mut pcp_ErrorInconsistentAttributeType_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInconsistentAttributeType_ToString(
        _this: *const pcp_ErrorInconsistentAttributeType_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInconsistentAttributeVariability_dtor(
        _this: *mut pcp_ErrorInconsistentAttributeVariability_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInconsistentAttributeVariability_ToString(
        _this: *const pcp_ErrorInconsistentAttributeVariability_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidPrimPath_dtor(
        _this: *mut pcp_ErrorInvalidPrimPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidPrimPath_ToString(
        _this: *const pcp_ErrorInvalidPrimPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidAssetPathBase_dtor(
        _this: *mut pcp_ErrorInvalidAssetPathBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidAssetPathBase_ToString(
        _this: *const pcp_ErrorInvalidAssetPathBase_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidAssetPath_dtor(
        _this: *mut pcp_ErrorInvalidAssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidAssetPath_ToString(
        _this: *const pcp_ErrorInvalidAssetPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorMutedAssetPath_dtor(
        _this: *mut pcp_ErrorMutedAssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorMutedAssetPath_ToString(
        _this: *const pcp_ErrorMutedAssetPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorTargetPathBase_dtor(
        _this: *mut pcp_ErrorTargetPathBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorTargetPathBase_ToString(
        _this: *const pcp_ErrorTargetPathBase_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidInstaceTargetPath_dtor(
        _this: *mut pcp_ErrorInvalidInstaceTargetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidInstaceTargetPath_ToString(
        _this: *const pcp_ErrorInvalidInstaceTargetPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidExternalTargetPath_dtor(
        _this: *mut pcp_ErrorInvalidExternalTargetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidExternalTargetPath_ToString(
        _this: *const pcp_ErrorInvalidExternalTargetPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidTargetPath_dtor(
        _this: *mut pcp_ErrorInvalidTargetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidTargetPath_ToString(
        _this: *const pcp_ErrorInvalidTargetPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidSublayerOffset_dtor(
        _this: *mut pcp_ErrorInvalidSublayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidSublayerOffset_ToString(
        _this: *const pcp_ErrorInvalidSublayerOffset_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidReferenceOffset_dtor(
        _this: *mut pcp_ErrorInvalidReferenceOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidReferenceOffset_ToString(
        _this: *const pcp_ErrorInvalidReferenceOffset_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidSublayerOwnership_dtor(
        _this: *mut pcp_ErrorInvalidSublayerOwnership_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidSublayerOwnership_ToString(
        _this: *const pcp_ErrorInvalidSublayerOwnership_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidSublayerPath_dtor(
        _this: *mut pcp_ErrorInvalidSublayerPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorInvalidSublayerPath_ToString(
        _this: *const pcp_ErrorInvalidSublayerPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorOpinionAtRelocationSource_dtor(
        _this: *mut pcp_ErrorOpinionAtRelocationSource_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorOpinionAtRelocationSource_ToString(
        _this: *const pcp_ErrorOpinionAtRelocationSource_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorPrimPermissionDenied_dtor(
        _this: *mut pcp_ErrorPrimPermissionDenied_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorPrimPermissionDenied_ToString(
        _this: *const pcp_ErrorPrimPermissionDenied_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorPropertyPermissionDenied_dtor(
        _this: *mut pcp_ErrorPropertyPermissionDenied_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorPropertyPermissionDenied_ToString(
        _this: *const pcp_ErrorPropertyPermissionDenied_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorSublayerCycle_dtor(
        _this: *mut pcp_ErrorSublayerCycle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorSublayerCycle_ToString(
        _this: *const pcp_ErrorSublayerCycle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorTargetPermissionDenied_dtor(
        _this: *mut pcp_ErrorTargetPermissionDenied_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorTargetPermissionDenied_ToString(
        _this: *const pcp_ErrorTargetPermissionDenied_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorUnresolvedPrimPath_dtor(
        _this: *mut pcp_ErrorUnresolvedPrimPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorUnresolvedPrimPath_ToString(
        _this: *const pcp_ErrorUnresolvedPrimPath_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorVariableExpressionError_dtor(
        _this: *mut pcp_ErrorVariableExpressionError_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ErrorVariableExpressionError_ToString(
        _this: *const pcp_ErrorVariableExpressionError_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_Compute(
        sourceLayerStackId: *const pcp_LayerStackIdentifier_t,
        rootLayerStackId: *const pcp_LayerStackIdentifier_t,
        overrideExpressionVars: *const pcp_ExpressionVariables_t,
        _result: *mut *mut pcp_ExpressionVariables_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_op_eq(
        _this: *const pcp_ExpressionVariables_t,
        rhs: *const pcp_ExpressionVariables_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_op_neq(
        _this: *const pcp_ExpressionVariables_t,
        rhs: *const pcp_ExpressionVariables_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_GetSource(
        _this: *const pcp_ExpressionVariables_t,
        _result: *mut *const pcp_ExpressionVariablesSource_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_GetVariables(
        _this: *const pcp_ExpressionVariables_t,
        _result: *mut *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_SetVariables(
        _this: *mut pcp_ExpressionVariables_t,
        variables: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_default(
        _result: *mut *mut pcp_ExpressionVariables_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_ctor_01(
        source: *const pcp_ExpressionVariablesSource_t,
        expressionVariables: *const vt_Dictionary_t,
        _result: *mut *mut pcp_ExpressionVariables_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_ctor_02(
        source: *mut pcp_ExpressionVariablesSource_t,
        expressionVariables: *mut vt_Dictionary_t,
        _result: *mut *mut pcp_ExpressionVariables_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariables_dtor(
        _this: *mut pcp_ExpressionVariables_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariableCachingComposer_ComputeExpressionVariables(
        _this: *mut pcp_ExpressionVariableCachingComposer_t,
        id: *const pcp_LayerStackIdentifier_t,
        _result: *mut *const pcp_ExpressionVariables_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariableCachingComposer_ctor_00(
        rootLayerStackIdentifier: *const pcp_LayerStackIdentifier_t,
        _result: *mut *mut pcp_ExpressionVariableCachingComposer_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariableCachingComposer_dtor(
        _this: *mut pcp_ExpressionVariableCachingComposer_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesDependencyData_IsEmpty(
        _this: *const pcp_ExpressionVariablesDependencyData_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesDependencyData_GetDependenciesForLayerStack(
        _this: *const pcp_ExpressionVariablesDependencyData_t,
        layerStack: *const pcp_LayerStackPtr_t,
        _result: *mut *const std_StringUnorderedSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesDependencyData_default(
        _result: *mut *mut pcp_ExpressionVariablesDependencyData_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesDependencyData_dtor(
        _this: *mut pcp_ExpressionVariablesDependencyData_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_op_eq(
        _this: *const pcp_ExpressionVariablesSource_t,
        rhs: *const pcp_ExpressionVariablesSource_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_op_neq(
        _this: *const pcp_ExpressionVariablesSource_t,
        rhs: *const pcp_ExpressionVariablesSource_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_op_lt(
        _this: *const pcp_ExpressionVariablesSource_t,
        rhs: *const pcp_ExpressionVariablesSource_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_GetHash(
        _this: *const pcp_ExpressionVariablesSource_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_IsRootLayerStack(
        _this: *const pcp_ExpressionVariablesSource_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_GetLayerStackIdentifier(
        _this: *const pcp_ExpressionVariablesSource_t,
        _result: *mut *const pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_ResolveLayerStackIdentifier_00(
        _this: *const pcp_ExpressionVariablesSource_t,
        rootLayerStackIdentifier: *const pcp_LayerStackIdentifier_t,
        _result: *mut *const pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_ResolveLayerStackIdentifier_01(
        _this: *const pcp_ExpressionVariablesSource_t,
        cache: *const pcp_Cache_t,
        _result: *mut *const pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_default(
        _result: *mut *mut pcp_ExpressionVariablesSource_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_ctor_01(
        layerStackIdentifier: *const pcp_LayerStackIdentifier_t,
        rootLayerStackIdentifier: *const pcp_LayerStackIdentifier_t,
        _result: *mut *mut pcp_ExpressionVariablesSource_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_ExpressionVariablesSource_dtor(
        _this: *mut pcp_ExpressionVariablesSource_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_InstanceKey_op_eq(
        _this: *const pcp_InstanceKey_t,
        rhs: *const pcp_InstanceKey_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_InstanceKey_op_neq(
        _this: *const pcp_InstanceKey_t,
        rhs: *const pcp_InstanceKey_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_InstanceKey_GetString(
        _this: *const pcp_InstanceKey_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_InstanceKey_default(_result: *mut *mut pcp_InstanceKey_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_InstanceKey_ctor_01(
        primIndex: *const pcp_PrimIndex_t,
        _result: *mut *mut pcp_InstanceKey_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_InstanceKey_dtor(_this: *mut pcp_InstanceKey_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeIterator_default(_result: *mut *mut pcp_NodeIterator_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeIterator_dtor(_this: *mut pcp_NodeIterator_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeReverseIterator_default(
        _result: *mut *mut pcp_NodeReverseIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeReverseIterator_dtor(
        _this: *mut pcp_NodeReverseIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIterator_GetNode(
        _this: *const pcp_PrimIterator_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIterator_default(_result: *mut *mut pcp_PrimIterator_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIterator_dtor(_this: *mut pcp_PrimIterator_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimReverseIterator_GetNode(
        _this: *const pcp_PrimReverseIterator_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimReverseIterator_default(
        _result: *mut *mut pcp_PrimReverseIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimReverseIterator_dtor(
        _this: *mut pcp_PrimReverseIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIterator_GetNode(
        _this: *const pcp_PropertyIterator_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIterator_IsLocal(
        _this: *const pcp_PropertyIterator_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIterator_default(
        _result: *mut *mut pcp_PropertyIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIterator_dtor(_this: *mut pcp_PropertyIterator_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyReverseIterator_GetNode(
        _this: *const pcp_PropertyReverseIterator_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyReverseIterator_IsLocal(
        _this: *const pcp_PropertyReverseIterator_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyReverseIterator_default(
        _result: *mut *mut pcp_PropertyReverseIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyReverseIterator_dtor(
        _this: *mut pcp_PropertyReverseIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetIdentifier(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetSessionLayers(
        _this: *const pcp_LayerStack_t,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetLayerTree(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const sdf_LayerTreeHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetLayerOffsetForLayer_00(
        _this: *const pcp_LayerStack_t,
        param00: *const sdf_LayerHandle_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetLayerOffsetForLayer_01(
        _this: *const pcp_LayerStack_t,
        param00: *const sdf_LayerRefPtr_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetLayerOffsetForLayer_02(
        _this: *const pcp_LayerStack_t,
        layerIdx: usize,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetMutedLayers(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetLocalErrors(
        _this: *const pcp_LayerStack_t,
        _result: *mut *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_HasLayer_00(
        _this: *const pcp_LayerStack_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_HasLayer_01(
        _this: *const pcp_LayerStack_t,
        layer: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetExpressionVariables(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const pcp_ExpressionVariables_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetExpressionVariableDependencies(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const std_StringUnorderedSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetTimeCodesPerSecond(
        _this: *const pcp_LayerStack_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetRelocatesSourceToTarget(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetRelocatesTargetToSource(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetIncrementalRelocatesSourceToTarget(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetIncrementalRelocatesTargetToSource(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetPathsToPrimsWithRelocates(
        _this: *const pcp_LayerStack_t,
        _result: *mut *const sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_GetExpressionForRelocatesAtPath(
        _this: *mut pcp_LayerStack_t,
        path: *const sdf_Path_t,
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStack_dtor(_this: *mut pcp_LayerStack_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_dtor(_this: *mut pcp_LayerStackPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetIdentifier(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetSessionLayers(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetLayerTree(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const sdf_LayerTreeHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetLayerOffsetForLayer_00(
        _this: *const pcp_LayerStackPtr_t,
        param00: *const sdf_LayerHandle_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetLayerOffsetForLayer_01(
        _this: *const pcp_LayerStackPtr_t,
        param00: *const sdf_LayerRefPtr_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetLayerOffsetForLayer_02(
        _this: *const pcp_LayerStackPtr_t,
        layerIdx: usize,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetMutedLayers(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetLocalErrors(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_HasLayer_00(
        _this: *const pcp_LayerStackPtr_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_HasLayer_01(
        _this: *const pcp_LayerStackPtr_t,
        layer: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetExpressionVariables(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const pcp_ExpressionVariables_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetExpressionVariableDependencies(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const std_StringUnorderedSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetTimeCodesPerSecond(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetRelocatesSourceToTarget(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetRelocatesTargetToSource(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetIncrementalRelocatesSourceToTarget(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetIncrementalRelocatesTargetToSource(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetPathsToPrimsWithRelocates(
        _this: *const pcp_LayerStackPtr_t,
        _result: *mut *const sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtr_GetExpressionForRelocatesAtPath(
        _this: *mut pcp_LayerStackPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_data(
        _this: *mut pcp_LayerStackPtrVector_t,
        _result: *mut *mut pcp_LayerStackPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_data_const(
        _this: *const pcp_LayerStackPtrVector_t,
        _result: *mut *const pcp_LayerStackPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_empty(
        _this: *const pcp_LayerStackPtrVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_size(
        _this: *const pcp_LayerStackPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_max_size(
        _this: *const pcp_LayerStackPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_capacity(
        _this: *const pcp_LayerStackPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_clear(
        _this: *mut pcp_LayerStackPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_pop_back(
        _this: *mut pcp_LayerStackPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_op_index(
        _this: *const pcp_LayerStackPtrVector_t,
        __n: usize,
        _result: *mut *const pcp_LayerStackPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_default(
        _result: *mut *mut pcp_LayerStackPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackPtrVector_dtor(
        _this: *mut pcp_LayerStackPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_dtor(_this: *mut pcp_LayerStackRefPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetIdentifier(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetSessionLayers(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetLayerTree(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const sdf_LayerTreeHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetLayerOffsetForLayer_00(
        _this: *const pcp_LayerStackRefPtr_t,
        param00: *const sdf_LayerHandle_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetLayerOffsetForLayer_01(
        _this: *const pcp_LayerStackRefPtr_t,
        param00: *const sdf_LayerRefPtr_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetLayerOffsetForLayer_02(
        _this: *const pcp_LayerStackRefPtr_t,
        layerIdx: usize,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetMutedLayers(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetLocalErrors(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_HasLayer_00(
        _this: *const pcp_LayerStackRefPtr_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_HasLayer_01(
        _this: *const pcp_LayerStackRefPtr_t,
        layer: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetExpressionVariables(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const pcp_ExpressionVariables_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetExpressionVariableDependencies(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const std_StringUnorderedSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetTimeCodesPerSecond(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetRelocatesSourceToTarget(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetRelocatesTargetToSource(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetIncrementalRelocatesSourceToTarget(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetIncrementalRelocatesTargetToSource(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetPathsToPrimsWithRelocates(
        _this: *const pcp_LayerStackRefPtr_t,
        _result: *mut *const sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackRefPtr_GetExpressionForRelocatesAtPath(
        _this: *mut pcp_LayerStackRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_op_bool(
        _this: *const pcp_LayerStackIdentifier_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_op_eq(
        _this: *const pcp_LayerStackIdentifier_t,
        rhs: *const pcp_LayerStackIdentifier_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_op_neq(
        _this: *const pcp_LayerStackIdentifier_t,
        rhs: *const pcp_LayerStackIdentifier_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_op_lt(
        _this: *const pcp_LayerStackIdentifier_t,
        rhs: *const pcp_LayerStackIdentifier_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_op_lte(
        _this: *const pcp_LayerStackIdentifier_t,
        rhs: *const pcp_LayerStackIdentifier_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_op_gt(
        _this: *const pcp_LayerStackIdentifier_t,
        rhs: *const pcp_LayerStackIdentifier_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_op_gte(
        _this: *const pcp_LayerStackIdentifier_t,
        rhs: *const pcp_LayerStackIdentifier_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_GetHash(
        _this: *const pcp_LayerStackIdentifier_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_default(
        _result: *mut *mut pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_ctor_01(
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        expressionVariablesOverrideSource: *const pcp_ExpressionVariablesSource_t,
        _result: *mut *mut pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_LayerStackIdentifier_dtor(
        _this: *mut pcp_LayerStackIdentifier_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_Evaluate(
        _this: *const pcp_MapExpression_t,
        _result: *mut *const pcp_MapFunction_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_Swap(
        _this: *mut pcp_MapExpression_t,
        other: *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_IsNull(
        _this: *const pcp_MapExpression_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_Identity(
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_Constant(
        constValue: *const pcp_MapFunction_t,
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_Compose(
        _this: *const pcp_MapExpression_t,
        f: *const pcp_MapExpression_t,
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_Inverse(
        _this: *const pcp_MapExpression_t,
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_AddRootIdentity(
        _this: *const pcp_MapExpression_t,
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_IsConstantIdentity(
        _this: *const pcp_MapExpression_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_IsIdentity(
        _this: *const pcp_MapExpression_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_MapSourceToTarget(
        _this: *const pcp_MapExpression_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_MapTargetToSource(
        _this: *const pcp_MapExpression_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_GetTimeOffset(
        _this: *const pcp_MapExpression_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_GetString(
        _this: *const pcp_MapExpression_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_default(
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpression_dtor(_this: *mut pcp_MapExpression_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpressionVariable_GetValue(
        _this: *const pcp_MapExpressionVariable_t,
        _result: *mut *const pcp_MapFunction_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpressionVariable_GetExpression(
        _this: *const pcp_MapExpressionVariable_t,
        _result: *mut *mut pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapExpressionVariable_dtor(
        _this: *mut pcp_MapExpressionVariable_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_IsNull(
        _this: *const pcp_MapFunction_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_IsIdentity(
        _this: *const pcp_MapFunction_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_IsIdentityPathMapping(
        _this: *const pcp_MapFunction_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_HasRootIdentity(
        _this: *const pcp_MapFunction_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_Compose(
        _this: *const pcp_MapFunction_t,
        f: *const pcp_MapFunction_t,
        _result: *mut *mut pcp_MapFunction_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_ComposeOffset(
        _this: *const pcp_MapFunction_t,
        newOffset: *const sdf_LayerOffset_t,
        _result: *mut *mut pcp_MapFunction_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_GetInverse(
        _this: *const pcp_MapFunction_t,
        _result: *mut *mut pcp_MapFunction_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_GetSourceToTargetMap(
        _this: *const pcp_MapFunction_t,
        _result: *mut *mut pcp_MapFunctionPathMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_GetTimeOffset(
        _this: *const pcp_MapFunction_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_GetString(
        _this: *const pcp_MapFunction_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_Hash(
        _this: *const pcp_MapFunction_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_Create(
        sourceToTargetMap: *const pcp_MapFunctionPathMap_t,
        offset: *const sdf_LayerOffset_t,
        _result: *mut *mut pcp_MapFunction_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_Identity(
        _result: *mut *const pcp_MapFunction_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_IdentityPathMap(
        _result: *mut *const pcp_MapFunctionPathMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_default(_result: *mut *mut pcp_MapFunction_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunction_dtor(_this: *mut pcp_MapFunction_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_MapFunctionPathMap_dtor(
        _this: *mut pcp_MapFunctionPathMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NamespaceEdits_Swap(
        _this: *mut pcp_NamespaceEdits_t,
        rhs: *mut pcp_NamespaceEdits_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NamespaceEdits_dtor(_this: *mut pcp_NamespaceEdits_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NamespaceEditsCacheSite_dtor(
        _this: *mut pcp_NamespaceEditsCacheSite_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NamespaceEditsLayerStackSite_dtor(
        _this: *mut pcp_NamespaceEditsLayerStackSite_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_op_eq(
        _this: *const pcp_NodeRef_t,
        rhs: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_op_neq(
        _this: *const pcp_NodeRef_t,
        rhs: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_op_lt(
        _this: *const pcp_NodeRef_t,
        rhs: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_op_lte(
        _this: *const pcp_NodeRef_t,
        rhs: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_op_gt(
        _this: *const pcp_NodeRef_t,
        rhs: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_op_gte(
        _this: *const pcp_NodeRef_t,
        rhs: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetUniqueIdentifier(
        _this: *const pcp_NodeRef_t,
        _result: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetArcType(
        _this: *const pcp_NodeRef_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetParentNode(
        _this: *const pcp_NodeRef_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetOriginNode(
        _this: *const pcp_NodeRef_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetOriginRootNode(
        _this: *const pcp_NodeRef_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetRootNode(
        _this: *const pcp_NodeRef_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetMapToParent(
        _this: *const pcp_NodeRef_t,
        _result: *mut *const pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetMapToRoot(
        _this: *const pcp_NodeRef_t,
        _result: *mut *const pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetSiblingNumAtOrigin(
        _this: *const pcp_NodeRef_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetNamespaceDepth(
        _this: *const pcp_NodeRef_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetDepthBelowIntroduction(
        _this: *const pcp_NodeRef_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetPathAtIntroduction(
        _this: *const pcp_NodeRef_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetIntroPath(
        _this: *const pcp_NodeRef_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetPath(
        _this: *const pcp_NodeRef_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetLayerStack(
        _this: *const pcp_NodeRef_t,
        _result: *mut *const pcp_LayerStackRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_IsRootNode(
        _this: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_SetIsDueToAncestor(
        _this: *mut pcp_NodeRef_t,
        isDueToAncestor: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_IsDueToAncestor(
        _this: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_SetHasSymmetry(
        _this: *mut pcp_NodeRef_t,
        hasSymmetry: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_HasSymmetry(
        _this: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_SetPermission(
        _this: *mut pcp_NodeRef_t,
        perm: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_GetPermission(
        _this: *const pcp_NodeRef_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_SetInert(_this: *mut pcp_NodeRef_t, inert: bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_IsInert(
        _this: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_SetCulled(_this: *mut pcp_NodeRef_t, culled: bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_IsCulled(
        _this: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_SetRestricted(
        _this: *mut pcp_NodeRef_t,
        restricted: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_IsRestricted(
        _this: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_CanContributeSpecs(
        _this: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_SetHasSpecs(
        _this: *mut pcp_NodeRef_t,
        hasSpecs: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_HasSpecs(
        _this: *const pcp_NodeRef_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_default(_result: *mut *mut pcp_NodeRef_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_NodeRef_dtor(_this: *mut pcp_NodeRef_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_Swap(
        _this: *mut pcp_PrimIndex_t,
        rhs: *mut pcp_PrimIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_swap(
        _this: *mut pcp_PrimIndex_t,
        rhs: *mut pcp_PrimIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_IsValid(
        _this: *const pcp_PrimIndex_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_GetRootNode(
        _this: *const pcp_PrimIndex_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_GetPath(
        _this: *const pcp_PrimIndex_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_HasSpecs(
        _this: *const pcp_PrimIndex_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_HasAnyPayloads(
        _this: *const pcp_PrimIndex_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_IsUsd(
        _this: *const pcp_PrimIndex_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_IsInstanceable(
        _this: *const pcp_PrimIndex_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_GetNodeIteratorAtNode(
        _this: *const pcp_PrimIndex_t,
        node: *const pcp_NodeRef_t,
        _result: *mut *mut pcp_NodeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_GetNodeProvidingSpec_00(
        _this: *const pcp_PrimIndex_t,
        primSpec: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_GetNodeProvidingSpec_01(
        _this: *const pcp_PrimIndex_t,
        layer: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_GetLocalErrors(
        _this: *const pcp_PrimIndex_t,
        _result: *mut *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_PrintStatistics(_this: *const pcp_PrimIndex_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_DumpToString(
        _this: *const pcp_PrimIndex_t,
        includeInheritOriginInfo: bool,
        includeMaps: bool,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_DumpToDotGraph(
        _this: *const pcp_PrimIndex_t,
        filename: *const std_String_t,
        includeInheritOriginInfo: bool,
        includeMaps: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_ComputePrimPropertyNames(
        _this: *const pcp_PrimIndex_t,
        nameOrder: *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_ComposeAuthoredVariantSelections(
        _this: *const pcp_PrimIndex_t,
        _result: *mut *mut sdf_FileFormatFileFormatArguments_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_GetSelectionAppliedForVariantSet(
        _this: *const pcp_PrimIndex_t,
        variantSet: *const std_String_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_default(_result: *mut *mut pcp_PrimIndex_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndex_dtor(_this: *mut pcp_PrimIndex_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndexOutputs_dtor(_this: *mut pcp_PrimIndexOutputs_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndexInputs_Cache(
        _this: *mut pcp_PrimIndexInputs_t,
        cache_: *mut pcp_Cache_t,
        _result: *mut *mut pcp_PrimIndexInputs_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndexInputs_VariantFallbacks(
        _this: *mut pcp_PrimIndexInputs_t,
        map: *const pcp_VariantFallbackMap_t,
        _result: *mut *mut pcp_PrimIndexInputs_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndexInputs_IncludedPayloads(
        _this: *mut pcp_PrimIndexInputs_t,
        payloadSet: *const pcp_CachePayloadSet_t,
        _result: *mut *mut pcp_PrimIndexInputs_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndexInputs_Cull(
        _this: *mut pcp_PrimIndexInputs_t,
        doCulling: bool,
        _result: *mut *mut pcp_PrimIndexInputs_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndexInputs_USD(
        _this: *mut pcp_PrimIndexInputs_t,
        doUSD: bool,
        _result: *mut *mut pcp_PrimIndexInputs_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndexInputs_FileFormatTarget(
        _this: *mut pcp_PrimIndexInputs_t,
        target: *const std_String_t,
        _result: *mut *mut pcp_PrimIndexInputs_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndexInputs_default(
        _result: *mut *mut pcp_PrimIndexInputs_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PrimIndexInputs_dtor(_this: *mut pcp_PrimIndexInputs_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIndex_Swap(
        _this: *mut pcp_PropertyIndex_t,
        index: *mut pcp_PropertyIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIndex_IsEmpty(
        _this: *const pcp_PropertyIndex_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIndex_GetLocalErrors(
        _this: *const pcp_PropertyIndex_t,
        _result: *mut *mut pcp_ErrorBaseSharedPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIndex_GetNumLocalSpecs(
        _this: *const pcp_PropertyIndex_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIndex_default(
        _result: *mut *mut pcp_PropertyIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PropertyIndex_dtor(_this: *mut pcp_PropertyIndex_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_op_eq(
        _this: *const pcp_Site_t,
        rhs: *const pcp_Site_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_op_neq(
        _this: *const pcp_Site_t,
        rhs: *const pcp_Site_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_op_lt(
        _this: *const pcp_Site_t,
        rhs: *const pcp_Site_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_op_lte(
        _this: *const pcp_Site_t,
        rhs: *const pcp_Site_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_op_gt(
        _this: *const pcp_Site_t,
        rhs: *const pcp_Site_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_op_gte(
        _this: *const pcp_Site_t,
        rhs: *const pcp_Site_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_op_assign_00(
        _this: *mut pcp_Site_t,
        param00: *const pcp_Site_t,
        _result: *mut *mut pcp_Site_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_op_assign_01(
        _this: *mut pcp_Site_t,
        param00: *mut pcp_Site_t,
        _result: *mut *mut pcp_Site_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_default(_result: *mut *mut pcp_Site_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_ctor_01(
        param_00: *const pcp_LayerStackIdentifier_t,
        path: *const sdf_Path_t,
        _result: *mut *mut pcp_Site_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_ctor_02(
        param_00: *const pcp_LayerStackPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut pcp_Site_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_ctor_03(
        param_00: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut pcp_Site_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Site_dtor(_this: *mut pcp_Site_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_TargetIndex_dtor(_this: *mut pcp_TargetIndex_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_VariantFallbackMap_dtor(
        _this: *mut pcp_VariantFallbackMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_SiteTrackerSegment_dtor(
        _this: *mut pcp_SiteTrackerSegment_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Arc_get_type(
        arc: *const pcp_Arc_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Arc_get_parent(
        arc: *const pcp_Arc_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Arc_get_origin(
        arc: *const pcp_Arc_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Arc_get_map_to_parent(
        arc: *const pcp_Arc_t,
        _result: *mut *const pcp_MapExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Arc_get_sibling_num_at_origin(
        arc: *const pcp_Arc_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_Arc_get_namespace_depth(
        arc: *const pcp_Arc_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PcpIsInheritArc(
        arcType: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PcpIsSpecializeArc(
        arcType: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pcp_PcpIsClassBasedArc(
        arcType: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_CopyFrom(
        _this: *mut sdf_AbstractData_t,
        source: *const sdf_AbstractDataConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_StreamsData(
        _this: *const sdf_AbstractData_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_IsDetached(
        _this: *const sdf_AbstractData_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_IsEmpty(
        _this: *const sdf_AbstractData_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_Equals(
        _this: *const sdf_AbstractData_t,
        rhs: *const sdf_AbstractDataRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_CreateSpec(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
        specType: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_HasSpec(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_EraseSpec(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_MoveSpec(
        _this: *mut sdf_AbstractData_t,
        oldPath: *const sdf_Path_t,
        newPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_GetSpecType(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_Has_00(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_Has_01(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_HasSpecAndField_00(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_HasSpecAndField_01(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_Get(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_Set_00(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_Set_01(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_Erase(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_List(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_HasDictKey_00(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_HasDictKey_01(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_GetDictValueByKey(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_SetDictValueByKey_00(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_SetDictValueByKey_01(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_EraseDictValueByKey(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_ListDictKeys(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_ListAllTimeSamples(
        _this: *const sdf_AbstractData_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_ListTimeSamplesForPath(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_GetBracketingTimeSamples(
        _this: *const sdf_AbstractData_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_GetNumTimeSamplesForPath(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_GetBracketingTimeSamplesForPath(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_QueryTimeSample_00(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_QueryTimeSample_01(
        _this: *const sdf_AbstractData_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_SetTimeSample(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_EraseTimeSample(
        _this: *mut sdf_AbstractData_t,
        path: *const sdf_Path_t,
        time: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractData_dtor(_this: *mut sdf_AbstractData_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_dtor(_this: *mut sdf_AbstractDataPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_CopyFrom(
        _this: *mut sdf_AbstractDataPtr_t,
        source: *const sdf_AbstractDataConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_StreamsData(
        _this: *const sdf_AbstractDataPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_IsDetached(
        _this: *const sdf_AbstractDataPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_IsEmpty(
        _this: *const sdf_AbstractDataPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_Equals(
        _this: *const sdf_AbstractDataPtr_t,
        rhs: *const sdf_AbstractDataRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_CreateSpec(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        specType: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_HasSpec(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_EraseSpec(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_MoveSpec(
        _this: *mut sdf_AbstractDataPtr_t,
        oldPath: *const sdf_Path_t,
        newPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_GetSpecType(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_Has_00(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_Has_01(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_HasSpecAndField_00(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_HasSpecAndField_01(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_Get(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_Set_00(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_Set_01(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_Erase(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_List(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_HasDictKey_00(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_HasDictKey_01(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_GetDictValueByKey(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_SetDictValueByKey_00(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_SetDictValueByKey_01(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_EraseDictValueByKey(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_ListDictKeys(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_ListAllTimeSamples(
        _this: *const sdf_AbstractDataPtr_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_ListTimeSamplesForPath(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_GetBracketingTimeSamples(
        _this: *const sdf_AbstractDataPtr_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_GetNumTimeSamplesForPath(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_GetBracketingTimeSamplesForPath(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_QueryTimeSample_00(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_QueryTimeSample_01(
        _this: *const sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_SetTimeSample(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtr_EraseTimeSample(
        _this: *mut sdf_AbstractDataPtr_t,
        path: *const sdf_Path_t,
        time: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_data(
        _this: *mut sdf_AbstractDataPtrVector_t,
        _result: *mut *mut sdf_AbstractDataPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_data_const(
        _this: *const sdf_AbstractDataPtrVector_t,
        _result: *mut *const sdf_AbstractDataPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_empty(
        _this: *const sdf_AbstractDataPtrVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_size(
        _this: *const sdf_AbstractDataPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_max_size(
        _this: *const sdf_AbstractDataPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_capacity(
        _this: *const sdf_AbstractDataPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_clear(
        _this: *mut sdf_AbstractDataPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_pop_back(
        _this: *mut sdf_AbstractDataPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_op_index(
        _this: *const sdf_AbstractDataPtrVector_t,
        __n: usize,
        _result: *mut *const sdf_AbstractDataPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_default(
        _result: *mut *mut sdf_AbstractDataPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataPtrVector_dtor(
        _this: *mut sdf_AbstractDataPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_dtor(
        _this: *mut sdf_AbstractDataConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_StreamsData(
        _this: *const sdf_AbstractDataConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_IsDetached(
        _this: *const sdf_AbstractDataConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_IsEmpty(
        _this: *const sdf_AbstractDataConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_Equals(
        _this: *const sdf_AbstractDataConstPtr_t,
        rhs: *const sdf_AbstractDataRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_HasSpec(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_GetSpecType(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_Has_00(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_Has_01(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_HasSpecAndField_00(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_HasSpecAndField_01(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_Get(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_List(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_HasDictKey_00(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_HasDictKey_01(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_GetDictValueByKey(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_ListDictKeys(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_ListAllTimeSamples(
        _this: *const sdf_AbstractDataConstPtr_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_ListTimeSamplesForPath(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_GetBracketingTimeSamples(
        _this: *const sdf_AbstractDataConstPtr_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_GetNumTimeSamplesForPath(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_GetBracketingTimeSamplesForPath(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_QueryTimeSample_00(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtr_QueryTimeSample_01(
        _this: *const sdf_AbstractDataConstPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_data(
        _this: *mut sdf_AbstractDataConstPtrVector_t,
        _result: *mut *mut sdf_AbstractDataConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_data_const(
        _this: *const sdf_AbstractDataConstPtrVector_t,
        _result: *mut *const sdf_AbstractDataConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_empty(
        _this: *const sdf_AbstractDataConstPtrVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_size(
        _this: *const sdf_AbstractDataConstPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_max_size(
        _this: *const sdf_AbstractDataConstPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_capacity(
        _this: *const sdf_AbstractDataConstPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_clear(
        _this: *mut sdf_AbstractDataConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_pop_back(
        _this: *mut sdf_AbstractDataConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_op_index(
        _this: *const sdf_AbstractDataConstPtrVector_t,
        __n: usize,
        _result: *mut *const sdf_AbstractDataConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_default(
        _result: *mut *mut sdf_AbstractDataConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstPtrVector_dtor(
        _this: *mut sdf_AbstractDataConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_dtor(
        _this: *mut sdf_AbstractDataRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_CopyFrom(
        _this: *mut sdf_AbstractDataRefPtr_t,
        source: *const sdf_AbstractDataConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_StreamsData(
        _this: *const sdf_AbstractDataRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_IsDetached(
        _this: *const sdf_AbstractDataRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_IsEmpty(
        _this: *const sdf_AbstractDataRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_Equals(
        _this: *const sdf_AbstractDataRefPtr_t,
        rhs: *const sdf_AbstractDataRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_CreateSpec(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        specType: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_HasSpec(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_EraseSpec(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_MoveSpec(
        _this: *mut sdf_AbstractDataRefPtr_t,
        oldPath: *const sdf_Path_t,
        newPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_GetSpecType(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_Has_00(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_Has_01(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_HasSpecAndField_00(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_HasSpecAndField_01(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_Get(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_Set_00(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_Set_01(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_Erase(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_List(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_HasDictKey_00(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_HasDictKey_01(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_GetDictValueByKey(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_SetDictValueByKey_00(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_SetDictValueByKey_01(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_EraseDictValueByKey(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_ListDictKeys(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_ListAllTimeSamples(
        _this: *const sdf_AbstractDataRefPtr_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_ListTimeSamplesForPath(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_GetBracketingTimeSamples(
        _this: *const sdf_AbstractDataRefPtr_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_GetNumTimeSamplesForPath(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_GetBracketingTimeSamplesForPath(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_QueryTimeSample_00(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_QueryTimeSample_01(
        _this: *const sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_SetTimeSample(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtr_EraseTimeSample(
        _this: *mut sdf_AbstractDataRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_data(
        _this: *mut sdf_AbstractDataRefPtrVector_t,
        _result: *mut *mut sdf_AbstractDataRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_data_const(
        _this: *const sdf_AbstractDataRefPtrVector_t,
        _result: *mut *const sdf_AbstractDataRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_empty(
        _this: *const sdf_AbstractDataRefPtrVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_size(
        _this: *const sdf_AbstractDataRefPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_max_size(
        _this: *const sdf_AbstractDataRefPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_capacity(
        _this: *const sdf_AbstractDataRefPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_clear(
        _this: *mut sdf_AbstractDataRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_pop_back(
        _this: *mut sdf_AbstractDataRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_op_index(
        _this: *const sdf_AbstractDataRefPtrVector_t,
        __n: usize,
        _result: *mut *const sdf_AbstractDataRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_default(
        _result: *mut *mut sdf_AbstractDataRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataRefPtrVector_dtor(
        _this: *mut sdf_AbstractDataRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_dtor(
        _this: *mut sdf_AbstractDataConstRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_StreamsData(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_IsDetached(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_IsEmpty(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_Equals(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        rhs: *const sdf_AbstractDataRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_HasSpec(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_GetSpecType(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_Has_00(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_Has_01(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_HasSpecAndField_00(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_HasSpecAndField_01(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_Get(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_List(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_HasDictKey_00(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_HasDictKey_01(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_GetDictValueByKey(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_ListDictKeys(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_ListAllTimeSamples(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_ListTimeSamplesForPath(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_GetBracketingTimeSamples(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_GetNumTimeSamplesForPath(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_GetBracketingTimeSamplesForPath(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_QueryTimeSample_00(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtr_QueryTimeSample_01(
        _this: *const sdf_AbstractDataConstRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_data(
        _this: *mut sdf_AbstractDataConstRefPtrVector_t,
        _result: *mut *mut sdf_AbstractDataConstRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_data_const(
        _this: *const sdf_AbstractDataConstRefPtrVector_t,
        _result: *mut *const sdf_AbstractDataConstRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_empty(
        _this: *const sdf_AbstractDataConstRefPtrVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_size(
        _this: *const sdf_AbstractDataConstRefPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_max_size(
        _this: *const sdf_AbstractDataConstRefPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_capacity(
        _this: *const sdf_AbstractDataConstRefPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_clear(
        _this: *mut sdf_AbstractDataConstRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_pop_back(
        _this: *mut sdf_AbstractDataConstRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_op_index(
        _this: *const sdf_AbstractDataConstRefPtrVector_t,
        __n: usize,
        _result: *mut *const sdf_AbstractDataConstRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_default(
        _result: *mut *mut sdf_AbstractDataConstRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstRefPtrVector_dtor(
        _this: *mut sdf_AbstractDataConstRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataValue_StoreValue(
        _this: *mut sdf_AbstractDataValue_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataValue_StoreValue_block(
        _this: *mut sdf_AbstractDataValue_t,
        block: *const sdf_ValueBlock_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataValue_dtor(_this: *mut sdf_AbstractDataValue_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstValue_GetValue(
        _this: *const sdf_AbstractDataConstValue_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstValue_IsEqual(
        _this: *const sdf_AbstractDataConstValue_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AbstractDataConstValue_dtor(
        _this: *mut sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Allowed_IsAllowed(
        _this: *const sdf_Allowed_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Allowed_GetWhyNot(
        _this: *const sdf_Allowed_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Allowed_new(_result: *mut *mut sdf_Allowed_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Allowed_from_bool(
        param00: bool,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Allowed_from_string(
        param00: *const ::std::os::raw::c_char,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Allowed_from_bool_and_string(
        param00: bool,
        param01: *const ::std::os::raw::c_char,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Allowed_dtor(_this: *mut sdf_Allowed_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPath_op_eq(
        _this: *const sdf_AssetPath_t,
        rhs: *const sdf_AssetPath_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPath_op_neq(
        _this: *const sdf_AssetPath_t,
        rhs: *const sdf_AssetPath_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPath_op_lt(
        _this: *const sdf_AssetPath_t,
        rhs: *const sdf_AssetPath_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPath_new(_result: *mut *mut sdf_AssetPath_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPath_dtor(_this: *mut sdf_AssetPath_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPathArray_dtor(_this: *mut sdf_AssetPathArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_New(
        owner: *const sdf_PrimSpecHandle_t,
        name: *const std_String_t,
        typeName: *const sdf_ValueTypeName_t,
        variability: ::std::os::raw::c_uint,
        custom: bool,
        _result: *mut *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_HasConnectionPaths(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_ClearConnectionPaths(
        _this: *mut sdf_AttributeSpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetAllowedTokens(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut vt_TokenArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_HasAllowedTokens(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetAllowedTokens(
        _this: *mut sdf_AttributeSpec_t,
        allowedTokens: *const vt_TokenArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_ClearAllowedTokens(
        _this: *mut sdf_AttributeSpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetDisplayUnit(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut tf_Enum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetDisplayUnit(
        _this: *mut sdf_AttributeSpec_t,
        displayUnit: *const tf_Enum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_HasDisplayUnit(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_ClearDisplayUnit(
        _this: *mut sdf_AttributeSpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetColorSpace(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetColorSpace(
        _this: *mut sdf_AttributeSpec_t,
        colorSpace: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_HasColorSpace(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_ClearColorSpace(
        _this: *mut sdf_AttributeSpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetRoleName(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_default(
        _result: *mut *mut sdf_AttributeSpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_dtor(_this: *mut sdf_AttributeSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetSchema(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetSpecType(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_IsDormant(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetLayer(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetPath(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_PermissionToEdit(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_ListInfoKeys(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetMetaDataInfoKeys(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetMetaDataDisplayGroup(
        _this: *const sdf_AttributeSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetInfo(
        _this: *const sdf_AttributeSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetInfo(
        _this: *mut sdf_AttributeSpec_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetInfoDictionaryValue(
        _this: *mut sdf_AttributeSpec_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_HasInfo(
        _this: *const sdf_AttributeSpec_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_ClearInfo(
        _this: *mut sdf_AttributeSpec_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetTypeForInfo(
        _this: *const sdf_AttributeSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetFallbackForInfo(
        _this: *const sdf_AttributeSpec_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_IsInert(
        _this: *const sdf_AttributeSpec_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_ListFields(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_HasField_00(
        _this: *const sdf_AttributeSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetField(
        _this: *const sdf_AttributeSpec_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetField_00(
        _this: *mut sdf_AttributeSpec_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_ClearField(
        _this: *mut sdf_AttributeSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_op_eq(
        _this: *const sdf_AttributeSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_op_lt(
        _this: *const sdf_AttributeSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetName(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetNameToken(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_CanSetName(
        _this: *const sdf_AttributeSpec_t,
        newName: *const std_String_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetName(
        _this: *mut sdf_AttributeSpec_t,
        newName: *const std_String_t,
        validate: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetOwner(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetCustomData(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetAssetInfo(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetCustomData(
        _this: *mut sdf_AttributeSpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetAssetInfo(
        _this: *mut sdf_AttributeSpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetDisplayGroup(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetDisplayGroup(
        _this: *mut sdf_AttributeSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetDisplayName(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetDisplayName(
        _this: *mut sdf_AttributeSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetDocumentation(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetDocumentation(
        _this: *mut sdf_AttributeSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetHidden(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetHidden(
        _this: *mut sdf_AttributeSpec_t,
        value: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetPermission(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetPermission(
        _this: *mut sdf_AttributeSpec_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetPrefix(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetPrefix(
        _this: *mut sdf_AttributeSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetSuffix(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetSuffix(
        _this: *mut sdf_AttributeSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetSymmetricPeer(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetSymmetricPeer(
        _this: *mut sdf_AttributeSpec_t,
        peerName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetSymmetryArguments(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetSymmetryArgument(
        _this: *mut sdf_AttributeSpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetSymmetryFunction(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetSymmetryFunction(
        _this: *mut sdf_AttributeSpec_t,
        functionName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetTimeSampleMap(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut sdf_TimeSampleMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetValueType(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetTypeName(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetDefaultValue(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetDefaultValue(
        _this: *mut sdf_AttributeSpec_t,
        defaultValue: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_HasDefaultValue(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_ClearDefaultValue(
        _this: *mut sdf_AttributeSpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetComment(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetComment(
        _this: *mut sdf_AttributeSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_IsCustom(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_SetCustom(
        _this: *mut sdf_AttributeSpec_t,
        custom: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_GetVariability(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpec_HasOnlyRequiredFields(
        _this: *const sdf_AttributeSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_dtor(
        _this: *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_HasConnectionPaths(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_ClearConnectionPaths(
        _this: *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetAllowedTokens(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut vt_TokenArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_HasAllowedTokens(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetAllowedTokens(
        _this: *mut sdf_AttributeSpecHandle_t,
        allowedTokens: *const vt_TokenArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_ClearAllowedTokens(
        _this: *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetDisplayUnit(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut tf_Enum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetDisplayUnit(
        _this: *mut sdf_AttributeSpecHandle_t,
        displayUnit: *const tf_Enum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_HasDisplayUnit(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_ClearDisplayUnit(
        _this: *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetColorSpace(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetColorSpace(
        _this: *mut sdf_AttributeSpecHandle_t,
        colorSpace: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_HasColorSpace(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_ClearColorSpace(
        _this: *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetRoleName(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetSchema(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetSpecType(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_IsDormant(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetLayer(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetPath(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_PermissionToEdit(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_ListInfoKeys(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetMetaDataInfoKeys(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetMetaDataDisplayGroup(
        _this: *const sdf_AttributeSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetInfo(
        _this: *const sdf_AttributeSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetInfo(
        _this: *mut sdf_AttributeSpecHandle_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetInfoDictionaryValue(
        _this: *mut sdf_AttributeSpecHandle_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_HasInfo(
        _this: *const sdf_AttributeSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_ClearInfo(
        _this: *mut sdf_AttributeSpecHandle_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetTypeForInfo(
        _this: *const sdf_AttributeSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetFallbackForInfo(
        _this: *const sdf_AttributeSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_IsInert(
        _this: *const sdf_AttributeSpecHandle_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_ListFields(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_HasField_00(
        _this: *const sdf_AttributeSpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetField(
        _this: *const sdf_AttributeSpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetField_00(
        _this: *mut sdf_AttributeSpecHandle_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_ClearField(
        _this: *mut sdf_AttributeSpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_op_eq(
        _this: *const sdf_AttributeSpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_op_lt(
        _this: *const sdf_AttributeSpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetName(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetNameToken(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_CanSetName(
        _this: *const sdf_AttributeSpecHandle_t,
        newName: *const std_String_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetName(
        _this: *mut sdf_AttributeSpecHandle_t,
        newName: *const std_String_t,
        validate: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetOwner(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetCustomData(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetAssetInfo(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetCustomData(
        _this: *mut sdf_AttributeSpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetAssetInfo(
        _this: *mut sdf_AttributeSpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetDisplayGroup(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetDisplayGroup(
        _this: *mut sdf_AttributeSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetDisplayName(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetDisplayName(
        _this: *mut sdf_AttributeSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetDocumentation(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetDocumentation(
        _this: *mut sdf_AttributeSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetHidden(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetHidden(
        _this: *mut sdf_AttributeSpecHandle_t,
        value: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetPermission(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetPermission(
        _this: *mut sdf_AttributeSpecHandle_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetPrefix(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetPrefix(
        _this: *mut sdf_AttributeSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetSuffix(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetSuffix(
        _this: *mut sdf_AttributeSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetSymmetricPeer(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetSymmetricPeer(
        _this: *mut sdf_AttributeSpecHandle_t,
        peerName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetSymmetryArguments(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetSymmetryArgument(
        _this: *mut sdf_AttributeSpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetSymmetryFunction(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetSymmetryFunction(
        _this: *mut sdf_AttributeSpecHandle_t,
        functionName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetTimeSampleMap(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut sdf_TimeSampleMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetValueType(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetTypeName(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetDefaultValue(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetDefaultValue(
        _this: *mut sdf_AttributeSpecHandle_t,
        defaultValue: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_HasDefaultValue(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_ClearDefaultValue(
        _this: *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetComment(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetComment(
        _this: *mut sdf_AttributeSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_IsCustom(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_SetCustom(
        _this: *mut sdf_AttributeSpecHandle_t,
        custom: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_GetVariability(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandle_HasOnlyRequiredFields(
        _this: *const sdf_AttributeSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_data(
        _this: *mut sdf_AttributeSpecHandleVector_t,
        _result: *mut *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_data_const(
        _this: *const sdf_AttributeSpecHandleVector_t,
        _result: *mut *const sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_empty(
        _this: *const sdf_AttributeSpecHandleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_size(
        _this: *const sdf_AttributeSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_max_size(
        _this: *const sdf_AttributeSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_capacity(
        _this: *const sdf_AttributeSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_clear(
        _this: *mut sdf_AttributeSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_pop_back(
        _this: *mut sdf_AttributeSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_op_index(
        _this: *const sdf_AttributeSpecHandleVector_t,
        __n: usize,
        _result: *mut *const sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_default(
        _result: *mut *mut sdf_AttributeSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecHandleVector_dtor(
        _this: *mut sdf_AttributeSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AttributeSpecView_dtor(_this: *mut sdf_AttributeSpecView_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ChangeBlock_default(_result: *mut *mut sdf_ChangeBlock_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ChangeBlock_dtor(_this: *mut sdf_ChangeBlock_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ChangeList_dtor(_this: *mut sdf_ChangeList_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfChangeListEntry_HasInfoChange(
        _this: *const sdf_SdfChangeListEntry_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfChangeListEntry_default(
        _result: *mut *mut sdf_SdfChangeListEntry_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfChangeListEntry_dtor(
        _this: *mut sdf_SdfChangeListEntry_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ChangeListEntryList_dtor(
        _this: *mut sdf_ChangeListEntryList_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathChangeListEntryPair_dtor(
        _this: *mut sdf_PathChangeListEntryPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerChangeListVec_dtor(
        _this: *mut sdf_LayerChangeListVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfCopySpecsValueEdit_dtor(
        _this: *mut sdf_SdfCopySpecsValueEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_StreamsData(
        _this: *const sdf_SdfData_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_IsDetached(
        _this: *const sdf_SdfData_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_CreateSpec(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
        specType: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_HasSpec(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_EraseSpec(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_MoveSpec(
        _this: *mut sdf_SdfData_t,
        oldPath: *const sdf_Path_t,
        newPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_GetSpecType(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_Has_00(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_Has_01(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_HasSpecAndField_00(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_HasSpecAndField_01(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        specType: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_Get(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_Set_00(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_Set_01(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_Erase(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_List(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_ListAllTimeSamples(
        _this: *const sdf_SdfData_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_ListTimeSamplesForPath(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_GetBracketingTimeSamples(
        _this: *const sdf_SdfData_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_GetNumTimeSamplesForPath(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_GetBracketingTimeSamplesForPath(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_SetTimeSample(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_EraseTimeSample(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
        time: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_default(_result: *mut *mut sdf_SdfData_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_dtor(_this: *mut sdf_SdfData_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_CopyFrom(
        _this: *mut sdf_SdfData_t,
        source: *const sdf_AbstractDataConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_IsEmpty(
        _this: *const sdf_SdfData_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_Equals(
        _this: *const sdf_SdfData_t,
        rhs: *const sdf_AbstractDataRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_HasDictKey_00(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_HasDictKey_01(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_GetDictValueByKey(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_SetDictValueByKey_00(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_SetDictValueByKey_01(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_EraseDictValueByKey(
        _this: *mut sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_ListDictKeys(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_QueryTimeSample_00(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfData_QueryTimeSample_01(
        _this: *const sdf_SdfData_t,
        path: *const sdf_Path_t,
        time: f64,
        optionalValue: *mut sdf_AbstractDataValue_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetSchema(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetFormatId(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetTarget(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetFileCookie(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetVersionString(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_IsPrimaryFormatForExtensions(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetFileExtensions(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetPrimaryFileExtension(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_IsSupportedExtension(
        _this: *const sdf_SdfFileFormat_t,
        extension: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_IsPackage(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetPackageRootLayerPath(
        _this: *const sdf_SdfFileFormat_t,
        resolvedPath: *const std_String_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetDefaultFileFormatArguments(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut *mut sdf_FileFormatFileFormatArguments_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_InitData(
        _this: *const sdf_SdfFileFormat_t,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut *mut sdf_AbstractDataRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_InitDetachedData(
        _this: *const sdf_SdfFileFormat_t,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut *mut sdf_AbstractDataRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_NewLayer(
        _this: *const sdf_SdfFileFormat_t,
        fileFormat: *const sdf_FileFormatConstPtr_t,
        identifier: *const std_String_t,
        realPath: *const std_String_t,
        assetInfo: *const ar_AssetInfo_t,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_ShouldSkipAnonymousReload(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_ShouldReadAnonymousLayers(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_CanRead(
        _this: *const sdf_SdfFileFormat_t,
        file: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_Read(
        _this: *const sdf_SdfFileFormat_t,
        layer: *mut sdf_Layer_t,
        resolvedPath: *const std_String_t,
        metadataOnly: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_ReadDetached(
        _this: *const sdf_SdfFileFormat_t,
        layer: *mut sdf_Layer_t,
        resolvedPath: *const std_String_t,
        metadataOnly: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_WriteToFile(
        _this: *const sdf_SdfFileFormat_t,
        layer: *const sdf_Layer_t,
        filePath: *const std_String_t,
        comment: *const std_String_t,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_ReadFromString(
        _this: *const sdf_SdfFileFormat_t,
        layer: *mut sdf_Layer_t,
        str_: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_WriteToString(
        _this: *const sdf_SdfFileFormat_t,
        layer: *const sdf_Layer_t,
        str_: *mut std_String_t,
        comment: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetExternalAssetDependencies(
        _this: *const sdf_SdfFileFormat_t,
        layer: *const sdf_Layer_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_SupportsReading(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_SupportsWriting(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_SupportsEditing(
        _this: *const sdf_SdfFileFormat_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_GetFileExtension(
        s: *const std_String_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_FindAllFileFormatExtensions(
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_FindAllDerivedFileFormatExtensions(
        baseType: *const tf_Type_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_FormatSupportsReading(
        extension: *const std_String_t,
        target: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_FormatSupportsWriting(
        extension: *const std_String_t,
        target: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_FormatSupportsEditing(
        extension: *const std_String_t,
        target: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_FindById(
        formatId: *const tf_Token_t,
        _result: *mut *mut sdf_FileFormatConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_FindByExtension_00(
        path: *const std_String_t,
        target: *const std_String_t,
        _result: *mut *mut sdf_FileFormatConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfFileFormat_FindByExtension_01(
        path: *const std_String_t,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut *mut sdf_FileFormatConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_dtor(
        _this: *mut sdf_FileFormatConstPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetSchema(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetFormatId(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetTarget(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetFileCookie(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetVersionString(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_IsPrimaryFormatForExtensions(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetFileExtensions(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetPrimaryFileExtension(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_IsSupportedExtension(
        _this: *const sdf_FileFormatConstPtr_t,
        extension: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_IsPackage(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetPackageRootLayerPath(
        _this: *const sdf_FileFormatConstPtr_t,
        resolvedPath: *const std_String_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetDefaultFileFormatArguments(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut *mut sdf_FileFormatFileFormatArguments_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_InitData(
        _this: *const sdf_FileFormatConstPtr_t,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut *mut sdf_AbstractDataRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_InitDetachedData(
        _this: *const sdf_FileFormatConstPtr_t,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut *mut sdf_AbstractDataRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_NewLayer(
        _this: *const sdf_FileFormatConstPtr_t,
        fileFormat: *const sdf_FileFormatConstPtr_t,
        identifier: *const std_String_t,
        realPath: *const std_String_t,
        assetInfo: *const ar_AssetInfo_t,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_ShouldSkipAnonymousReload(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_ShouldReadAnonymousLayers(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_CanRead(
        _this: *const sdf_FileFormatConstPtr_t,
        file: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_Read(
        _this: *const sdf_FileFormatConstPtr_t,
        layer: *mut sdf_Layer_t,
        resolvedPath: *const std_String_t,
        metadataOnly: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_ReadDetached(
        _this: *const sdf_FileFormatConstPtr_t,
        layer: *mut sdf_Layer_t,
        resolvedPath: *const std_String_t,
        metadataOnly: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_WriteToFile(
        _this: *const sdf_FileFormatConstPtr_t,
        layer: *const sdf_Layer_t,
        filePath: *const std_String_t,
        comment: *const std_String_t,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_ReadFromString(
        _this: *const sdf_FileFormatConstPtr_t,
        layer: *mut sdf_Layer_t,
        str_: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_WriteToString(
        _this: *const sdf_FileFormatConstPtr_t,
        layer: *const sdf_Layer_t,
        str_: *mut std_String_t,
        comment: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_GetExternalAssetDependencies(
        _this: *const sdf_FileFormatConstPtr_t,
        layer: *const sdf_Layer_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_SupportsReading(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_SupportsWriting(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatConstPtr_SupportsEditing(
        _this: *const sdf_FileFormatConstPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FileFormatFileFormatArguments_dtor(
        _this: *mut sdf_FileFormatFileFormatArguments_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetExternalReferences(
        _this: *const sdf_Layer_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_UpdateExternalReference(
        _this: *mut sdf_Layer_t,
        oldAssetPath: *const std_String_t,
        newAssetPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetCompositionAssetDependencies(
        _this: *const sdf_Layer_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_UpdateCompositionAssetDependency(
        _this: *mut sdf_Layer_t,
        oldAssetPath: *const std_String_t,
        newAssetPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetExternalAssetDependencies(
        _this: *const sdf_Layer_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetSpecType(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasSpec(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ListFields(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasField(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasFieldDictKey(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetField(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetFieldDictValueByKey(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetField(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetFieldDictValueByKey(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_EraseField(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_EraseFieldDictValueByKey(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetColorConfiguration(
        _this: *const sdf_Layer_t,
        _result: *mut *mut sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetColorConfiguration(
        _this: *mut sdf_Layer_t,
        colorConfiguration: *const sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasColorConfiguration(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearColorConfiguration(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetColorManagementSystem(
        _this: *const sdf_Layer_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetColorManagementSystem(
        _this: *mut sdf_Layer_t,
        cms: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasColorManagementSystem(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearColorManagementSystem(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetComment(
        _this: *const sdf_Layer_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetComment(
        _this: *mut sdf_Layer_t,
        comment: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetDefaultPrim(
        _this: *const sdf_Layer_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetDefaultPrim(
        _this: *mut sdf_Layer_t,
        name: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasDefaultPrim(
        _this: *mut sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearDefaultPrim(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetDocumentation(
        _this: *const sdf_Layer_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetDocumentation(
        _this: *mut sdf_Layer_t,
        documentation: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetStartTimeCode(
        _this: *const sdf_Layer_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetStartTimeCode(
        _this: *mut sdf_Layer_t,
        startTimecode: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasStartTimeCode(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearStartTimeCode(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetEndTimeCode(
        _this: *const sdf_Layer_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetEndTimeCode(
        _this: *mut sdf_Layer_t,
        endTimeCode: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasEndTimeCode(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearEndTimeCode(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetTimeCodesPerSecond(
        _this: *const sdf_Layer_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetTimeCodesPerSecond(
        _this: *mut sdf_Layer_t,
        timeCodesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasTimeCodesPerSecond(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearTimeCodesPerSecond(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetFramesPerSecond(
        _this: *const sdf_Layer_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetFramesPerSecond(
        _this: *mut sdf_Layer_t,
        framesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasFramesPerSecond(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearFramesPerSecond(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetFramePrecision(
        _this: *const sdf_Layer_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetFramePrecision(
        _this: *mut sdf_Layer_t,
        framePrecision: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasFramePrecision(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearFramePrecision(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetOwner(
        _this: *const sdf_Layer_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetOwner(
        _this: *mut sdf_Layer_t,
        owner: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasOwner(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearOwner(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetSessionOwner(
        _this: *const sdf_Layer_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetSessionOwner(
        _this: *mut sdf_Layer_t,
        owner: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasSessionOwner(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearSessionOwner(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetHasOwnedSubLayers(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetHasOwnedSubLayers(
        _this: *mut sdf_Layer_t,
        param00: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetCustomLayerData(
        _this: *const sdf_Layer_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetCustomLayerData(
        _this: *mut sdf_Layer_t,
        value: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasCustomLayerData(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearCustomLayerData(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetExpressionVariables(
        _this: *const sdf_Layer_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetExpressionVariables(
        _this: *mut sdf_Layer_t,
        expressionVars: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_HasExpressionVariables(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ClearExpressionVariables(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetSubLayerPaths(
        _this: *const sdf_Layer_t,
        _result: *mut *mut sdf_SubLayerProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetSubLayerPaths(
        _this: *mut sdf_Layer_t,
        newPaths: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetNumSubLayerPaths(
        _this: *const sdf_Layer_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_InsertSubLayerPath(
        _this: *mut sdf_Layer_t,
        path: *const std_String_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_RemoveSubLayerPath(
        _this: *mut sdf_Layer_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetSubLayerOffsets(
        _this: *const sdf_Layer_t,
        _result: *mut *mut sdf_LayerOffsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetSubLayerOffset(
        _this: *const sdf_Layer_t,
        index: ::std::os::raw::c_int,
        _result: *mut *mut sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetSubLayerOffset(
        _this: *mut sdf_Layer_t,
        offset: *const sdf_LayerOffset_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetPseudoRoot(
        _this: *const sdf_Layer_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetObjectAtPath(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetPrimAtPath(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetPropertyAtPath(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetAttributeAtPath(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetRelationshipAtPath(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_PermissionToEdit(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_PermissionToSave(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetPermissionToEdit(
        _this: *mut sdf_Layer_t,
        allow: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetPermissionToSave(
        _this: *mut sdf_Layer_t,
        allow: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_CanApply(
        _this: *const sdf_Layer_t,
        param00: *const sdf_BatchNamespaceEdit_t,
        details: *mut sdf_NamespaceEditDetailVector_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_Apply(
        _this: *mut sdf_Layer_t,
        param00: *const sdf_BatchNamespaceEdit_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_IsDirty(
        _this: *const sdf_Layer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ListAllTimeSamples(
        _this: *const sdf_Layer_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_ListTimeSamplesForPath(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetBracketingTimeSamplesForPath(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetBracketingTimeSamples(
        _this: *mut sdf_Layer_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_GetNumTimeSamplesForPath(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_QueryTimeSample(
        _this: *const sdf_Layer_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_SetTimeSample(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_EraseTimeSample(
        _this: *mut sdf_Layer_t,
        path: *const sdf_Path_t,
        time: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_DumpLayerInfo() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Layer_dtor(_this: *mut sdf_Layer_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_dtor(_this: *mut sdf_LayerHandle_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetExternalReferences(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_UpdateExternalReference(
        _this: *mut sdf_LayerHandle_t,
        oldAssetPath: *const std_String_t,
        newAssetPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetCompositionAssetDependencies(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_UpdateCompositionAssetDependency(
        _this: *mut sdf_LayerHandle_t,
        oldAssetPath: *const std_String_t,
        newAssetPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetExternalAssetDependencies(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetSpecType(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasSpec(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ListFields(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasField(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasFieldDictKey(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetField(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetFieldDictValueByKey(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetField(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetFieldDictValueByKey(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_EraseField(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_EraseFieldDictValueByKey(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetColorConfiguration(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetColorConfiguration(
        _this: *mut sdf_LayerHandle_t,
        colorConfiguration: *const sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasColorConfiguration(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearColorConfiguration(
        _this: *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetColorManagementSystem(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetColorManagementSystem(
        _this: *mut sdf_LayerHandle_t,
        cms: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasColorManagementSystem(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearColorManagementSystem(
        _this: *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetComment(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetComment(
        _this: *mut sdf_LayerHandle_t,
        comment: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetDefaultPrim(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetDefaultPrim(
        _this: *mut sdf_LayerHandle_t,
        name: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasDefaultPrim(
        _this: *mut sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearDefaultPrim(_this: *mut sdf_LayerHandle_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetDocumentation(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetDocumentation(
        _this: *mut sdf_LayerHandle_t,
        documentation: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetStartTimeCode(
        _this: *const sdf_LayerHandle_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetStartTimeCode(
        _this: *mut sdf_LayerHandle_t,
        startTimecode: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasStartTimeCode(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearStartTimeCode(
        _this: *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetEndTimeCode(
        _this: *const sdf_LayerHandle_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetEndTimeCode(
        _this: *mut sdf_LayerHandle_t,
        endTimeCode: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasEndTimeCode(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearEndTimeCode(_this: *mut sdf_LayerHandle_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetTimeCodesPerSecond(
        _this: *const sdf_LayerHandle_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetTimeCodesPerSecond(
        _this: *mut sdf_LayerHandle_t,
        timeCodesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasTimeCodesPerSecond(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearTimeCodesPerSecond(
        _this: *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetFramesPerSecond(
        _this: *const sdf_LayerHandle_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetFramesPerSecond(
        _this: *mut sdf_LayerHandle_t,
        framesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasFramesPerSecond(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearFramesPerSecond(
        _this: *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetFramePrecision(
        _this: *const sdf_LayerHandle_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetFramePrecision(
        _this: *mut sdf_LayerHandle_t,
        framePrecision: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasFramePrecision(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearFramePrecision(
        _this: *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetOwner(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetOwner(
        _this: *mut sdf_LayerHandle_t,
        owner: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasOwner(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearOwner(_this: *mut sdf_LayerHandle_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetSessionOwner(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetSessionOwner(
        _this: *mut sdf_LayerHandle_t,
        owner: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasSessionOwner(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearSessionOwner(
        _this: *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetHasOwnedSubLayers(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetHasOwnedSubLayers(
        _this: *mut sdf_LayerHandle_t,
        param00: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetCustomLayerData(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetCustomLayerData(
        _this: *mut sdf_LayerHandle_t,
        value: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasCustomLayerData(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearCustomLayerData(
        _this: *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetExpressionVariables(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetExpressionVariables(
        _this: *mut sdf_LayerHandle_t,
        expressionVars: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_HasExpressionVariables(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ClearExpressionVariables(
        _this: *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetSubLayerPaths(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut sdf_SubLayerProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetSubLayerPaths(
        _this: *mut sdf_LayerHandle_t,
        newPaths: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetNumSubLayerPaths(
        _this: *const sdf_LayerHandle_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_InsertSubLayerPath(
        _this: *mut sdf_LayerHandle_t,
        path: *const std_String_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_RemoveSubLayerPath(
        _this: *mut sdf_LayerHandle_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetSubLayerOffsets(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut sdf_LayerOffsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetSubLayerOffset(
        _this: *const sdf_LayerHandle_t,
        index: ::std::os::raw::c_int,
        _result: *mut *mut sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetSubLayerOffset(
        _this: *mut sdf_LayerHandle_t,
        offset: *const sdf_LayerOffset_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetPseudoRoot(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetObjectAtPath(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetPrimAtPath(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetPropertyAtPath(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetAttributeAtPath(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetRelationshipAtPath(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_PermissionToEdit(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_PermissionToSave(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetPermissionToEdit(
        _this: *mut sdf_LayerHandle_t,
        allow: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetPermissionToSave(
        _this: *mut sdf_LayerHandle_t,
        allow: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_CanApply(
        _this: *const sdf_LayerHandle_t,
        param00: *const sdf_BatchNamespaceEdit_t,
        details: *mut sdf_NamespaceEditDetailVector_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_Apply(
        _this: *mut sdf_LayerHandle_t,
        param00: *const sdf_BatchNamespaceEdit_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_IsDirty(
        _this: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ListAllTimeSamples(
        _this: *const sdf_LayerHandle_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_ListTimeSamplesForPath(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetBracketingTimeSamplesForPath(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetBracketingTimeSamples(
        _this: *mut sdf_LayerHandle_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_GetNumTimeSamplesForPath(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_QueryTimeSample(
        _this: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_SetTimeSample(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandle_EraseTimeSample(
        _this: *mut sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        time: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_dtor(_this: *mut sdf_LayerRefPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetExternalReferences(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_UpdateExternalReference(
        _this: *mut sdf_LayerRefPtr_t,
        oldAssetPath: *const std_String_t,
        newAssetPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetCompositionAssetDependencies(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_UpdateCompositionAssetDependency(
        _this: *mut sdf_LayerRefPtr_t,
        oldAssetPath: *const std_String_t,
        newAssetPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetExternalAssetDependencies(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut std_StringSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetSpecType(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasSpec(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ListFields(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasField(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasFieldDictKey(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetField(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetFieldDictValueByKey(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetField(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetFieldDictValueByKey(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_EraseField(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_EraseFieldDictValueByKey(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        fieldName: *const tf_Token_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetColorConfiguration(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetColorConfiguration(
        _this: *mut sdf_LayerRefPtr_t,
        colorConfiguration: *const sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasColorConfiguration(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearColorConfiguration(
        _this: *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetColorManagementSystem(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetColorManagementSystem(
        _this: *mut sdf_LayerRefPtr_t,
        cms: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasColorManagementSystem(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearColorManagementSystem(
        _this: *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetComment(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetComment(
        _this: *mut sdf_LayerRefPtr_t,
        comment: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetDefaultPrim(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetDefaultPrim(
        _this: *mut sdf_LayerRefPtr_t,
        name: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasDefaultPrim(
        _this: *mut sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearDefaultPrim(_this: *mut sdf_LayerRefPtr_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetDocumentation(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetDocumentation(
        _this: *mut sdf_LayerRefPtr_t,
        documentation: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetStartTimeCode(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetStartTimeCode(
        _this: *mut sdf_LayerRefPtr_t,
        startTimecode: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasStartTimeCode(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearStartTimeCode(
        _this: *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetEndTimeCode(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetEndTimeCode(
        _this: *mut sdf_LayerRefPtr_t,
        endTimeCode: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasEndTimeCode(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearEndTimeCode(_this: *mut sdf_LayerRefPtr_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetTimeCodesPerSecond(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetTimeCodesPerSecond(
        _this: *mut sdf_LayerRefPtr_t,
        timeCodesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasTimeCodesPerSecond(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearTimeCodesPerSecond(
        _this: *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetFramesPerSecond(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetFramesPerSecond(
        _this: *mut sdf_LayerRefPtr_t,
        framesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasFramesPerSecond(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearFramesPerSecond(
        _this: *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetFramePrecision(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetFramePrecision(
        _this: *mut sdf_LayerRefPtr_t,
        framePrecision: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasFramePrecision(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearFramePrecision(
        _this: *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetOwner(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetOwner(
        _this: *mut sdf_LayerRefPtr_t,
        owner: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasOwner(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearOwner(_this: *mut sdf_LayerRefPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetSessionOwner(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetSessionOwner(
        _this: *mut sdf_LayerRefPtr_t,
        owner: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasSessionOwner(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearSessionOwner(
        _this: *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetHasOwnedSubLayers(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetHasOwnedSubLayers(
        _this: *mut sdf_LayerRefPtr_t,
        param00: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetCustomLayerData(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetCustomLayerData(
        _this: *mut sdf_LayerRefPtr_t,
        value: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasCustomLayerData(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearCustomLayerData(
        _this: *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetExpressionVariables(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetExpressionVariables(
        _this: *mut sdf_LayerRefPtr_t,
        expressionVars: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_HasExpressionVariables(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ClearExpressionVariables(
        _this: *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetSubLayerPaths(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut sdf_SubLayerProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetSubLayerPaths(
        _this: *mut sdf_LayerRefPtr_t,
        newPaths: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetNumSubLayerPaths(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_InsertSubLayerPath(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const std_String_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_RemoveSubLayerPath(
        _this: *mut sdf_LayerRefPtr_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetSubLayerOffsets(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut sdf_LayerOffsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetSubLayerOffset(
        _this: *const sdf_LayerRefPtr_t,
        index: ::std::os::raw::c_int,
        _result: *mut *mut sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetSubLayerOffset(
        _this: *mut sdf_LayerRefPtr_t,
        offset: *const sdf_LayerOffset_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetPseudoRoot(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetObjectAtPath(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetPrimAtPath(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetPropertyAtPath(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetAttributeAtPath(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetRelationshipAtPath(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_PermissionToEdit(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_PermissionToSave(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetPermissionToEdit(
        _this: *mut sdf_LayerRefPtr_t,
        allow: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetPermissionToSave(
        _this: *mut sdf_LayerRefPtr_t,
        allow: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_CanApply(
        _this: *const sdf_LayerRefPtr_t,
        param00: *const sdf_BatchNamespaceEdit_t,
        details: *mut sdf_NamespaceEditDetailVector_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_Apply(
        _this: *mut sdf_LayerRefPtr_t,
        param00: *const sdf_BatchNamespaceEdit_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_IsDirty(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ListAllTimeSamples(
        _this: *const sdf_LayerRefPtr_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_ListTimeSamplesForPath(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut std_DoubleSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetBracketingTimeSamplesForPath(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetBracketingTimeSamples(
        _this: *mut sdf_LayerRefPtr_t,
        time: f64,
        tLower: *mut f64,
        tUpper: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_GetNumTimeSamplesForPath(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_QueryTimeSample(
        _this: *const sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_SetTimeSample(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerRefPtr_EraseTimeSample(
        _this: *mut sdf_LayerRefPtr_t,
        path: *const sdf_Path_t,
        time: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_data(
        _this: *mut sdf_LayerHandleVector_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_data_const(
        _this: *const sdf_LayerHandleVector_t,
        _result: *mut *const sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_empty(
        _this: *const sdf_LayerHandleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_size(
        _this: *const sdf_LayerHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_max_size(
        _this: *const sdf_LayerHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_capacity(
        _this: *const sdf_LayerHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_clear(
        _this: *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_pop_back(
        _this: *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_op_index(
        _this: *const sdf_LayerHandleVector_t,
        __n: usize,
        _result: *mut *const sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_default(
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleVector_dtor(_this: *mut sdf_LayerHandleVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerHandleSet_dtor(_this: *mut sdf_LayerHandleSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_GetOffset(
        _this: *const sdf_LayerOffset_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_GetScale(
        _this: *const sdf_LayerOffset_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_SetOffset(
        _this: *mut sdf_LayerOffset_t,
        newOffset: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_SetScale(
        _this: *mut sdf_LayerOffset_t,
        newScale: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_IsIdentity(
        _this: *const sdf_LayerOffset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_IsValid(
        _this: *const sdf_LayerOffset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_GetInverse(
        _this: *const sdf_LayerOffset_t,
        _result: *mut *mut sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_GetHash(
        _this: *const sdf_LayerOffset_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_op_eq(
        _this: *const sdf_LayerOffset_t,
        rhs: *const sdf_LayerOffset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_op_lt(
        _this: *const sdf_LayerOffset_t,
        rhs: *const sdf_LayerOffset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_op_mul_00(
        _this: *const sdf_LayerOffset_t,
        rhs: *const sdf_LayerOffset_t,
        _result: *mut *mut sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_op_mul_01(
        _this: *const sdf_LayerOffset_t,
        rhs: f64,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_op_mul_02(
        _this: *const sdf_LayerOffset_t,
        rhs: *const sdf_TimeCode_t,
        _result: *mut sdf_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_ctor(
        offset: f64,
        scale: f64,
        _result: *mut *mut sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffset_dtor(_this: *mut sdf_LayerOffset_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_data(
        _this: *mut sdf_LayerOffsetVector_t,
        _result: *mut *mut sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_data_const(
        _this: *const sdf_LayerOffsetVector_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_empty(
        _this: *const sdf_LayerOffsetVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_size(
        _this: *const sdf_LayerOffsetVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_max_size(
        _this: *const sdf_LayerOffsetVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_capacity(
        _this: *const sdf_LayerOffsetVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_clear(
        _this: *mut sdf_LayerOffsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_pop_back(
        _this: *mut sdf_LayerOffsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_op_index(
        _this: *const sdf_LayerOffsetVector_t,
        __n: usize,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_default(
        _result: *mut *mut sdf_LayerOffsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerOffsetVector_dtor(_this: *mut sdf_LayerOffsetVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_IsDirty(
        _this: *mut sdf_LayerStateDelegate_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_SetField_00(
        _this: *mut sdf_LayerStateDelegate_t,
        path: *const sdf_Path_t,
        field: *const tf_Token_t,
        value: *const vt_Value_t,
        oldValue: *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_SetField_01(
        _this: *mut sdf_LayerStateDelegate_t,
        path: *const sdf_Path_t,
        field: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
        oldValue: *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_SetFieldDictValueByKey_00(
        _this: *mut sdf_LayerStateDelegate_t,
        path: *const sdf_Path_t,
        field: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
        oldValue: *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_SetFieldDictValueByKey_01(
        _this: *mut sdf_LayerStateDelegate_t,
        path: *const sdf_Path_t,
        field: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const sdf_AbstractDataConstValue_t,
        oldValue: *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_SetTimeSample_00(
        _this: *mut sdf_LayerStateDelegate_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_SetTimeSample_01(
        _this: *mut sdf_LayerStateDelegate_t,
        path: *const sdf_Path_t,
        time: f64,
        value: *const sdf_AbstractDataConstValue_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_CreateSpec(
        _this: *mut sdf_LayerStateDelegate_t,
        path: *const sdf_Path_t,
        specType: ::std::os::raw::c_uint,
        inert: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_DeleteSpec(
        _this: *mut sdf_LayerStateDelegate_t,
        path: *const sdf_Path_t,
        inert: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_MoveSpec(
        _this: *mut sdf_LayerStateDelegate_t,
        oldPath: *const sdf_Path_t,
        newPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_PushChild_00(
        _this: *mut sdf_LayerStateDelegate_t,
        parentPath: *const sdf_Path_t,
        field: *const tf_Token_t,
        value: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_PushChild_01(
        _this: *mut sdf_LayerStateDelegate_t,
        parentPath: *const sdf_Path_t,
        field: *const tf_Token_t,
        value: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_PopChild_00(
        _this: *mut sdf_LayerStateDelegate_t,
        parentPath: *const sdf_Path_t,
        field: *const tf_Token_t,
        oldValue: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_PopChild_01(
        _this: *mut sdf_LayerStateDelegate_t,
        parentPath: *const sdf_Path_t,
        field: *const tf_Token_t,
        oldValue: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerStateDelegate_dtor(
        _this: *mut sdf_LayerStateDelegate_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTree_New(
        layer: *const sdf_LayerHandle_t,
        childTrees: *const sdf_LayerTreeHandleVector_t,
        cumulativeOffset: *const sdf_LayerOffset_t,
        _result: *mut *mut sdf_LayerTreeHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTree_GetLayer(
        _this: *const sdf_LayerTree_t,
        _result: *mut *const sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTree_GetOffset(
        _this: *const sdf_LayerTree_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTree_GetChildTrees(
        _this: *const sdf_LayerTree_t,
        _result: *mut *const sdf_LayerTreeHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTree_dtor(_this: *mut sdf_LayerTree_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandle_dtor(_this: *mut sdf_LayerTreeHandle_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandle_GetLayer(
        _this: *const sdf_LayerTreeHandle_t,
        _result: *mut *const sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandle_GetOffset(
        _this: *const sdf_LayerTreeHandle_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandle_GetChildTrees(
        _this: *const sdf_LayerTreeHandle_t,
        _result: *mut *const sdf_LayerTreeHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_data(
        _this: *mut sdf_LayerTreeHandleVector_t,
        _result: *mut *mut sdf_LayerTreeHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_data_const(
        _this: *const sdf_LayerTreeHandleVector_t,
        _result: *mut *const sdf_LayerTreeHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_empty(
        _this: *const sdf_LayerTreeHandleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_size(
        _this: *const sdf_LayerTreeHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_max_size(
        _this: *const sdf_LayerTreeHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_capacity(
        _this: *const sdf_LayerTreeHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_clear(
        _this: *mut sdf_LayerTreeHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_pop_back(
        _this: *mut sdf_LayerTreeHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_op_index(
        _this: *const sdf_LayerTreeHandleVector_t,
        __n: usize,
        _result: *mut *const sdf_LayerTreeHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_default(
        _result: *mut *mut sdf_LayerTreeHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_LayerTreeHandleVector_dtor(
        _this: *mut sdf_LayerTreeHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_HasKeys(
        _this: *const sdf_StringListOp_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_IsExplicit(
        _this: *const sdf_StringListOp_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_GetExplicitItems(
        _this: *const sdf_StringListOp_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_GetAddedItems(
        _this: *const sdf_StringListOp_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_GetPrependedItems(
        _this: *const sdf_StringListOp_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_GetAppendedItems(
        _this: *const sdf_StringListOp_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_GetDeletedItems(
        _this: *const sdf_StringListOp_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_GetOrderedItems(
        _this: *const sdf_StringListOp_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_GetAppliedItems(
        _this: *const sdf_StringListOp_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_GetItems(
        _this: *const sdf_StringListOp_t,
        type_: ::std::os::raw::c_uint,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_SetExplicitItems(
        _this: *mut sdf_StringListOp_t,
        items: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_SetAddedItems(
        _this: *mut sdf_StringListOp_t,
        items: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_SetPrependedItems(
        _this: *mut sdf_StringListOp_t,
        items: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_SetAppendedItems(
        _this: *mut sdf_StringListOp_t,
        items: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_SetDeletedItems(
        _this: *mut sdf_StringListOp_t,
        items: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_SetOrderedItems(
        _this: *mut sdf_StringListOp_t,
        items: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_SetItems(
        _this: *mut sdf_StringListOp_t,
        items: *const std_StringVector_t,
        type_: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_Clear(_this: *mut sdf_StringListOp_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_ClearAndMakeExplicit(
        _this: *mut sdf_StringListOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_ReplaceOperations(
        _this: *mut sdf_StringListOp_t,
        op: ::std::os::raw::c_uint,
        index: usize,
        n: usize,
        newItems: *const std_StringVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_ComposeOperations(
        _this: *mut sdf_StringListOp_t,
        stronger: *const sdf_StringListOp_t,
        op: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_default(_result: *mut *mut sdf_StringListOp_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_StringListOp_dtor(_this: *mut sdf_StringListOp_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_Remove(
        currentPath: *const sdf_Path_t,
        _result: *mut *mut sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_Rename(
        currentPath: *const sdf_Path_t,
        name: *const tf_Token_t,
        _result: *mut *mut sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_Reorder(
        currentPath: *const sdf_Path_t,
        index: ::std::os::raw::c_int,
        _result: *mut *mut sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_Reparent(
        currentPath: *const sdf_Path_t,
        newParentPath: *const sdf_Path_t,
        index: ::std::os::raw::c_int,
        _result: *mut *mut sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_ReparentAndRename(
        currentPath: *const sdf_Path_t,
        newParentPath: *const sdf_Path_t,
        name: *const tf_Token_t,
        index: ::std::os::raw::c_int,
        _result: *mut *mut sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_default(
        _result: *mut *mut sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_from_paths(
        param00: *const sdf_Path_t,
        param01: *const sdf_Path_t,
        param02: ::std::os::raw::c_int,
        _result: *mut *mut sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_dtor(_this: *mut sdf_NamespaceEdit_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_data(
        _this: *mut sdf_NamespaceEditVector_t,
        _result: *mut *mut sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_data_const(
        _this: *const sdf_NamespaceEditVector_t,
        _result: *mut *const sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_empty(
        _this: *const sdf_NamespaceEditVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_size(
        _this: *const sdf_NamespaceEditVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_max_size(
        _this: *const sdf_NamespaceEditVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_capacity(
        _this: *const sdf_NamespaceEditVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_clear(
        _this: *mut sdf_NamespaceEditVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_pop_back(
        _this: *mut sdf_NamespaceEditVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_op_index(
        _this: *const sdf_NamespaceEditVector_t,
        __n: usize,
        _result: *mut *const sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_default(
        _result: *mut *mut sdf_NamespaceEditVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditVector_dtor(
        _this: *mut sdf_NamespaceEditVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetail_default(
        _result: *mut *mut sdf_NamespaceEditDetail_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetail_dtor(
        _this: *mut sdf_NamespaceEditDetail_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_data(
        _this: *mut sdf_NamespaceEditDetailVector_t,
        _result: *mut *mut sdf_NamespaceEditDetail_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_data_const(
        _this: *const sdf_NamespaceEditDetailVector_t,
        _result: *mut *const sdf_NamespaceEditDetail_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_empty(
        _this: *const sdf_NamespaceEditDetailVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_size(
        _this: *const sdf_NamespaceEditDetailVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_max_size(
        _this: *const sdf_NamespaceEditDetailVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_capacity(
        _this: *const sdf_NamespaceEditDetailVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_clear(
        _this: *mut sdf_NamespaceEditDetailVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_pop_back(
        _this: *mut sdf_NamespaceEditDetailVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_op_index(
        _this: *const sdf_NamespaceEditDetailVector_t,
        __n: usize,
        _result: *mut *const sdf_NamespaceEditDetail_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_default(
        _result: *mut *mut sdf_NamespaceEditDetailVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetailVector_dtor(
        _this: *mut sdf_NamespaceEditDetailVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_BatchNamespaceEdit_Add(
        _this: *mut sdf_BatchNamespaceEdit_t,
        edit: *const sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_BatchNamespaceEdit_Add_from_paths(
        _this: *mut sdf_BatchNamespaceEdit_t,
        currentPath: *const sdf_Path_t,
        newPath: *const sdf_Path_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_BatchNamespaceEdit_GetEdits(
        _this: *const sdf_BatchNamespaceEdit_t,
        _result: *mut *const sdf_NamespaceEditVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_BatchNamespaceEdit_Process(
        _this: *const sdf_BatchNamespaceEdit_t,
        processedEdits: *mut sdf_NamespaceEditVector_t,
        hasObjectAtPath: ::std::option::Option<
            unsafe extern "C" fn(param00: *const sdf_Path_t, _result: *mut bool),
        >,
        canEdit: ::std::option::Option<
            unsafe extern "C" fn(
                param00: *const sdf_NamespaceEdit_t,
                param01: *mut std_String_t,
                _result: *mut bool,
            ),
        >,
        details: *mut sdf_NamespaceEditDetailVector_t,
        fixBackpointers: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_BatchNamespaceEdit_default(
        _result: *mut *mut sdf_BatchNamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_BatchNamespaceEdit_from_edits(
        edits: *const sdf_NamespaceEditVector_t,
        _result: *mut *mut sdf_BatchNamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_BatchNamespaceEdit_dtor(
        _this: *mut sdf_BatchNamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Notice_dtor(_this: *mut sdf_Notice_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBase_default(_result: *mut *mut sdf_NoticeBase_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBase_dtor(_this: *mut sdf_NoticeBase_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_GetLayers(
        _this: *const sdf_NoticeBaseLayersDidChange_t,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_GetChangeListVec(
        _this: *const sdf_NoticeBaseLayersDidChange_t,
        _result: *mut *const sdf_LayerChangeListVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_begin(
        _this: *const sdf_NoticeBaseLayersDidChange_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_cbegin(
        _this: *const sdf_NoticeBaseLayersDidChange_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_end(
        _this: *const sdf_NoticeBaseLayersDidChange_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_cend(
        _this: *const sdf_NoticeBaseLayersDidChange_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_find(
        _this: *const sdf_NoticeBaseLayersDidChange_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_count(
        _this: *const sdf_NoticeBaseLayersDidChange_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_GetSerialNumber(
        _this: *const sdf_NoticeBaseLayersDidChange_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_ctor(
        changeVec: *const sdf_LayerChangeListVec_t,
        serialNumber: ::std::os::raw::c_ulong,
        _result: *mut *mut sdf_NoticeBaseLayersDidChange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChange_dtor(
        _this: *mut sdf_NoticeBaseLayersDidChange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeBaseLayersDidChangeConstIterator_dtor(
        _this: *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_ctor(
        changeVec: *const sdf_LayerChangeListVec_t,
        serialNumber: ::std::os::raw::c_ulong,
        _result: *mut *mut sdf_NoticeLayersDidChangeSentPerLayer_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_dtor(
        _this: *mut sdf_NoticeLayersDidChangeSentPerLayer_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_GetLayers(
        _this: *const sdf_NoticeLayersDidChangeSentPerLayer_t,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_GetChangeListVec(
        _this: *const sdf_NoticeLayersDidChangeSentPerLayer_t,
        _result: *mut *const sdf_LayerChangeListVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_begin(
        _this: *const sdf_NoticeLayersDidChangeSentPerLayer_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_cbegin(
        _this: *const sdf_NoticeLayersDidChangeSentPerLayer_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_end(
        _this: *const sdf_NoticeLayersDidChangeSentPerLayer_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_cend(
        _this: *const sdf_NoticeLayersDidChangeSentPerLayer_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_find(
        _this: *const sdf_NoticeLayersDidChangeSentPerLayer_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_count(
        _this: *const sdf_NoticeLayersDidChangeSentPerLayer_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChangeSentPerLayer_GetSerialNumber(
        _this: *const sdf_NoticeLayersDidChangeSentPerLayer_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_ctor(
        changeVec: *const sdf_LayerChangeListVec_t,
        serialNumber: ::std::os::raw::c_ulong,
        _result: *mut *mut sdf_NoticeLayersDidChange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_dtor(
        _this: *mut sdf_NoticeLayersDidChange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_GetLayers(
        _this: *const sdf_NoticeLayersDidChange_t,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_GetChangeListVec(
        _this: *const sdf_NoticeLayersDidChange_t,
        _result: *mut *const sdf_LayerChangeListVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_begin(
        _this: *const sdf_NoticeLayersDidChange_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_cbegin(
        _this: *const sdf_NoticeLayersDidChange_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_end(
        _this: *const sdf_NoticeLayersDidChange_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_cend(
        _this: *const sdf_NoticeLayersDidChange_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_find(
        _this: *const sdf_NoticeLayersDidChange_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut *mut sdf_NoticeBaseLayersDidChangeConstIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_count(
        _this: *const sdf_NoticeLayersDidChange_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayersDidChange_GetSerialNumber(
        _this: *const sdf_NoticeLayersDidChange_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerInfoDidChange_key(
        _this: *const sdf_NoticeLayerInfoDidChange_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerInfoDidChange_ctor(
        key: *const tf_Token_t,
        _result: *mut *mut sdf_NoticeLayerInfoDidChange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerInfoDidChange_dtor(
        _this: *mut sdf_NoticeLayerInfoDidChange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerIdentifierDidChange_GetOldIdentifier(
        _this: *const sdf_NoticeLayerIdentifierDidChange_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerIdentifierDidChange_GetNewIdentifier(
        _this: *const sdf_NoticeLayerIdentifierDidChange_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerIdentifierDidChange_ctor(
        oldIdentifier: *const std_String_t,
        newIdentifier: *const std_String_t,
        _result: *mut *mut sdf_NoticeLayerIdentifierDidChange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerIdentifierDidChange_dtor(
        _this: *mut sdf_NoticeLayerIdentifierDidChange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerDidReplaceContent_dtor(
        _this: *mut sdf_NoticeLayerDidReplaceContent_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerDidReloadContent_dtor(
        _this: *mut sdf_NoticeLayerDidReloadContent_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeDidSaveLayerToFile_dtor(
        _this: *mut sdf_NoticeDidSaveLayerToFile_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerDirtinessChanged_dtor(
        _this: *mut sdf_NoticeLayerDirtinessChanged_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerMutenessChanged_GetLayerPath(
        _this: *const sdf_NoticeLayerMutenessChanged_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerMutenessChanged_WasMuted(
        _this: *const sdf_NoticeLayerMutenessChanged_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerMutenessChanged_ctor(
        layerPath: *const std_String_t,
        wasMuted: bool,
        _result: *mut *mut sdf_NoticeLayerMutenessChanged_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NoticeLayerMutenessChanged_dtor(
        _this: *mut sdf_NoticeLayerMutenessChanged_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetPathElementCount(
        _this: *const sdf_Path_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsAbsolutePath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsAbsoluteRootPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsPrimPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsAbsoluteRootOrPrimPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsRootPrimPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsPropertyPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsPrimPropertyPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsNamespacedPropertyPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsPrimVariantSelectionPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsPrimOrPrimVariantSelectionPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_ContainsPrimVariantSelection(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_ContainsPropertyElements(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_ContainsTargetPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsRelationalAttributePath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsTargetPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsMapperPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsMapperArgPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsExpressionPath(
        _this: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsEmpty(_this: *const sdf_Path_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetAsToken(
        _this: *const sdf_Path_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetAsString(
        _this: *const sdf_Path_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetString(
        _this: *const sdf_Path_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetText(
        _this: *const sdf_Path_t,
        _result: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetPrefixes(
        _this: *const sdf_Path_t,
        _result: *mut *mut sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetPrefixes_up_to(
        _this: *const sdf_Path_t,
        numPrefixes: usize,
        _result: *mut *mut sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetPrefixes_in(
        _this: *const sdf_Path_t,
        prefixes: *mut sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetPrefixes_in_up_to(
        _this: *const sdf_Path_t,
        prefixes: *mut sdf_PathVector_t,
        numPrefixes: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetName(
        _this: *const sdf_Path_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetNameToken(
        _this: *const sdf_Path_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetElementString(
        _this: *const sdf_Path_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetElementToken(
        _this: *const sdf_Path_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_ReplaceName(
        _this: *const sdf_Path_t,
        newName: *const tf_Token_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetTargetPath(
        _this: *const sdf_Path_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetAllTargetPathsRecursively(
        _this: *const sdf_Path_t,
        result: *mut sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_HasPrefix(
        _this: *const sdf_Path_t,
        prefix: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetParentPath(
        _this: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetPrimPath(
        _this: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetPrimOrPrimVariantSelectionPath(
        _this: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetAbsoluteRootOrPrimPath(
        _this: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_StripAllVariantSelections(
        _this: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendPath(
        _this: *const sdf_Path_t,
        newSuffix: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendChild(
        _this: *const sdf_Path_t,
        childName: *const tf_Token_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendProperty(
        _this: *const sdf_Path_t,
        propName: *const tf_Token_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendVariantSelection(
        _this: *const sdf_Path_t,
        variantSet: *const std_String_t,
        variant: *const std_String_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendTarget(
        _this: *const sdf_Path_t,
        targetPath: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendRelationalAttribute(
        _this: *const sdf_Path_t,
        attrName: *const tf_Token_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_ReplaceTargetPath(
        _this: *const sdf_Path_t,
        newTargetPath: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendMapper(
        _this: *const sdf_Path_t,
        targetPath: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendMapperArg(
        _this: *const sdf_Path_t,
        argName: *const tf_Token_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendExpression(
        _this: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendElementString(
        _this: *const sdf_Path_t,
        element: *const std_String_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AppendElementToken(
        _this: *const sdf_Path_t,
        elementTok: *const tf_Token_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_ReplacePrefix(
        _this: *const sdf_Path_t,
        oldPrefix: *const sdf_Path_t,
        newPrefix: *const sdf_Path_t,
        fixTargetPaths: bool,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetCommonPrefix(
        _this: *const sdf_Path_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_MakeAbsolutePath(
        _this: *const sdf_Path_t,
        anchor: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_MakeRelativePath(
        _this: *const sdf_Path_t,
        anchor: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_EmptyPath(_result: *mut *const sdf_Path_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_AbsoluteRootPath(_result: *mut *const sdf_Path_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_ReflexiveRelativePath(_result: *mut *const sdf_Path_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsValidIdentifier(
        name: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsValidNamespacedIdentifier(
        name: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_TokenizeIdentifier(
        name: *const std_String_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_TokenizeIdentifierAsTokens(
        name: *const std_String_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_IsValidPathString(
        pathString: *const std_String_t,
        errMsg: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_GetConciseRelativePaths(
        paths: *const sdf_PathVector_t,
        _result: *mut *mut sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_RemoveDescendentPaths(paths: *mut sdf_PathVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_RemoveAncestorPaths(paths: *mut sdf_PathVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_default(_result: *mut *mut sdf_Path_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_from_string(
        path: *const ::std::os::raw::c_char,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Path_dtor(_this: *mut sdf_Path_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathSet_dtor(_this: *mut sdf_PathSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_data(
        _this: *mut sdf_PathVector_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_data_const(
        _this: *const sdf_PathVector_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_empty(
        _this: *const sdf_PathVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_size(
        _this: *const sdf_PathVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_max_size(
        _this: *const sdf_PathVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_capacity(
        _this: *const sdf_PathVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_clear(_this: *mut sdf_PathVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_pop_back(_this: *mut sdf_PathVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_op_index(
        _this: *const sdf_PathVector_t,
        __n: usize,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_default(_result: *mut *mut sdf_PathVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathVector_dtor(_this: *mut sdf_PathVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_MakeComplement_00(
        right: *mut sdf_SdfPathExpression_t,
        _result: *mut *mut sdf_SdfPathExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_MakeComplement_01(
        right: *const sdf_SdfPathExpression_t,
        _result: *mut *mut sdf_SdfPathExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_MakeOp_00(
        op: ::std::os::raw::c_uint,
        left: *mut sdf_SdfPathExpression_t,
        right: *mut sdf_SdfPathExpression_t,
        _result: *mut *mut sdf_SdfPathExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_MakeOp_01(
        op: ::std::os::raw::c_uint,
        left: *const sdf_SdfPathExpression_t,
        right: *const sdf_SdfPathExpression_t,
        _result: *mut *mut sdf_SdfPathExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_MakeAtom_01(
        ref_: *const sdf_ExpressionReference_t,
        _result: *mut *mut sdf_SdfPathExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_MakeAtom_03(
        pattern: *const sdf_PathPattern_t,
        _result: *mut *mut sdf_SdfPathExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_IsComplete(
        _this: *const sdf_SdfPathExpression_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_IsEmpty(
        _this: *const sdf_SdfPathExpression_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_op_bool(
        _this: *const sdf_SdfPathExpression_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_GetParseError(
        _this: *const sdf_SdfPathExpression_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_default(
        _result: *mut *mut sdf_SdfPathExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_ctor_01(
        expr: *const std_String_t,
        parseContext: *const std_String_t,
        _result: *mut *mut sdf_SdfPathExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfPathExpression_dtor(_this: *mut sdf_SdfPathExpression_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_AppendChild_00(
        _this: *mut sdf_PathPattern_t,
        text: *const std_String_t,
        predExpr: *mut sdf_PredicateExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_AppendChild_01(
        _this: *mut sdf_PathPattern_t,
        text: *const std_String_t,
        predExpr: *const sdf_PredicateExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_AppendChild_02(
        _this: *mut sdf_PathPattern_t,
        text: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_AppendProperty_00(
        _this: *mut sdf_PathPattern_t,
        text: *const std_String_t,
        predExpr: *mut sdf_PredicateExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_AppendProperty_01(
        _this: *mut sdf_PathPattern_t,
        text: *const std_String_t,
        predExpr: *const sdf_PredicateExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_AppendProperty_02(
        _this: *mut sdf_PathPattern_t,
        text: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_SetPrefix_00(
        _this: *mut sdf_PathPattern_t,
        p: *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_SetPrefix_01(
        _this: *mut sdf_PathPattern_t,
        p: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_IsProperty(
        _this: *const sdf_PathPattern_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_op_bool(
        _this: *const sdf_PathPattern_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_default(_result: *mut *mut sdf_PathPattern_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathPattern_dtor(_this: *mut sdf_PathPattern_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Component_IsStretch(
        _this: *const sdf_Component_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Component_default(_result: *mut *mut sdf_Component_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Component_dtor(_this: *mut sdf_Component_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ExpressionReference_default(
        _result: *mut *mut sdf_ExpressionReference_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ExpressionReference_dtor(
        _this: *mut sdf_ExpressionReference_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_GetAssetPath(
        _this: *const sdf_Payload_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_SetAssetPath(
        _this: *mut sdf_Payload_t,
        assetPath: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_GetPrimPath(
        _this: *const sdf_Payload_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_SetPrimPath(
        _this: *mut sdf_Payload_t,
        primPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_GetLayerOffset(
        _this: *const sdf_Payload_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_SetLayerOffset(
        _this: *mut sdf_Payload_t,
        layerOffset: *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_op_eq(
        _this: *const sdf_Payload_t,
        rhs: *const sdf_Payload_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_op_lt(
        _this: *const sdf_Payload_t,
        rhs: *const sdf_Payload_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_new(_result: *mut *mut sdf_Payload_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_dtor(_this: *mut sdf_Payload_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_data(
        _this: *mut sdf_PayloadVector_t,
        _result: *mut *mut sdf_Payload_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_data_const(
        _this: *const sdf_PayloadVector_t,
        _result: *mut *const sdf_Payload_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_empty(
        _this: *const sdf_PayloadVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_size(
        _this: *const sdf_PayloadVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_max_size(
        _this: *const sdf_PayloadVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_capacity(
        _this: *const sdf_PayloadVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_clear(_this: *mut sdf_PayloadVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_pop_back(_this: *mut sdf_PayloadVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_op_index(
        _this: *const sdf_PayloadVector_t,
        __n: usize,
        _result: *mut *const sdf_Payload_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_default(
        _result: *mut *mut sdf_PayloadVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadVector_dtor(_this: *mut sdf_PayloadVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpression_GetText(
        _this: *const sdf_PredicateExpression_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpression_IsEmpty(
        _this: *const sdf_PredicateExpression_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpression_op_bool(
        _this: *const sdf_PredicateExpression_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpression_default(
        _result: *mut *mut sdf_PredicateExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpression_ctor_01(
        expr: *const std_String_t,
        context: *const std_String_t,
        _result: *mut *mut sdf_PredicateExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpression_dtor(
        _this: *mut sdf_PredicateExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpressionFnArg_Positional(
        val: *const vt_Value_t,
        _result: *mut *mut sdf_PredicateExpressionFnArg_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpressionFnArg_Keyword(
        name: *const std_String_t,
        val: *const vt_Value_t,
        _result: *mut *mut sdf_PredicateExpressionFnArg_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpressionFnArg_default(
        _result: *mut *mut sdf_PredicateExpressionFnArg_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpressionFnArg_dtor(
        _this: *mut sdf_PredicateExpressionFnArg_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpressionFnCall_default(
        _result: *mut *mut sdf_PredicateExpressionFnCall_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PredicateExpressionFnCall_dtor(
        _this: *mut sdf_PredicateExpressionFnCall_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetNameRoot(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetNameParent(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetRealNameParent(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetNameChildren(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_PrimSpecView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetNameChildren(
        _this: *mut sdf_PrimSpec_t,
        param00: *const sdf_PrimSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_InsertNameChild(
        _this: *mut sdf_PrimSpec_t,
        child: *const sdf_PrimSpecHandle_t,
        index: ::std::os::raw::c_int,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_RemoveNameChild(
        _this: *mut sdf_PrimSpec_t,
        child: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetNameChildrenOrder(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_NameOrderProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasNameChildrenOrder(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetNameChildrenOrder(
        _this: *mut sdf_PrimSpec_t,
        names: *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_InsertInNameChildrenOrder(
        _this: *mut sdf_PrimSpec_t,
        name: *const tf_Token_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_RemoveFromNameChildrenOrder(
        _this: *mut sdf_PrimSpec_t,
        name: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_RemoveFromNameChildrenOrderByIndex(
        _this: *mut sdf_PrimSpec_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ApplyNameChildrenOrder(
        _this: *const sdf_PrimSpec_t,
        vec: *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetProperties(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_PropertySpecView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetProperties(
        _this: *mut sdf_PrimSpec_t,
        param00: *const sdf_PropertySpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_InsertProperty(
        _this: *mut sdf_PrimSpec_t,
        property: *const sdf_PropertySpecHandle_t,
        index: ::std::os::raw::c_int,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_RemoveProperty(
        _this: *mut sdf_PrimSpec_t,
        property: *const sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetAttributes(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_AttributeSpecView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetRelationships(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_RelationshipSpecView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetPropertyOrder(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_NameOrderProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasPropertyOrder(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetPropertyOrder(
        _this: *mut sdf_PrimSpec_t,
        names: *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_InsertInPropertyOrder(
        _this: *mut sdf_PrimSpec_t,
        name: *const tf_Token_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_RemoveFromPropertyOrder(
        _this: *mut sdf_PrimSpec_t,
        name: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_RemoveFromPropertyOrderByIndex(
        _this: *mut sdf_PrimSpec_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ApplyPropertyOrder(
        _this: *const sdf_PrimSpec_t,
        vec: *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetObjectAtPath(
        _this: *const sdf_PrimSpec_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetPrimAtPath(
        _this: *const sdf_PrimSpec_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetPropertyAtPath(
        _this: *const sdf_PrimSpec_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetAttributeAtPath(
        _this: *const sdf_PrimSpec_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetRelationshipAtPath(
        _this: *const sdf_PrimSpec_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetTypeName(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetTypeName(
        _this: *mut sdf_PrimSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetComment(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetComment(
        _this: *mut sdf_PrimSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetDocumentation(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetDocumentation(
        _this: *mut sdf_PrimSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetActive(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetActive(_this: *mut sdf_PrimSpec_t, value: bool)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasActive(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearActive(_this: *mut sdf_PrimSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetHidden(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetHidden(_this: *mut sdf_PrimSpec_t, value: bool)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetKind(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetKind(
        _this: *mut sdf_PrimSpec_t,
        value: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasKind(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearKind(_this: *mut sdf_PrimSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetSymmetryFunction(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetSymmetryFunction(
        _this: *mut sdf_PrimSpec_t,
        functionName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetSymmetricPeer(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetSymmetricPeer(
        _this: *mut sdf_PrimSpec_t,
        peerName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetPrefix(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetPrefix(
        _this: *mut sdf_PrimSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetSuffix(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetSuffix(
        _this: *mut sdf_PrimSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetCustomData(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetCustomData(
        _this: *mut sdf_PrimSpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetAssetInfo(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetAssetInfo(
        _this: *mut sdf_PrimSpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetSpecifier(
        _this: *const sdf_PrimSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetSpecifier(
        _this: *mut sdf_PrimSpec_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetPermission(
        _this: *const sdf_PrimSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetPermission(
        _this: *mut sdf_PrimSpec_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetPrefixSubstitutions(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetPrefixSubstitutions(
        _this: *mut sdf_PrimSpec_t,
        prefixSubstitutions: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetSuffixSubstitutions(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetSuffixSubstitutions(
        _this: *mut sdf_PrimSpec_t,
        suffixSubstitutions: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetInstanceable(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetInstanceable(
        _this: *mut sdf_PrimSpec_t,
        instanceable: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasInstanceable(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearInstanceable(_this: *mut sdf_PrimSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetPayloadList(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_PayloadEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasPayloads(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearPayloadList(_this: *mut sdf_PrimSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetInheritPathList(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_PathEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasInheritPaths(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearInheritPathList(_this: *mut sdf_PrimSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetSpecializesList(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_PathEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasSpecializes(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearSpecializesList(_this: *mut sdf_PrimSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetReferenceList(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_ReferenceEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasReferences(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearReferenceList(_this: *mut sdf_PrimSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetVariantSetNameList(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_NameEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasVariantSetNames(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetVariantNames(
        _this: *const sdf_PrimSpec_t,
        name: *const std_String_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_RemoveVariantSet(
        _this: *mut sdf_PrimSpec_t,
        name: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetVariantSelections(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_VariantSelectionProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_BlockVariantSelection(
        _this: *mut sdf_PrimSpec_t,
        variantSetName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetRelocates(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_RelocatesMapProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetRelocates(
        _this: *mut sdf_PrimSpec_t,
        newMap: *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasRelocates(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearRelocates(_this: *mut sdf_PrimSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_New(
        parentLayer: *const sdf_LayerHandle_t,
        name: *const std_String_t,
        spec: ::std::os::raw::c_uint,
        typeName: *const std_String_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_New_under_parent(
        parentPrim: *const sdf_PrimSpecHandle_t,
        name: *const std_String_t,
        spec: ::std::os::raw::c_uint,
        typeName: *const std_String_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_IsValidName(
        name: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetName(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetNameToken(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_CanSetName(
        _this: *const sdf_PrimSpec_t,
        newName: *const std_String_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetName(
        _this: *mut sdf_PrimSpec_t,
        newName: *const std_String_t,
        validate: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_dtor(_this: *mut sdf_PrimSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetSchema(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetSpecType(
        _this: *const sdf_PrimSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_IsDormant(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetLayer(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetPath(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_PermissionToEdit(
        _this: *const sdf_PrimSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ListInfoKeys(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetMetaDataInfoKeys(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetMetaDataDisplayGroup(
        _this: *const sdf_PrimSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetInfo(
        _this: *const sdf_PrimSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetInfo(
        _this: *mut sdf_PrimSpec_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetInfoDictionaryValue(
        _this: *mut sdf_PrimSpec_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasInfo(
        _this: *const sdf_PrimSpec_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearInfo(
        _this: *mut sdf_PrimSpec_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetTypeForInfo(
        _this: *const sdf_PrimSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetFallbackForInfo(
        _this: *const sdf_PrimSpec_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_IsInert(
        _this: *const sdf_PrimSpec_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ListFields(
        _this: *const sdf_PrimSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_HasField_00(
        _this: *const sdf_PrimSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_GetField(
        _this: *const sdf_PrimSpec_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_SetField_00(
        _this: *mut sdf_PrimSpec_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_ClearField(
        _this: *mut sdf_PrimSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_op_eq(
        _this: *const sdf_PrimSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpec_op_lt(
        _this: *const sdf_PrimSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_dtor(_this: *mut sdf_PrimSpecHandle_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetNameRoot(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetNameParent(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetRealNameParent(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetNameChildren(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_PrimSpecView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetNameChildren(
        _this: *mut sdf_PrimSpecHandle_t,
        param00: *const sdf_PrimSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_InsertNameChild(
        _this: *mut sdf_PrimSpecHandle_t,
        child: *const sdf_PrimSpecHandle_t,
        index: ::std::os::raw::c_int,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_RemoveNameChild(
        _this: *mut sdf_PrimSpecHandle_t,
        child: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetNameChildrenOrder(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_NameOrderProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasNameChildrenOrder(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetNameChildrenOrder(
        _this: *mut sdf_PrimSpecHandle_t,
        names: *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_InsertInNameChildrenOrder(
        _this: *mut sdf_PrimSpecHandle_t,
        name: *const tf_Token_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_RemoveFromNameChildrenOrder(
        _this: *mut sdf_PrimSpecHandle_t,
        name: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_RemoveFromNameChildrenOrderByIndex(
        _this: *mut sdf_PrimSpecHandle_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ApplyNameChildrenOrder(
        _this: *const sdf_PrimSpecHandle_t,
        vec: *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetProperties(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_PropertySpecView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetProperties(
        _this: *mut sdf_PrimSpecHandle_t,
        param00: *const sdf_PropertySpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_InsertProperty(
        _this: *mut sdf_PrimSpecHandle_t,
        property: *const sdf_PropertySpecHandle_t,
        index: ::std::os::raw::c_int,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_RemoveProperty(
        _this: *mut sdf_PrimSpecHandle_t,
        property: *const sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetAttributes(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_AttributeSpecView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetRelationships(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_RelationshipSpecView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetPropertyOrder(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_NameOrderProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasPropertyOrder(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetPropertyOrder(
        _this: *mut sdf_PrimSpecHandle_t,
        names: *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_InsertInPropertyOrder(
        _this: *mut sdf_PrimSpecHandle_t,
        name: *const tf_Token_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_RemoveFromPropertyOrder(
        _this: *mut sdf_PrimSpecHandle_t,
        name: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_RemoveFromPropertyOrderByIndex(
        _this: *mut sdf_PrimSpecHandle_t,
        index: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ApplyPropertyOrder(
        _this: *const sdf_PrimSpecHandle_t,
        vec: *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetObjectAtPath(
        _this: *const sdf_PrimSpecHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetPrimAtPath(
        _this: *const sdf_PrimSpecHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetPropertyAtPath(
        _this: *const sdf_PrimSpecHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetAttributeAtPath(
        _this: *const sdf_PrimSpecHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetRelationshipAtPath(
        _this: *const sdf_PrimSpecHandle_t,
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetTypeName(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetTypeName(
        _this: *mut sdf_PrimSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetComment(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetComment(
        _this: *mut sdf_PrimSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetDocumentation(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetDocumentation(
        _this: *mut sdf_PrimSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetActive(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetActive(
        _this: *mut sdf_PrimSpecHandle_t,
        value: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasActive(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearActive(
        _this: *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetHidden(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetHidden(
        _this: *mut sdf_PrimSpecHandle_t,
        value: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetKind(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetKind(
        _this: *mut sdf_PrimSpecHandle_t,
        value: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasKind(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearKind(_this: *mut sdf_PrimSpecHandle_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetSymmetryFunction(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetSymmetryFunction(
        _this: *mut sdf_PrimSpecHandle_t,
        functionName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetSymmetricPeer(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetSymmetricPeer(
        _this: *mut sdf_PrimSpecHandle_t,
        peerName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetPrefix(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetPrefix(
        _this: *mut sdf_PrimSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetSuffix(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetSuffix(
        _this: *mut sdf_PrimSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetCustomData(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetCustomData(
        _this: *mut sdf_PrimSpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetAssetInfo(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetAssetInfo(
        _this: *mut sdf_PrimSpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetSpecifier(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetSpecifier(
        _this: *mut sdf_PrimSpecHandle_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetPermission(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetPermission(
        _this: *mut sdf_PrimSpecHandle_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetPrefixSubstitutions(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetPrefixSubstitutions(
        _this: *mut sdf_PrimSpecHandle_t,
        prefixSubstitutions: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetSuffixSubstitutions(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetSuffixSubstitutions(
        _this: *mut sdf_PrimSpecHandle_t,
        suffixSubstitutions: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetInstanceable(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetInstanceable(
        _this: *mut sdf_PrimSpecHandle_t,
        instanceable: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasInstanceable(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearInstanceable(
        _this: *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetPayloadList(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_PayloadEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasPayloads(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearPayloadList(
        _this: *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetInheritPathList(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_PathEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasInheritPaths(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearInheritPathList(
        _this: *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetSpecializesList(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_PathEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasSpecializes(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearSpecializesList(
        _this: *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetReferenceList(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_ReferenceEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasReferences(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearReferenceList(
        _this: *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetVariantSetNameList(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_NameEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasVariantSetNames(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetVariantNames(
        _this: *const sdf_PrimSpecHandle_t,
        name: *const std_String_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_RemoveVariantSet(
        _this: *mut sdf_PrimSpecHandle_t,
        name: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetVariantSelections(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_VariantSelectionProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_BlockVariantSelection(
        _this: *mut sdf_PrimSpecHandle_t,
        variantSetName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetRelocates(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_RelocatesMapProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetRelocates(
        _this: *mut sdf_PrimSpecHandle_t,
        newMap: *const sdf_RelocatesMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasRelocates(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearRelocates(
        _this: *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetName(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetNameToken(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_CanSetName(
        _this: *const sdf_PrimSpecHandle_t,
        newName: *const std_String_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetName(
        _this: *mut sdf_PrimSpecHandle_t,
        newName: *const std_String_t,
        validate: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetSchema(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetSpecType(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_IsDormant(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetLayer(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetPath(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_PermissionToEdit(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ListInfoKeys(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetMetaDataInfoKeys(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetMetaDataDisplayGroup(
        _this: *const sdf_PrimSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetInfo(
        _this: *const sdf_PrimSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetInfo(
        _this: *mut sdf_PrimSpecHandle_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetInfoDictionaryValue(
        _this: *mut sdf_PrimSpecHandle_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasInfo(
        _this: *const sdf_PrimSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearInfo(
        _this: *mut sdf_PrimSpecHandle_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetTypeForInfo(
        _this: *const sdf_PrimSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetFallbackForInfo(
        _this: *const sdf_PrimSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_IsInert(
        _this: *const sdf_PrimSpecHandle_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ListFields(
        _this: *const sdf_PrimSpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_HasField_00(
        _this: *const sdf_PrimSpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_GetField(
        _this: *const sdf_PrimSpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_SetField_00(
        _this: *mut sdf_PrimSpecHandle_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_ClearField(
        _this: *mut sdf_PrimSpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_op_eq(
        _this: *const sdf_PrimSpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandle_op_lt(
        _this: *const sdf_PrimSpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_data(
        _this: *mut sdf_PrimSpecHandleVector_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_data_const(
        _this: *const sdf_PrimSpecHandleVector_t,
        _result: *mut *const sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_empty(
        _this: *const sdf_PrimSpecHandleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_size(
        _this: *const sdf_PrimSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_max_size(
        _this: *const sdf_PrimSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_capacity(
        _this: *const sdf_PrimSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_clear(
        _this: *mut sdf_PrimSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_pop_back(
        _this: *mut sdf_PrimSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_op_index(
        _this: *const sdf_PrimSpecHandleVector_t,
        __n: usize,
        _result: *mut *const sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_default(
        _result: *mut *mut sdf_PrimSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleVector_dtor(
        _this: *mut sdf_PrimSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPair_dtor(
        _this: *mut sdf_PrimSpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_data(
        _this: *mut sdf_PrimSpecHandleOffsetPairVector_t,
        _result: *mut *mut sdf_PrimSpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_data_const(
        _this: *const sdf_PrimSpecHandleOffsetPairVector_t,
        _result: *mut *const sdf_PrimSpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_empty(
        _this: *const sdf_PrimSpecHandleOffsetPairVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_size(
        _this: *const sdf_PrimSpecHandleOffsetPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_max_size(
        _this: *const sdf_PrimSpecHandleOffsetPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_capacity(
        _this: *const sdf_PrimSpecHandleOffsetPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_clear(
        _this: *mut sdf_PrimSpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_pop_back(
        _this: *mut sdf_PrimSpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_op_index(
        _this: *const sdf_PrimSpecHandleOffsetPairVector_t,
        __n: usize,
        _result: *mut *const sdf_PrimSpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_default(
        _result: *mut *mut sdf_PrimSpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecHandleOffsetPairVector_dtor(
        _this: *mut sdf_PrimSpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PrimSpecView_dtor(_this: *mut sdf_PrimSpecView_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetName(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetNameToken(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_CanSetName(
        _this: *const sdf_PropertySpec_t,
        newName: *const std_String_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetName(
        _this: *mut sdf_PropertySpec_t,
        newName: *const std_String_t,
        validate: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_IsValidName(
        name: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetOwner(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetCustomData(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetAssetInfo(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetCustomData(
        _this: *mut sdf_PropertySpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetAssetInfo(
        _this: *mut sdf_PropertySpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetDisplayGroup(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetDisplayGroup(
        _this: *mut sdf_PropertySpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetDisplayName(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetDisplayName(
        _this: *mut sdf_PropertySpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetDocumentation(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetDocumentation(
        _this: *mut sdf_PropertySpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetHidden(
        _this: *const sdf_PropertySpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetHidden(
        _this: *mut sdf_PropertySpec_t,
        value: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetPermission(
        _this: *const sdf_PropertySpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetPermission(
        _this: *mut sdf_PropertySpec_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetPrefix(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetPrefix(
        _this: *mut sdf_PropertySpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetSuffix(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetSuffix(
        _this: *mut sdf_PropertySpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetSymmetricPeer(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetSymmetricPeer(
        _this: *mut sdf_PropertySpec_t,
        peerName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetSymmetryArguments(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetSymmetryArgument(
        _this: *mut sdf_PropertySpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetSymmetryFunction(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetSymmetryFunction(
        _this: *mut sdf_PropertySpec_t,
        functionName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetTimeSampleMap(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut sdf_TimeSampleMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetValueType(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetTypeName(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetDefaultValue(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetDefaultValue(
        _this: *mut sdf_PropertySpec_t,
        defaultValue: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_HasDefaultValue(
        _this: *const sdf_PropertySpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_ClearDefaultValue(
        _this: *mut sdf_PropertySpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetComment(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetComment(
        _this: *mut sdf_PropertySpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_IsCustom(
        _this: *const sdf_PropertySpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetCustom(
        _this: *mut sdf_PropertySpec_t,
        custom: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetVariability(
        _this: *const sdf_PropertySpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_HasOnlyRequiredFields(
        _this: *const sdf_PropertySpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_default(_result: *mut *mut sdf_PropertySpec_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_dtor(_this: *mut sdf_PropertySpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetSchema(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetSpecType(
        _this: *const sdf_PropertySpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_IsDormant(
        _this: *const sdf_PropertySpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetLayer(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetPath(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_PermissionToEdit(
        _this: *const sdf_PropertySpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_ListInfoKeys(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetMetaDataInfoKeys(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetMetaDataDisplayGroup(
        _this: *const sdf_PropertySpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetInfo(
        _this: *const sdf_PropertySpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetInfo(
        _this: *mut sdf_PropertySpec_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetInfoDictionaryValue(
        _this: *mut sdf_PropertySpec_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_HasInfo(
        _this: *const sdf_PropertySpec_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_ClearInfo(
        _this: *mut sdf_PropertySpec_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetTypeForInfo(
        _this: *const sdf_PropertySpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetFallbackForInfo(
        _this: *const sdf_PropertySpec_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_IsInert(
        _this: *const sdf_PropertySpec_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_ListFields(
        _this: *const sdf_PropertySpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_HasField_00(
        _this: *const sdf_PropertySpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_GetField(
        _this: *const sdf_PropertySpec_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_SetField_00(
        _this: *mut sdf_PropertySpec_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_ClearField(
        _this: *mut sdf_PropertySpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_op_eq(
        _this: *const sdf_PropertySpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpec_op_lt(
        _this: *const sdf_PropertySpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_dtor(
        _this: *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetName(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetNameToken(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_CanSetName(
        _this: *const sdf_PropertySpecHandle_t,
        newName: *const std_String_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetName(
        _this: *mut sdf_PropertySpecHandle_t,
        newName: *const std_String_t,
        validate: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetOwner(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetCustomData(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetAssetInfo(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetCustomData(
        _this: *mut sdf_PropertySpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetAssetInfo(
        _this: *mut sdf_PropertySpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetDisplayGroup(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetDisplayGroup(
        _this: *mut sdf_PropertySpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetDisplayName(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetDisplayName(
        _this: *mut sdf_PropertySpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetDocumentation(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetDocumentation(
        _this: *mut sdf_PropertySpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetHidden(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetHidden(
        _this: *mut sdf_PropertySpecHandle_t,
        value: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetPermission(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetPermission(
        _this: *mut sdf_PropertySpecHandle_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetPrefix(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetPrefix(
        _this: *mut sdf_PropertySpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetSuffix(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetSuffix(
        _this: *mut sdf_PropertySpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetSymmetricPeer(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetSymmetricPeer(
        _this: *mut sdf_PropertySpecHandle_t,
        peerName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetSymmetryArguments(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetSymmetryArgument(
        _this: *mut sdf_PropertySpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetSymmetryFunction(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetSymmetryFunction(
        _this: *mut sdf_PropertySpecHandle_t,
        functionName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetTimeSampleMap(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut sdf_TimeSampleMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetValueType(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetTypeName(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetDefaultValue(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetDefaultValue(
        _this: *mut sdf_PropertySpecHandle_t,
        defaultValue: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_HasDefaultValue(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_ClearDefaultValue(
        _this: *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetComment(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetComment(
        _this: *mut sdf_PropertySpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_IsCustom(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetCustom(
        _this: *mut sdf_PropertySpecHandle_t,
        custom: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetVariability(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_HasOnlyRequiredFields(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetSchema(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetSpecType(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_IsDormant(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetLayer(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetPath(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_PermissionToEdit(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_ListInfoKeys(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetMetaDataInfoKeys(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetMetaDataDisplayGroup(
        _this: *const sdf_PropertySpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetInfo(
        _this: *const sdf_PropertySpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetInfo(
        _this: *mut sdf_PropertySpecHandle_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetInfoDictionaryValue(
        _this: *mut sdf_PropertySpecHandle_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_HasInfo(
        _this: *const sdf_PropertySpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_ClearInfo(
        _this: *mut sdf_PropertySpecHandle_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetTypeForInfo(
        _this: *const sdf_PropertySpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetFallbackForInfo(
        _this: *const sdf_PropertySpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_IsInert(
        _this: *const sdf_PropertySpecHandle_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_ListFields(
        _this: *const sdf_PropertySpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_HasField_00(
        _this: *const sdf_PropertySpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_GetField(
        _this: *const sdf_PropertySpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_SetField_00(
        _this: *mut sdf_PropertySpecHandle_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_ClearField(
        _this: *mut sdf_PropertySpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_op_eq(
        _this: *const sdf_PropertySpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandle_op_lt(
        _this: *const sdf_PropertySpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_data(
        _this: *mut sdf_PropertySpecHandleVector_t,
        _result: *mut *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_data_const(
        _this: *const sdf_PropertySpecHandleVector_t,
        _result: *mut *const sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_empty(
        _this: *const sdf_PropertySpecHandleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_size(
        _this: *const sdf_PropertySpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_max_size(
        _this: *const sdf_PropertySpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_capacity(
        _this: *const sdf_PropertySpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_clear(
        _this: *mut sdf_PropertySpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_pop_back(
        _this: *mut sdf_PropertySpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_op_index(
        _this: *const sdf_PropertySpecHandleVector_t,
        __n: usize,
        _result: *mut *const sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_default(
        _result: *mut *mut sdf_PropertySpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleVector_dtor(
        _this: *mut sdf_PropertySpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPair_dtor(
        _this: *mut sdf_PropertySpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_data(
        _this: *mut sdf_PropertySpecHandleOffsetPairVector_t,
        _result: *mut *mut sdf_PropertySpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_data_const(
        _this: *const sdf_PropertySpecHandleOffsetPairVector_t,
        _result: *mut *const sdf_PropertySpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_empty(
        _this: *const sdf_PropertySpecHandleOffsetPairVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_size(
        _this: *const sdf_PropertySpecHandleOffsetPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_max_size(
        _this: *const sdf_PropertySpecHandleOffsetPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_capacity(
        _this: *const sdf_PropertySpecHandleOffsetPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_clear(
        _this: *mut sdf_PropertySpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_pop_back(
        _this: *mut sdf_PropertySpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_op_index(
        _this: *const sdf_PropertySpecHandleOffsetPairVector_t,
        __n: usize,
        _result: *mut *const sdf_PropertySpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_default(
        _result: *mut *mut sdf_PropertySpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecHandleOffsetPairVector_dtor(
        _this: *mut sdf_PropertySpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PropertySpecView_dtor(_this: *mut sdf_PropertySpecView_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_DictionaryProxy_dtor(_this: *mut sdf_DictionaryProxy_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NameOrderProxy_dtor(_this: *mut sdf_NameOrderProxy_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SubLayerProxy_dtor(_this: *mut sdf_SubLayerProxy_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NameEditorProxy_dtor(_this: *mut sdf_NameEditorProxy_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PathEditorProxy_dtor(_this: *mut sdf_PathEditorProxy_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_PayloadEditorProxy_dtor(
        _this: *mut sdf_PayloadEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceEditorProxy_dtor(
        _this: *mut sdf_ReferenceEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSelectionProxy_dtor(
        _this: *mut sdf_VariantSelectionProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelocatesMapProxy_dtor(_this: *mut sdf_RelocatesMapProxy_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetsProxy_dtor(_this: *mut sdf_VariantSetsProxy_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_GetAssetPath(
        _this: *const sdf_Reference_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_SetAssetPath(
        _this: *mut sdf_Reference_t,
        assetPath: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_GetPrimPath(
        _this: *const sdf_Reference_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_SetPrimPath(
        _this: *mut sdf_Reference_t,
        primPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_GetLayerOffset(
        _this: *const sdf_Reference_t,
        _result: *mut *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_SetLayerOffset(
        _this: *mut sdf_Reference_t,
        layerOffset: *const sdf_LayerOffset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_GetCustomData(
        _this: *const sdf_Reference_t,
        _result: *mut *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_SetCustomData(
        _this: *mut sdf_Reference_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_SetCustomData_value(
        _this: *mut sdf_Reference_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_SwapCustomData(
        _this: *mut sdf_Reference_t,
        customData: *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_IsInternal(
        _this: *const sdf_Reference_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_op_eq(
        _this: *const sdf_Reference_t,
        rhs: *const sdf_Reference_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_op_lt(
        _this: *const sdf_Reference_t,
        rhs: *const sdf_Reference_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_dtor(_this: *mut sdf_Reference_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_data(
        _this: *mut sdf_ReferenceVector_t,
        _result: *mut *mut sdf_Reference_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_data_const(
        _this: *const sdf_ReferenceVector_t,
        _result: *mut *const sdf_Reference_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_empty(
        _this: *const sdf_ReferenceVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_size(
        _this: *const sdf_ReferenceVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_max_size(
        _this: *const sdf_ReferenceVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_capacity(
        _this: *const sdf_ReferenceVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_clear(_this: *mut sdf_ReferenceVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_pop_back(_this: *mut sdf_ReferenceVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_op_index(
        _this: *const sdf_ReferenceVector_t,
        __n: usize,
        _result: *mut *const sdf_Reference_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_default(
        _result: *mut *mut sdf_ReferenceVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ReferenceVector_dtor(_this: *mut sdf_ReferenceVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_New(
        owner: *const sdf_PrimSpecHandle_t,
        name: *const std_String_t,
        custom: bool,
        variability: ::std::os::raw::c_uint,
        _result: *mut *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetNoLoadHint(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetNoLoadHint(
        _this: *mut sdf_RelationshipSpec_t,
        noload: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetTargetPathList(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut sdf_PathEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_HasTargetPathList(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_ClearTargetPathList(
        _this: *const sdf_RelationshipSpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_ReplaceTargetPath(
        _this: *mut sdf_RelationshipSpec_t,
        oldPath: *const sdf_Path_t,
        newPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_RemoveTargetPath(
        _this: *mut sdf_RelationshipSpec_t,
        path: *const sdf_Path_t,
        preserveTargetOrder: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_dtor(_this: *mut sdf_RelationshipSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetSchema(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetSpecType(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_IsDormant(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetLayer(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetPath(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_PermissionToEdit(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_ListInfoKeys(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetMetaDataInfoKeys(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetMetaDataDisplayGroup(
        _this: *const sdf_RelationshipSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetInfo(
        _this: *const sdf_RelationshipSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetInfo(
        _this: *mut sdf_RelationshipSpec_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetInfoDictionaryValue(
        _this: *mut sdf_RelationshipSpec_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_HasInfo(
        _this: *const sdf_RelationshipSpec_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_ClearInfo(
        _this: *mut sdf_RelationshipSpec_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetTypeForInfo(
        _this: *const sdf_RelationshipSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetFallbackForInfo(
        _this: *const sdf_RelationshipSpec_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_IsInert(
        _this: *const sdf_RelationshipSpec_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_ListFields(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_HasField_00(
        _this: *const sdf_RelationshipSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetField(
        _this: *const sdf_RelationshipSpec_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetField_00(
        _this: *mut sdf_RelationshipSpec_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_ClearField(
        _this: *mut sdf_RelationshipSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_op_eq(
        _this: *const sdf_RelationshipSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_op_lt(
        _this: *const sdf_RelationshipSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetName(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetNameToken(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_CanSetName(
        _this: *const sdf_RelationshipSpec_t,
        newName: *const std_String_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetName(
        _this: *mut sdf_RelationshipSpec_t,
        newName: *const std_String_t,
        validate: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetOwner(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetCustomData(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetAssetInfo(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetCustomData(
        _this: *mut sdf_RelationshipSpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetAssetInfo(
        _this: *mut sdf_RelationshipSpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetDisplayGroup(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetDisplayGroup(
        _this: *mut sdf_RelationshipSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetDisplayName(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetDisplayName(
        _this: *mut sdf_RelationshipSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetDocumentation(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetDocumentation(
        _this: *mut sdf_RelationshipSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetHidden(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetHidden(
        _this: *mut sdf_RelationshipSpec_t,
        value: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetPermission(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetPermission(
        _this: *mut sdf_RelationshipSpec_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetPrefix(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetPrefix(
        _this: *mut sdf_RelationshipSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetSuffix(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetSuffix(
        _this: *mut sdf_RelationshipSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetSymmetricPeer(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetSymmetricPeer(
        _this: *mut sdf_RelationshipSpec_t,
        peerName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetSymmetryArguments(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetSymmetryArgument(
        _this: *mut sdf_RelationshipSpec_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetSymmetryFunction(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetSymmetryFunction(
        _this: *mut sdf_RelationshipSpec_t,
        functionName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetTimeSampleMap(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut sdf_TimeSampleMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetValueType(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetTypeName(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetDefaultValue(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetDefaultValue(
        _this: *mut sdf_RelationshipSpec_t,
        defaultValue: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_HasDefaultValue(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_ClearDefaultValue(
        _this: *mut sdf_RelationshipSpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetComment(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetComment(
        _this: *mut sdf_RelationshipSpec_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_IsCustom(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_SetCustom(
        _this: *mut sdf_RelationshipSpec_t,
        custom: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_GetVariability(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpec_HasOnlyRequiredFields(
        _this: *const sdf_RelationshipSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_dtor(
        _this: *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetNoLoadHint(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetNoLoadHint(
        _this: *mut sdf_RelationshipSpecHandle_t,
        noload: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetTargetPathList(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut sdf_PathEditorProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_HasTargetPathList(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_ClearTargetPathList(
        _this: *const sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_ReplaceTargetPath(
        _this: *mut sdf_RelationshipSpecHandle_t,
        oldPath: *const sdf_Path_t,
        newPath: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_RemoveTargetPath(
        _this: *mut sdf_RelationshipSpecHandle_t,
        path: *const sdf_Path_t,
        preserveTargetOrder: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetSchema(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetSpecType(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_IsDormant(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetLayer(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetPath(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_PermissionToEdit(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_ListInfoKeys(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetMetaDataInfoKeys(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetMetaDataDisplayGroup(
        _this: *const sdf_RelationshipSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetInfo(
        _this: *const sdf_RelationshipSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetInfo(
        _this: *mut sdf_RelationshipSpecHandle_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetInfoDictionaryValue(
        _this: *mut sdf_RelationshipSpecHandle_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_HasInfo(
        _this: *const sdf_RelationshipSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_ClearInfo(
        _this: *mut sdf_RelationshipSpecHandle_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetTypeForInfo(
        _this: *const sdf_RelationshipSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetFallbackForInfo(
        _this: *const sdf_RelationshipSpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_IsInert(
        _this: *const sdf_RelationshipSpecHandle_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_ListFields(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_HasField_00(
        _this: *const sdf_RelationshipSpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetField(
        _this: *const sdf_RelationshipSpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetField_00(
        _this: *mut sdf_RelationshipSpecHandle_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_ClearField(
        _this: *mut sdf_RelationshipSpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_op_eq(
        _this: *const sdf_RelationshipSpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_op_lt(
        _this: *const sdf_RelationshipSpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetName(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetNameToken(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_CanSetName(
        _this: *const sdf_RelationshipSpecHandle_t,
        newName: *const std_String_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetName(
        _this: *mut sdf_RelationshipSpecHandle_t,
        newName: *const std_String_t,
        validate: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetOwner(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetCustomData(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetAssetInfo(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetCustomData(
        _this: *mut sdf_RelationshipSpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetAssetInfo(
        _this: *mut sdf_RelationshipSpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetDisplayGroup(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetDisplayGroup(
        _this: *mut sdf_RelationshipSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetDisplayName(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetDisplayName(
        _this: *mut sdf_RelationshipSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetDocumentation(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetDocumentation(
        _this: *mut sdf_RelationshipSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetHidden(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetHidden(
        _this: *mut sdf_RelationshipSpecHandle_t,
        value: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetPermission(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetPermission(
        _this: *mut sdf_RelationshipSpecHandle_t,
        value: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetPrefix(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetPrefix(
        _this: *mut sdf_RelationshipSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetSuffix(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetSuffix(
        _this: *mut sdf_RelationshipSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetSymmetricPeer(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetSymmetricPeer(
        _this: *mut sdf_RelationshipSpecHandle_t,
        peerName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetSymmetryArguments(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut sdf_DictionaryProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetSymmetryArgument(
        _this: *mut sdf_RelationshipSpecHandle_t,
        name: *const std_String_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetSymmetryFunction(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetSymmetryFunction(
        _this: *mut sdf_RelationshipSpecHandle_t,
        functionName: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetTimeSampleMap(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut sdf_TimeSampleMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetValueType(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetTypeName(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetDefaultValue(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetDefaultValue(
        _this: *mut sdf_RelationshipSpecHandle_t,
        defaultValue: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_HasDefaultValue(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_ClearDefaultValue(
        _this: *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetComment(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetComment(
        _this: *mut sdf_RelationshipSpecHandle_t,
        value: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_IsCustom(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_SetCustom(
        _this: *mut sdf_RelationshipSpecHandle_t,
        custom: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_GetVariability(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandle_HasOnlyRequiredFields(
        _this: *const sdf_RelationshipSpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_data(
        _this: *mut sdf_RelationshipSpecHandleVector_t,
        _result: *mut *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_data_const(
        _this: *const sdf_RelationshipSpecHandleVector_t,
        _result: *mut *const sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_empty(
        _this: *const sdf_RelationshipSpecHandleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_size(
        _this: *const sdf_RelationshipSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_max_size(
        _this: *const sdf_RelationshipSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_capacity(
        _this: *const sdf_RelationshipSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_clear(
        _this: *mut sdf_RelationshipSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_pop_back(
        _this: *mut sdf_RelationshipSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_op_index(
        _this: *const sdf_RelationshipSpecHandleVector_t,
        __n: usize,
        _result: *mut *const sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_default(
        _result: *mut *mut sdf_RelationshipSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleVector_dtor(
        _this: *mut sdf_RelationshipSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecView_dtor(
        _this: *mut sdf_RelationshipSpecView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPair_dtor(
        _this: *mut sdf_RelationshipSpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_data(
        _this: *mut sdf_RelationshipSpecHandleOffsetPairVector_t,
        _result: *mut *mut sdf_RelationshipSpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_data_const(
        _this: *const sdf_RelationshipSpecHandleOffsetPairVector_t,
        _result: *mut *const sdf_RelationshipSpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_empty(
        _this: *const sdf_RelationshipSpecHandleOffsetPairVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_size(
        _this: *const sdf_RelationshipSpecHandleOffsetPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_max_size(
        _this: *const sdf_RelationshipSpecHandleOffsetPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_capacity(
        _this: *const sdf_RelationshipSpecHandleOffsetPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_clear(
        _this: *mut sdf_RelationshipSpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_pop_back(
        _this: *mut sdf_RelationshipSpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_op_index(
        _this: *const sdf_RelationshipSpecHandleOffsetPairVector_t,
        __n: usize,
        _result: *mut *const sdf_RelationshipSpecHandleOffsetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_default(
        _result: *mut *mut sdf_RelationshipSpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelationshipSpecHandleOffsetPairVector_dtor(
        _this: *mut sdf_RelationshipSpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_GetFieldDefinition(
        _this: *const sdf_SdfSchemaBase_t,
        fieldKey: *const tf_Token_t,
        _result: *mut *const sdf_FieldDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_GetSpecDefinition(
        _this: *const sdf_SdfSchemaBase_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut *const sdf_SpecDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsRegistered(
        _this: *const sdf_SdfSchemaBase_t,
        fieldKey: *const tf_Token_t,
        fallback: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_HoldsChildren(
        _this: *const sdf_SdfSchemaBase_t,
        fieldKey: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_GetFallback(
        _this: *const sdf_SdfSchemaBase_t,
        fieldKey: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_CastToTypeOf(
        _this: *const sdf_SdfSchemaBase_t,
        fieldKey: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidFieldForSpec(
        _this: *const sdf_SdfSchemaBase_t,
        fieldKey: *const tf_Token_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_GetFields(
        _this: *const sdf_SdfSchemaBase_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_GetMetadataFields(
        _this: *const sdf_SdfSchemaBase_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_GetMetadataFieldDisplayGroup(
        _this: *const sdf_SdfSchemaBase_t,
        specType: ::std::os::raw::c_uint,
        metadataField: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_GetRequiredFields(
        _this: *const sdf_SdfSchemaBase_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsRequiredFieldName(
        _this: *const sdf_SdfSchemaBase_t,
        fieldName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidAttributeConnectionPath(
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidIdentifier(
        name: *const std_String_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidNamespacedIdentifier(
        name: *const std_String_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidInheritPath(
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidPayload(
        payload: *const sdf_Payload_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidReference(
        ref_: *const sdf_Reference_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidRelationshipTargetPath(
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidRelocatesPath(
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidSpecializesPath(
        path: *const sdf_Path_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidSubLayer(
        sublayer: *const std_String_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidVariantIdentifier(
        name: *const std_String_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidVariantSelection(
        sel: *const std_String_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_IsValidValue(
        _this: *const sdf_SdfSchemaBase_t,
        value: *const vt_Value_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_GetAllTypes(
        _this: *const sdf_SdfSchemaBase_t,
        _result: *mut *mut sdf_ValueTypeNameVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_FindType_00(
        _this: *const sdf_SdfSchemaBase_t,
        typeName: *const tf_Token_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_FindType_01(
        _this: *const sdf_SdfSchemaBase_t,
        typeName: *const ::std::os::raw::c_char,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_FindType_02(
        _this: *const sdf_SdfSchemaBase_t,
        typeName: *const std_String_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_FindType_03(
        _this: *const sdf_SdfSchemaBase_t,
        type_: *const tf_Type_t,
        role: *const tf_Token_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_FindType_04(
        _this: *const sdf_SdfSchemaBase_t,
        value: *const vt_Value_t,
        role: *const tf_Token_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchemaBase_FindOrCreateType(
        _this: *const sdf_SdfSchemaBase_t,
        typeName: *const tf_Token_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_FieldDefinition_dtor(_this: *mut sdf_FieldDefinition_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecDefinition_GetFields(
        _this: *const sdf_SpecDefinition_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecDefinition_GetRequiredFields(
        _this: *const sdf_SpecDefinition_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecDefinition_GetMetadataFields(
        _this: *const sdf_SpecDefinition_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecDefinition_IsValidField(
        _this: *const sdf_SpecDefinition_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecDefinition_IsMetadataField(
        _this: *const sdf_SpecDefinition_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecDefinition_GetMetadataFieldDisplayGroup(
        _this: *const sdf_SpecDefinition_t,
        name: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecDefinition_IsRequiredField(
        _this: *const sdf_SpecDefinition_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecDefinition_dtor(_this: *mut sdf_SpecDefinition_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_GetInstance(_result: *mut *const sdf_SdfSchema_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_GetFieldDefinition(
        _this: *const sdf_SdfSchema_t,
        fieldKey: *const tf_Token_t,
        _result: *mut *const sdf_FieldDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_GetSpecDefinition(
        _this: *const sdf_SdfSchema_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut *const sdf_SpecDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_IsRegistered(
        _this: *const sdf_SdfSchema_t,
        fieldKey: *const tf_Token_t,
        fallback: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_HoldsChildren(
        _this: *const sdf_SdfSchema_t,
        fieldKey: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_GetFallback(
        _this: *const sdf_SdfSchema_t,
        fieldKey: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_CastToTypeOf(
        _this: *const sdf_SdfSchema_t,
        fieldKey: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_IsValidFieldForSpec(
        _this: *const sdf_SdfSchema_t,
        fieldKey: *const tf_Token_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_GetFields(
        _this: *const sdf_SdfSchema_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_GetMetadataFields(
        _this: *const sdf_SdfSchema_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_GetMetadataFieldDisplayGroup(
        _this: *const sdf_SdfSchema_t,
        specType: ::std::os::raw::c_uint,
        metadataField: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_GetRequiredFields(
        _this: *const sdf_SdfSchema_t,
        specType: ::std::os::raw::c_uint,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_IsRequiredFieldName(
        _this: *const sdf_SdfSchema_t,
        fieldName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_IsValidValue(
        _this: *const sdf_SdfSchema_t,
        value: *const vt_Value_t,
        _result: *mut *mut sdf_Allowed_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_GetAllTypes(
        _this: *const sdf_SdfSchema_t,
        _result: *mut *mut sdf_ValueTypeNameVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_FindType_00(
        _this: *const sdf_SdfSchema_t,
        typeName: *const tf_Token_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_FindType_01(
        _this: *const sdf_SdfSchema_t,
        typeName: *const ::std::os::raw::c_char,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_FindType_02(
        _this: *const sdf_SdfSchema_t,
        typeName: *const std_String_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_FindType_03(
        _this: *const sdf_SdfSchema_t,
        type_: *const tf_Type_t,
        role: *const tf_Token_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_FindType_04(
        _this: *const sdf_SdfSchema_t,
        value: *const vt_Value_t,
        role: *const tf_Token_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSchema_FindOrCreateType(
        _this: *const sdf_SdfSchema_t,
        typeName: *const tf_Token_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_data(
        _this: *mut sdf_SchemaBaseFieldDefinitionInfoVec_t,
        _result: *mut *mut js_TokenValuePair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_data_const(
        _this: *const sdf_SchemaBaseFieldDefinitionInfoVec_t,
        _result: *mut *const js_TokenValuePair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_empty(
        _this: *const sdf_SchemaBaseFieldDefinitionInfoVec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_size(
        _this: *const sdf_SchemaBaseFieldDefinitionInfoVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_max_size(
        _this: *const sdf_SchemaBaseFieldDefinitionInfoVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_capacity(
        _this: *const sdf_SchemaBaseFieldDefinitionInfoVec_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_clear(
        _this: *mut sdf_SchemaBaseFieldDefinitionInfoVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_pop_back(
        _this: *mut sdf_SchemaBaseFieldDefinitionInfoVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_op_index(
        _this: *const sdf_SchemaBaseFieldDefinitionInfoVec_t,
        __n: usize,
        _result: *mut *const js_TokenValuePair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_default(
        _result: *mut *mut sdf_SchemaBaseFieldDefinitionInfoVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SchemaBaseFieldDefinitionInfoVec_dtor(
        _this: *mut sdf_SchemaBaseFieldDefinitionInfoVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetSchema(
        _this: *const sdf_SdfSpec_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetSpecType(
        _this: *const sdf_SdfSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_IsDormant(
        _this: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetLayer(
        _this: *const sdf_SdfSpec_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetPath(
        _this: *const sdf_SdfSpec_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_PermissionToEdit(
        _this: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_ListInfoKeys(
        _this: *const sdf_SdfSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetMetaDataInfoKeys(
        _this: *const sdf_SdfSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetMetaDataDisplayGroup(
        _this: *const sdf_SdfSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetInfo(
        _this: *const sdf_SdfSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_SetInfo(
        _this: *mut sdf_SdfSpec_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_SetInfoDictionaryValue(
        _this: *mut sdf_SdfSpec_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_HasInfo(
        _this: *const sdf_SdfSpec_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_ClearInfo(
        _this: *mut sdf_SdfSpec_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetTypeForInfo(
        _this: *const sdf_SdfSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetFallbackForInfo(
        _this: *const sdf_SdfSpec_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_IsInert(
        _this: *const sdf_SdfSpec_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_ListFields(
        _this: *const sdf_SdfSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_HasField_00(
        _this: *const sdf_SdfSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_GetField(
        _this: *const sdf_SdfSpec_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_SetField_00(
        _this: *mut sdf_SdfSpec_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_ClearField(
        _this: *mut sdf_SdfSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_op_eq(
        _this: *const sdf_SdfSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_op_lt(
        _this: *const sdf_SdfSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_default(_result: *mut *mut sdf_SdfSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SdfSpec_dtor(_this: *mut sdf_SdfSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_dtor(_this: *mut sdf_SpecHandle_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetSchema(
        _this: *const sdf_SpecHandle_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetSpecType(
        _this: *const sdf_SpecHandle_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_IsDormant(
        _this: *const sdf_SpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetLayer(
        _this: *const sdf_SpecHandle_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetPath(
        _this: *const sdf_SpecHandle_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_PermissionToEdit(
        _this: *const sdf_SpecHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_ListInfoKeys(
        _this: *const sdf_SpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetMetaDataInfoKeys(
        _this: *const sdf_SpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetMetaDataDisplayGroup(
        _this: *const sdf_SpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetInfo(
        _this: *const sdf_SpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_SetInfo(
        _this: *mut sdf_SpecHandle_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_SetInfoDictionaryValue(
        _this: *mut sdf_SpecHandle_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_HasInfo(
        _this: *const sdf_SpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_ClearInfo(
        _this: *mut sdf_SpecHandle_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetTypeForInfo(
        _this: *const sdf_SpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetFallbackForInfo(
        _this: *const sdf_SpecHandle_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_IsInert(
        _this: *const sdf_SpecHandle_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_ListFields(
        _this: *const sdf_SpecHandle_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_HasField_00(
        _this: *const sdf_SpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_GetField(
        _this: *const sdf_SpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_SetField_00(
        _this: *mut sdf_SpecHandle_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_ClearField(
        _this: *mut sdf_SpecHandle_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_op_eq(
        _this: *const sdf_SpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_SpecHandle_op_lt(
        _this: *const sdf_SpecHandle_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_TimeCode_from_time(
        param00: f64,
        _result: *mut sdf_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_RelocatesMap_dtor(_this: *mut sdf_RelocatesMap_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_TimeSampleMap_dtor(_this: *mut sdf_TimeSampleMap_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueBlock_dtor(_this: *mut sdf_ValueBlock_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetAsToken(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetType(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut *const tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetRole(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetDefaultValue(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetDefaultUnit(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut *const tf_Enum_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetScalarType(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetArrayType(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_IsScalar(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_IsArray(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetDimensions(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut sdf_TupleDimensions_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetAliasesAsTokens(
        _this: *const sdf_ValueTypeName_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_new(_result: *mut *mut sdf_ValueTypeName_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_dtor(_this: *mut sdf_ValueTypeName_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_data(
        _this: *mut sdf_ValueTypeNameVector_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_data_const(
        _this: *const sdf_ValueTypeNameVector_t,
        _result: *mut *const sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_empty(
        _this: *const sdf_ValueTypeNameVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_size(
        _this: *const sdf_ValueTypeNameVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_max_size(
        _this: *const sdf_ValueTypeNameVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_capacity(
        _this: *const sdf_ValueTypeNameVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_clear(
        _this: *mut sdf_ValueTypeNameVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_pop_back(
        _this: *mut sdf_ValueTypeNameVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_op_index(
        _this: *const sdf_ValueTypeNameVector_t,
        __n: usize,
        _result: *mut *const sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_default(
        _result: *mut *mut sdf_ValueTypeNameVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeNameVector_dtor(
        _this: *mut sdf_ValueTypeNameVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariableExpression_IsExpression(
        s: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariableExpression_IsValidVariableType(
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariableExpression_op_bool(
        _this: *const sdf_VariableExpression_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariableExpression_GetString(
        _this: *const sdf_VariableExpression_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariableExpression_GetErrors(
        _this: *const sdf_VariableExpression_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariableExpression_Evaluate(
        _this: *const sdf_VariableExpression_t,
        variables: *const vt_Dictionary_t,
        _result: *mut *mut sdf_VariableExpressionResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariableExpression_default(
        _result: *mut *mut sdf_VariableExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariableExpression_dtor(
        _this: *mut sdf_VariableExpression_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariableExpressionResult_dtor(
        _this: *mut sdf_VariableExpressionResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_New_00(
        prim: *const sdf_PrimSpecHandle_t,
        name: *const std_String_t,
        _result: *mut *mut sdf_VariantSetSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_New_01(
        prim: *const sdf_VariantSpecHandle_t,
        name: *const std_String_t,
        _result: *mut *mut sdf_VariantSetSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetName(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetNameToken(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetOwner(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetVariants(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut sdf_VariantView_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetVariantList(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut sdf_VariantSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_RemoveVariant(
        _this: *mut sdf_VariantSetSpec_t,
        variant: *const sdf_VariantSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_default(
        _result: *mut *mut sdf_VariantSetSpec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_dtor(_this: *mut sdf_VariantSetSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetSchema(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetSpecType(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_IsDormant(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetLayer(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetPath(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_PermissionToEdit(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_ListInfoKeys(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetMetaDataInfoKeys(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetMetaDataDisplayGroup(
        _this: *const sdf_VariantSetSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetInfo(
        _this: *const sdf_VariantSetSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_SetInfo(
        _this: *mut sdf_VariantSetSpec_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_SetInfoDictionaryValue(
        _this: *mut sdf_VariantSetSpec_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_HasInfo(
        _this: *const sdf_VariantSetSpec_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_ClearInfo(
        _this: *mut sdf_VariantSetSpec_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetTypeForInfo(
        _this: *const sdf_VariantSetSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetFallbackForInfo(
        _this: *const sdf_VariantSetSpec_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_IsInert(
        _this: *const sdf_VariantSetSpec_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_ListFields(
        _this: *const sdf_VariantSetSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_HasField_00(
        _this: *const sdf_VariantSetSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_GetField(
        _this: *const sdf_VariantSetSpec_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_SetField_00(
        _this: *mut sdf_VariantSetSpec_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_ClearField(
        _this: *mut sdf_VariantSetSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_op_eq(
        _this: *const sdf_VariantSetSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpec_op_lt(
        _this: *const sdf_VariantSetSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSetSpecHandle_dtor(
        _this: *mut sdf_VariantSetSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_New(
        owner: *const sdf_VariantSetSpecHandle_t,
        name: *const std_String_t,
        _result: *mut *mut sdf_VariantSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetName(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetNameToken(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetOwner(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut sdf_VariantSetSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetPrimSpec(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetVariantSets(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut sdf_VariantSetsProxy_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetVariantNames(
        _this: *const sdf_VariantSpec_t,
        name: *const std_String_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_default(_result: *mut *mut sdf_VariantSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_dtor(_this: *mut sdf_VariantSpec_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetSchema(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *const sdf_SdfSchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetSpecType(
        _this: *const sdf_VariantSpec_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_IsDormant(
        _this: *const sdf_VariantSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetLayer(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetPath(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_PermissionToEdit(
        _this: *const sdf_VariantSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_ListInfoKeys(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetMetaDataInfoKeys(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetMetaDataDisplayGroup(
        _this: *const sdf_VariantSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetInfo(
        _this: *const sdf_VariantSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_SetInfo(
        _this: *mut sdf_VariantSpec_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_SetInfoDictionaryValue(
        _this: *mut sdf_VariantSpec_t,
        dictionaryKey: *const tf_Token_t,
        entryKey: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_HasInfo(
        _this: *const sdf_VariantSpec_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_ClearInfo(
        _this: *mut sdf_VariantSpec_t,
        key: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetTypeForInfo(
        _this: *const sdf_VariantSpec_t,
        key: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetFallbackForInfo(
        _this: *const sdf_VariantSpec_t,
        key: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_IsInert(
        _this: *const sdf_VariantSpec_t,
        ignoreChildren: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_ListFields(
        _this: *const sdf_VariantSpec_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_HasField_00(
        _this: *const sdf_VariantSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_GetField(
        _this: *const sdf_VariantSpec_t,
        name: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_SetField_00(
        _this: *mut sdf_VariantSpec_t,
        name: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_ClearField(
        _this: *mut sdf_VariantSpec_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_op_eq(
        _this: *const sdf_VariantSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpec_op_lt(
        _this: *const sdf_VariantSpec_t,
        rhs: *const sdf_SdfSpec_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandle_dtor(_this: *mut sdf_VariantSpecHandle_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_data(
        _this: *mut sdf_VariantSpecHandleVector_t,
        _result: *mut *mut sdf_VariantSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_data_const(
        _this: *const sdf_VariantSpecHandleVector_t,
        _result: *mut *const sdf_VariantSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_empty(
        _this: *const sdf_VariantSpecHandleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_size(
        _this: *const sdf_VariantSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_max_size(
        _this: *const sdf_VariantSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_capacity(
        _this: *const sdf_VariantSpecHandleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_clear(
        _this: *mut sdf_VariantSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_pop_back(
        _this: *mut sdf_VariantSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_op_index(
        _this: *const sdf_VariantSpecHandleVector_t,
        __n: usize,
        _result: *mut *const sdf_VariantSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_default(
        _result: *mut *mut sdf_VariantSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantSpecHandleVector_dtor(
        _this: *mut sdf_VariantSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_VariantView_dtor(_this: *mut sdf_VariantView_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPath_from_path(
        path: *const ::std::os::raw::c_char,
        _result: *mut *mut sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPath_from_path_and_resolved_path(
        path: *const ::std::os::raw::c_char,
        resolved_path: *const ::std::os::raw::c_char,
        _result: *mut *mut sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPath_GetAssetPath(
        path: *const sdf_AssetPath_t,
        _result: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_AssetPath_GetResolvedPath(
        path: *const sdf_AssetPath_t,
        _result: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_get_current_path(
        edit: *const sdf_NamespaceEdit_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_get_new_path(
        edit: *const sdf_NamespaceEdit_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEdit_get_index(
        edit: *const sdf_NamespaceEdit_t,
        _result: *mut *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetail_get_edit(
        detail: *const sdf_NamespaceEditDetail_t,
        _result: *mut *const sdf_NamespaceEdit_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetail_get_result(
        detail: *const sdf_NamespaceEditDetail_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_NamespaceEditDetail_get_reason(
        detail: *const sdf_NamespaceEditDetail_t,
        _result: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_from_asset_path(
        assetPath: *const ::std::os::raw::c_char,
        _result: *mut *mut sdf_Payload_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_from_asset_path_and_prim_path(
        assetPath: *const ::std::os::raw::c_char,
        primPath: *const sdf_Path_t,
        _result: *mut *mut sdf_Payload_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Payload_from_asset_path_and_prim_path_and_layer_offset(
        assetPath: *const ::std::os::raw::c_char,
        primPath: *const sdf_Path_t,
        layerOffset: *const sdf_LayerOffset_t,
        _result: *mut *mut sdf_Payload_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_from_asset_path(
        assetPath: *const ::std::os::raw::c_char,
        _result: *mut *mut sdf_Reference_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_from_asset_path_and_prim_path(
        assetPath: *const ::std::os::raw::c_char,
        primPath: *const sdf_Path_t,
        _result: *mut *mut sdf_Reference_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_from_asset_path_and_prim_path_and_layer_offset(
        assetPath: *const ::std::os::raw::c_char,
        primPath: *const sdf_Path_t,
        layerOffset: *const sdf_LayerOffset_t,
        _result: *mut *mut sdf_Reference_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_Reference_from_asset_path_and_prim_path_and_layer_offset_and_custom_data(
        assetPath: *const ::std::os::raw::c_char,
        primPath: *const sdf_Path_t,
        layerOffset: *const sdf_LayerOffset_t,
        customData: *const vt_Dictionary_t,
        _result: *mut *mut sdf_Reference_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdf_ValueTypeName_GetCPPTypeName(
        vtn: *const sdf_ValueTypeName_t,
        _result: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetInstance(_result: *mut *mut sdr_Registry_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetShaderNodeByIdentifier(
        _this: *mut sdr_Registry_t,
        identifier: *const tf_Token_t,
        typePriority: *const tf_TokenVector_t,
        _result: *mut *const sdr_ShaderNode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetShaderNodeByIdentifierAndType(
        _this: *mut sdr_Registry_t,
        identifier: *const tf_Token_t,
        nodeType: *const tf_Token_t,
        _result: *mut *const sdr_ShaderNode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetShaderNodeByName(
        _this: *mut sdr_Registry_t,
        name: *const std_String_t,
        typePriority: *const tf_TokenVector_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *const sdr_ShaderNode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetShaderNodeByNameAndType(
        _this: *mut sdr_Registry_t,
        name: *const std_String_t,
        nodeType: *const tf_Token_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *const sdr_ShaderNode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetShaderNodeFromAsset(
        _this: *mut sdr_Registry_t,
        shaderAsset: *const sdf_AssetPath_t,
        metadata: *const ndr_TokenMap_t,
        subIdentifier: *const tf_Token_t,
        sourceType: *const tf_Token_t,
        _result: *mut *const sdr_ShaderNode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetShaderNodeFromSourceCode(
        _this: *mut sdr_Registry_t,
        sourceCode: *const std_String_t,
        sourceType: *const tf_Token_t,
        metadata: *const ndr_TokenMap_t,
        _result: *mut *const sdr_ShaderNode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_SetExtraDiscoveryPlugins_00(
        _this: *mut sdr_Registry_t,
        plugins: *mut ndr_NdrRegistryDiscoveryPluginRefPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_SetExtraDiscoveryPlugins_01(
        _this: *mut sdr_Registry_t,
        pluginTypes: *const tf_TypeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_AddDiscoveryResult_00(
        _this: *mut sdr_Registry_t,
        discoveryResult: *mut ndr_NodeDiscoveryResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_AddDiscoveryResult_01(
        _this: *mut sdr_Registry_t,
        discoveryResult: *const ndr_NodeDiscoveryResult_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_SetExtraParserPlugins(
        _this: *mut sdr_Registry_t,
        pluginTypes: *const tf_TypeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodeFromAsset(
        _this: *mut sdr_Registry_t,
        asset: *const sdf_AssetPath_t,
        metadata: *const ndr_TokenMap_t,
        subIdentifier: *const tf_Token_t,
        sourceType: *const tf_Token_t,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodeFromSourceCode(
        _this: *mut sdr_Registry_t,
        sourceCode: *const std_String_t,
        sourceType: *const tf_Token_t,
        metadata: *const ndr_TokenMap_t,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetSearchURIs(
        _this: *const sdr_Registry_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodeIdentifiers(
        _this: *const sdr_Registry_t,
        family: *const tf_Token_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodeNames(
        _this: *const sdr_Registry_t,
        family: *const tf_Token_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodeByIdentifier(
        _this: *mut sdr_Registry_t,
        identifier: *const tf_Token_t,
        sourceTypePriority: *const tf_TokenVector_t,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodeByIdentifierAndType(
        _this: *mut sdr_Registry_t,
        identifier: *const tf_Token_t,
        sourceType: *const tf_Token_t,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodeByName(
        _this: *mut sdr_Registry_t,
        name: *const std_String_t,
        sourceTypePriority: *const tf_TokenVector_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodeByNameAndType(
        _this: *mut sdr_Registry_t,
        name: *const std_String_t,
        sourceType: *const tf_Token_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *const ndr_Node_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodesByIdentifier(
        _this: *mut sdr_Registry_t,
        identifier: *const tf_Token_t,
        _result: *mut *mut ndr_NodeConstPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodesByName(
        _this: *mut sdr_Registry_t,
        name: *const std_String_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *mut ndr_NodeConstPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetNodesByFamily(
        _this: *mut sdr_Registry_t,
        family: *const tf_Token_t,
        filter: ::std::os::raw::c_uint,
        _result: *mut *mut ndr_NodeConstPtrVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_Registry_GetAllNodeSourceTypes(
        _this: *const sdr_Registry_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetShaderInput(
        _this: *const sdr_ShaderNode_t,
        inputName: *const tf_Token_t,
        _result: *mut *const sdr_ShaderProperty_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetShaderOutput(
        _this: *const sdr_ShaderNode_t,
        outputName: *const tf_Token_t,
        _result: *mut *const sdr_ShaderProperty_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetAssetIdentifierInputNames(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetDefaultInput(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const sdr_ShaderProperty_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetLabel(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetCategory(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetRole(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetHelp(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetDepartments(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetPages(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetPrimvars(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetAdditionalPrimvarProperties(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetImplementationName(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetPropertyNamesForPage(
        _this: *const sdr_ShaderNode_t,
        pageName: *const std_String_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetAllVstructNames(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_dtor(_this: *mut sdr_ShaderNode_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetIdentifier(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetVersion(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *mut ndr_NdrVersion_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetName(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetFamily(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetContext(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetSourceType(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetResolvedDefinitionURI(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetResolvedImplementationURI(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetSourceCode(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_IsValid(
        _this: *const sdr_ShaderNode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetInfoString(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetInputNames(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetOutputNames(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetInput(
        _this: *const sdr_ShaderNode_t,
        inputName: *const tf_Token_t,
        _result: *mut *const ndr_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetOutput(
        _this: *const sdr_ShaderNode_t,
        outputName: *const tf_Token_t,
        _result: *mut *const ndr_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNode_GetMetadata(
        _this: *const sdr_ShaderNode_t,
        _result: *mut *const ndr_TokenMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_data(
        _this: *mut sdr_ShaderNodeVector_t,
        _result: *mut *mut sdr_ShaderNode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_data_const(
        _this: *const sdr_ShaderNodeVector_t,
        _result: *mut *const sdr_ShaderNode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_empty(
        _this: *const sdr_ShaderNodeVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_size(
        _this: *const sdr_ShaderNodeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_max_size(
        _this: *const sdr_ShaderNodeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_capacity(
        _this: *const sdr_ShaderNodeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_clear(_this: *mut sdr_ShaderNodeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_pop_back(
        _this: *mut sdr_ShaderNodeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_op_index(
        _this: *const sdr_ShaderNodeVector_t,
        __n: usize,
        _result: *mut *const sdr_ShaderNode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_default(
        _result: *mut *mut sdr_ShaderNodeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderNodeVector_dtor(_this: *mut sdr_ShaderNodeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetLabel(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetHelp(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetPage(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetWidget(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetHints(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const ndr_TokenMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetOptions(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const ndr_OptionVec_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetImplementationName(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetVStructMemberOf(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetVStructMemberName(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_IsVStructMember(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_IsVStruct(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetVStructConditionalExpr(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_IsConnectable(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetValidConnectionTypes(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_CanConnectTo(
        _this: *const sdr_ShaderProperty_t,
        other: *const ndr_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetTypeAsSdfType(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const ndr_SdfTypeIndicator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetDefaultValueAsSdfType(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_IsAssetIdentifier(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_IsDefaultInput(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_ctor_00(
        name: *const tf_Token_t,
        type_: *const tf_Token_t,
        defaultValue: *const vt_Value_t,
        isOutput: bool,
        arraySize: ::std::os::raw::c_ulong,
        metadata: *const ndr_TokenMap_t,
        hints: *const ndr_TokenMap_t,
        options: *const ndr_OptionVec_t,
        _result: *mut *mut sdr_ShaderProperty_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_dtor(_this: *mut sdr_ShaderProperty_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetName(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetType(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetDefaultValue(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_IsOutput(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_IsArray(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_IsDynamicArray(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetArraySize(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetInfoString(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sdr_ShaderProperty_GetMetadata(
        _this: *const sdr_ShaderProperty_t,
        _result: *mut *const ndr_TokenMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_String_c_str(
        _this: *const std_String_t,
        _result: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_String_from_char_ptr(
        param00: *const ::std::os::raw::c_char,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_String_dtor(_this: *mut std_String_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_data(
        _this: *mut std_StringVector_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_data_const(
        _this: *const std_StringVector_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_empty(
        _this: *const std_StringVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_size(
        _this: *const std_StringVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_max_size(
        _this: *const std_StringVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_capacity(
        _this: *const std_StringVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_clear(_this: *mut std_StringVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_pop_back(_this: *mut std_StringVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_op_index(
        _this: *const std_StringVector_t,
        __n: usize,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_default(_result: *mut *mut std_StringVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringVector_dtor(_this: *mut std_StringVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPair_dtor(_this: *mut std_StringPair_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_data(
        _this: *mut std_StringPairVector_t,
        _result: *mut *mut std_StringPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_data_const(
        _this: *const std_StringPairVector_t,
        _result: *mut *const std_StringPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_empty(
        _this: *const std_StringPairVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_size(
        _this: *const std_StringPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_max_size(
        _this: *const std_StringPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_capacity(
        _this: *const std_StringPairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_clear(_this: *mut std_StringPairVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_pop_back(
        _this: *mut std_StringPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_op_index(
        _this: *const std_StringPairVector_t,
        __n: usize,
        _result: *mut *const std_StringPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_default(
        _result: *mut *mut std_StringPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringPairVector_dtor(_this: *mut std_StringPairVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringSet_dtor(_this: *mut std_StringSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_StringUnorderedSet_dtor(
        _this: *mut std_StringUnorderedSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_data(
        _this: *mut std_DoubleVector_t,
        _result: *mut *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_data_const(
        _this: *const std_DoubleVector_t,
        _result: *mut *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_empty(
        _this: *const std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_size(
        _this: *const std_DoubleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_max_size(
        _this: *const std_DoubleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_capacity(
        _this: *const std_DoubleVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_clear(_this: *mut std_DoubleVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_pop_back(_this: *mut std_DoubleVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_op_index(
        _this: *const std_DoubleVector_t,
        __n: usize,
        _result: *mut *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_default(_result: *mut *mut std_DoubleVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleVector_dtor(_this: *mut std_DoubleVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn std_DoubleSet_dtor(_this: *mut std_DoubleSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Enum_GetValueAsInt(
        _this: *const tf_Enum_t,
        _result: *mut *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Enum_GetName(
        val: *mut tf_Enum_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Enum_GetDisplayName(
        val: *mut tf_Enum_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Enum_GetFullName(
        val: *mut tf_Enum_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Enum_new(_result: *mut *mut tf_Enum_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Enum_dtor(_this: *mut tf_Enum_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Token_GetText(
        _this: *const tf_Token_t,
        _result: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Token_default(_result: *mut *mut tf_Token_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Token_new(
        param00: *const ::std::os::raw::c_char,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Token_dtor(_this: *mut tf_Token_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetUnknownType(_result: *mut *const tf_Type_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_op_eq(
        _this: *const tf_Type_t,
        t: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_op_neq(
        _this: *const tf_Type_t,
        t: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_op_lt(
        _this: *const tf_Type_t,
        t: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_op_gt(
        _this: *const tf_Type_t,
        t: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_op_lte(
        _this: *const tf_Type_t,
        t: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_op_gte(
        _this: *const tf_Type_t,
        t: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_FindByName(
        name: *const std_String_t,
        _result: *mut *const tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_FindDerivedByName(
        _this: *const tf_Type_t,
        name: *const std_String_t,
        _result: *mut *const tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetRoot(_result: *mut *const tf_Type_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetTypeName(
        _this: *const tf_Type_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetAliases(
        _this: *const tf_Type_t,
        derivedType: *mut tf_Type_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetBaseTypes(
        _this: *const tf_Type_t,
        _result: *mut *mut tf_TypeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetNBaseTypes(
        _this: *const tf_Type_t,
        out: *mut tf_Type_t,
        maxBases: usize,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetDirectlyDerivedTypes(
        _this: *const tf_Type_t,
        _result: *mut *mut tf_TypeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetCanonicalType(
        _this: *const tf_Type_t,
        _result: *mut *const tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetAllDerivedTypes(
        _this: *const tf_Type_t,
        result: *mut tf_TypeSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetAllAncestorTypes(
        _this: *const tf_Type_t,
        result: *mut tf_TypeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_IsA(
        _this: *const tf_Type_t,
        queryType: *mut tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_IsUnknown(_this: *const tf_Type_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_op_not(_this: *const tf_Type_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_IsRoot(_this: *const tf_Type_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_IsEnumType(_this: *const tf_Type_t, _result: *mut bool)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_IsPlainOldDataType(
        _this: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_GetSizeof(_this: *const tf_Type_t, _result: *mut usize)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_Declare(
        typeName: *const std_String_t,
        _result: *mut *const tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_default(_result: *mut *mut tf_Type_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_Type_dtor(_this: *mut tf_Type_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeSet_dtor(_this: *mut tf_TypeSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_data(
        _this: *mut tf_TypeVector_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_data_const(
        _this: *const tf_TypeVector_t,
        _result: *mut *const tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_empty(
        _this: *const tf_TypeVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_size(
        _this: *const tf_TypeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_max_size(
        _this: *const tf_TypeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_capacity(
        _this: *const tf_TypeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_clear(_this: *mut tf_TypeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_pop_back(_this: *mut tf_TypeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_op_index(
        _this: *const tf_TypeVector_t,
        __n: usize,
        _result: *mut *const tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_default(_result: *mut *mut tf_TypeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TypeVector_dtor(_this: *mut tf_TypeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_data(
        _this: *mut tf_TokenVector_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_data_const(
        _this: *const tf_TokenVector_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_empty(
        _this: *const tf_TokenVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_size(
        _this: *const tf_TokenVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_max_size(
        _this: *const tf_TokenVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_capacity(
        _this: *const tf_TokenVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_clear(_this: *mut tf_TokenVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_pop_back(_this: *mut tf_TokenVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_op_index(
        _this: *const tf_TokenVector_t,
        __n: usize,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_default(_result: *mut *mut tf_TokenVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenVector_dtor(_this: *mut tf_TokenVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenSet_dtor(_this: *mut tf_TokenSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tf_TokenTokenPair_dtor(_this: *mut tf_TokenTokenPair_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_CreateQueries(
        prim: *const usd_Prim_t,
        attrNames: *const tf_TokenVector_t,
        _result: *mut *mut usd_AttributeQueryVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_GetAttribute(
        _this: *const usd_AttributeQuery_t,
        _result: *mut *const usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_IsValid(
        _this: *const usd_AttributeQuery_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_Get_value(
        _this: *const usd_AttributeQuery_t,
        value: *mut vt_Value_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_GetTimeSamples(
        _this: *const usd_AttributeQuery_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_GetTimeSamplesInInterval(
        _this: *const usd_AttributeQuery_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_GetNumTimeSamples(
        _this: *const usd_AttributeQuery_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_GetBracketingTimeSamples(
        _this: *const usd_AttributeQuery_t,
        desiredTime: f64,
        lower: *mut f64,
        upper: *mut f64,
        hasTimeSamples: *mut bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_HasValue(
        _this: *const usd_AttributeQuery_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_HasAuthoredValueOpinion(
        _this: *const usd_AttributeQuery_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_HasAuthoredValue(
        _this: *const usd_AttributeQuery_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_HasFallbackValue(
        _this: *const usd_AttributeQuery_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_ValueMightBeTimeVarying(
        _this: *const usd_AttributeQuery_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_GetUnionedTimeSamples(
        attrQueries: *const usd_AttributeQueryVector_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_GetUnionedTimeSamplesInInterval(
        attrQueries: *const usd_AttributeQueryVector_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_default(
        _result: *mut *mut usd_AttributeQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_from_prim_and_attribute_name(
        param00: *const usd_Prim_t,
        param01: *const tf_Token_t,
        _result: *mut *mut usd_AttributeQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_from_attribute_and_resolve_target(
        param00: *const usd_Attribute_t,
        param01: *const usd_ResolveTarget_t,
        _result: *mut *mut usd_AttributeQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQuery_dtor(_this: *mut usd_AttributeQuery_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_data(
        _this: *mut usd_AttributeQueryVector_t,
        _result: *mut *mut usd_AttributeQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_data_const(
        _this: *const usd_AttributeQueryVector_t,
        _result: *mut *const usd_AttributeQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_empty(
        _this: *const usd_AttributeQueryVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_size(
        _this: *const usd_AttributeQueryVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_max_size(
        _this: *const usd_AttributeQueryVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_capacity(
        _this: *const usd_AttributeQueryVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_clear(
        _this: *mut usd_AttributeQueryVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_pop_back(
        _this: *mut usd_AttributeQueryVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_op_index(
        _this: *const usd_AttributeQueryVector_t,
        __n: usize,
        _result: *mut *const usd_AttributeQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_default(
        _result: *mut *mut usd_AttributeQueryVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeQueryVector_dtor(
        _this: *mut usd_AttributeQueryVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_Get(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_ClipsAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClips(
        _this: *const usd_ClipsAPI_t,
        clips: *mut vt_Dictionary_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClips(
        _this: *mut usd_ClipsAPI_t,
        clips: *const vt_Dictionary_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipSets(
        _this: *const usd_ClipsAPI_t,
        clipSets: *mut sdf_StringListOp_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipSets(
        _this: *mut usd_ClipsAPI_t,
        clipSets: *const sdf_StringListOp_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_ComputeClipAssetPaths_00(
        _this: *const usd_ClipsAPI_t,
        clipSet: *const std_String_t,
        _result: *mut *mut sdf_AssetPathArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_ComputeClipAssetPaths_01(
        _this: *const usd_ClipsAPI_t,
        _result: *mut *mut sdf_AssetPathArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipAssetPaths_00(
        _this: *const usd_ClipsAPI_t,
        assetPaths: *mut sdf_AssetPathArray_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipAssetPaths_01(
        _this: *const usd_ClipsAPI_t,
        assetPaths: *mut sdf_AssetPathArray_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipAssetPaths_00(
        _this: *mut usd_ClipsAPI_t,
        assetPaths: *const sdf_AssetPathArray_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipAssetPaths_01(
        _this: *mut usd_ClipsAPI_t,
        assetPaths: *const sdf_AssetPathArray_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipPrimPath_00(
        _this: *const usd_ClipsAPI_t,
        primPath: *mut std_String_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipPrimPath_01(
        _this: *const usd_ClipsAPI_t,
        primPath: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipPrimPath_00(
        _this: *mut usd_ClipsAPI_t,
        primPath: *const std_String_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipPrimPath_01(
        _this: *mut usd_ClipsAPI_t,
        primPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipActive_00(
        _this: *const usd_ClipsAPI_t,
        activeClips: *mut gf_Vec2dArray_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipActive_01(
        _this: *const usd_ClipsAPI_t,
        activeClips: *mut gf_Vec2dArray_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipActive_00(
        _this: *mut usd_ClipsAPI_t,
        activeClips: *const gf_Vec2dArray_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipActive_01(
        _this: *mut usd_ClipsAPI_t,
        activeClips: *const gf_Vec2dArray_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTimes_00(
        _this: *const usd_ClipsAPI_t,
        clipTimes: *mut gf_Vec2dArray_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTimes_01(
        _this: *const usd_ClipsAPI_t,
        clipTimes: *mut gf_Vec2dArray_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTimes_00(
        _this: *mut usd_ClipsAPI_t,
        clipTimes: *const gf_Vec2dArray_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTimes_01(
        _this: *mut usd_ClipsAPI_t,
        clipTimes: *const gf_Vec2dArray_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipManifestAssetPath_00(
        _this: *const usd_ClipsAPI_t,
        manifestAssetPath: *mut sdf_AssetPath_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipManifestAssetPath_01(
        _this: *const usd_ClipsAPI_t,
        manifestAssetPath: *mut sdf_AssetPath_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipManifestAssetPath_00(
        _this: *mut usd_ClipsAPI_t,
        manifestAssetPath: *const sdf_AssetPath_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipManifestAssetPath_01(
        _this: *mut usd_ClipsAPI_t,
        manifestAssetPath: *const sdf_AssetPath_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GenerateClipManifest_00(
        _this: *const usd_ClipsAPI_t,
        clipSet: *const std_String_t,
        writeBlocksForClipsWithMissingValues: bool,
        _result: *mut *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GenerateClipManifest_01(
        _this: *const usd_ClipsAPI_t,
        writeBlocksForClipsWithMissingValues: bool,
        _result: *mut *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GenerateClipManifestFromLayers(
        clipLayers: *const sdf_LayerHandleVector_t,
        clipPrimPath: *const sdf_Path_t,
        _result: *mut *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetInterpolateMissingClipValues_00(
        _this: *const usd_ClipsAPI_t,
        interpolate: *mut bool,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetInterpolateMissingClipValues_01(
        _this: *const usd_ClipsAPI_t,
        interpolate: *mut bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetInterpolateMissingClipValues_00(
        _this: *mut usd_ClipsAPI_t,
        interpolate: bool,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetInterpolateMissingClipValues_01(
        _this: *mut usd_ClipsAPI_t,
        interpolate: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateAssetPath_00(
        _this: *const usd_ClipsAPI_t,
        clipTemplateAssetPath: *mut std_String_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateAssetPath_01(
        _this: *const usd_ClipsAPI_t,
        clipTemplateAssetPath: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateAssetPath_00(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateAssetPath: *const std_String_t,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateAssetPath_01(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateAssetPath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateStride_00(
        _this: *const usd_ClipsAPI_t,
        clipTemplateStride: *mut f64,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateStride_01(
        _this: *const usd_ClipsAPI_t,
        clipTemplateStride: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateActiveOffset_00(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateActiveOffset: f64,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateActiveOffset_01(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateActiveOffset: f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateActiveOffset_00(
        _this: *const usd_ClipsAPI_t,
        clipTemplateActiveOffset: *mut f64,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateActiveOffset_01(
        _this: *const usd_ClipsAPI_t,
        clipTemplateActiveOffset: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateStride_00(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateStride: f64,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateStride_01(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateStride: f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateStartTime_00(
        _this: *const usd_ClipsAPI_t,
        clipTemplateStartTime: *mut f64,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateStartTime_01(
        _this: *const usd_ClipsAPI_t,
        clipTemplateStartTime: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateStartTime_00(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateStartTime: f64,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateStartTime_01(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateStartTime: f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateEndTime_00(
        _this: *const usd_ClipsAPI_t,
        clipTemplateEndTime: *mut f64,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetClipTemplateEndTime_01(
        _this: *const usd_ClipsAPI_t,
        clipTemplateEndTime: *mut f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateEndTime_00(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateEndTime: f64,
        clipSet: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_SetClipTemplateEndTime_01(
        _this: *mut usd_ClipsAPI_t,
        clipTemplateEndTime: f64,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_from_prim(
        prim: *const usd_Prim_t,
        _result: *mut *mut usd_ClipsAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_from_schema(
        schemaObj: *const usd_SchemaBase_t,
        _result: *mut *mut usd_ClipsAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_dtor(_this: *mut usd_ClipsAPI_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_IsConcrete(
        _this: *const usd_ClipsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_IsTyped(
        _this: *const usd_ClipsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_IsAPISchema(
        _this: *const usd_ClipsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_IsAppliedAPISchema(
        _this: *const usd_ClipsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_IsMultipleApplyAPISchema(
        _this: *const usd_ClipsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetSchemaKind(
        _this: *const usd_ClipsAPI_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetPrim(
        _this: *const usd_ClipsAPI_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetPath(
        _this: *const usd_ClipsAPI_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_GetSchemaClassPrimDefinition(
        _this: *const usd_ClipsAPI_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ClipsAPI_op_bool(
        _this: *const usd_ClipsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetSchemaAttributeNames_00(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetSchemaAttributeNames_01(
        includeInherited: bool,
        instanceName: *const tf_Token_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetName(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_Get_from_path(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_Get(
        prim: *const usd_Prim_t,
        name: *const tf_Token_t,
        _result: *mut *mut usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetAll(
        prim: *const usd_Prim_t,
        _result: *mut *mut usd_CollectionAPIVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_IsSchemaPropertyBaseName(
        baseName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_IsCollectionAPIPath(
        path: *const sdf_Path_t,
        name: *mut tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_CanApply(
        prim: *const usd_Prim_t,
        name: *const tf_Token_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_Apply(
        prim: *const usd_Prim_t,
        name: *const tf_Token_t,
        _result: *mut *mut usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetExpansionRuleAttr(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_CreateExpansionRuleAttr(
        _this: *const usd_CollectionAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetIncludeRootAttr(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_CreateIncludeRootAttr(
        _this: *const usd_CollectionAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetCollectionAttr(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_CreateCollectionAttr(
        _this: *const usd_CollectionAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetIncludesRel(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_CreateIncludesRel(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetExcludesRel(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_CreateExcludesRel(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetCollection_from_path(
        stage: *const usd_StageWeakPtr_t,
        collectionPath: *const sdf_Path_t,
        _result: *mut *mut usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetCollection(
        prim: *const usd_Prim_t,
        name: *const tf_Token_t,
        _result: *mut *mut usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetAllCollections(
        prim: *const usd_Prim_t,
        _result: *mut *mut usd_CollectionAPIVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetCollectionPath(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetNamedCollectionPath(
        prim: *const usd_Prim_t,
        collectionName: *const tf_Token_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_ComputeMembershipQuery_00(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut usd_CollectionMembershipQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_ComputeMembershipQuery_01(
        _this: *const usd_CollectionAPI_t,
        query: *mut usd_CollectionMembershipQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_HasNoIncludedPaths(
        _this: *const usd_CollectionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_ComputeIncludedObjects(
        query: *const usd_CollectionMembershipQuery_t,
        stage: *const usd_StageWeakPtr_t,
        pred: *const usd_PrimFlagsPredicate_t,
        _result: *mut *mut usd_ObjectSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_ComputeIncludedPaths(
        query: *const usd_CollectionMembershipQuery_t,
        stage: *const usd_StageWeakPtr_t,
        pred: *const usd_PrimFlagsPredicate_t,
        _result: *mut *mut sdf_PathSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_IncludePath(
        _this: *const usd_CollectionAPI_t,
        pathToInclude: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_ExcludePath(
        _this: *const usd_CollectionAPI_t,
        pathToExclude: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_Validate(
        _this: *const usd_CollectionAPI_t,
        reason: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_ResetCollection(
        _this: *const usd_CollectionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_BlockCollection(
        _this: *const usd_CollectionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_CanContainPropertyName(
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_ctor_00(
        prim: *const usd_Prim_t,
        name: *const tf_Token_t,
        _result: *mut *mut usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_ctor_01(
        schemaObj: *const usd_SchemaBase_t,
        name: *const tf_Token_t,
        _result: *mut *mut usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_dtor(_this: *mut usd_CollectionAPI_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_IsConcrete(
        _this: *const usd_CollectionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_IsTyped(
        _this: *const usd_CollectionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_IsAPISchema(
        _this: *const usd_CollectionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_IsAppliedAPISchema(
        _this: *const usd_CollectionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_IsMultipleApplyAPISchema(
        _this: *const usd_CollectionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetSchemaKind(
        _this: *const usd_CollectionAPI_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetPrim(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetPath(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_GetSchemaClassPrimDefinition(
        _this: *const usd_CollectionAPI_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPI_op_bool(
        _this: *const usd_CollectionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_data(
        _this: *mut usd_CollectionAPIVector_t,
        _result: *mut *mut usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_data_const(
        _this: *const usd_CollectionAPIVector_t,
        _result: *mut *const usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_empty(
        _this: *const usd_CollectionAPIVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_size(
        _this: *const usd_CollectionAPIVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_max_size(
        _this: *const usd_CollectionAPIVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_capacity(
        _this: *const usd_CollectionAPIVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_clear(
        _this: *mut usd_CollectionAPIVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_pop_back(
        _this: *mut usd_CollectionAPIVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_op_index(
        _this: *const usd_CollectionAPIVector_t,
        __n: usize,
        _result: *mut *const usd_CollectionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_default(
        _result: *mut *mut usd_CollectionAPIVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionAPIVector_dtor(
        _this: *mut usd_CollectionAPIVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_IsPathIncluded_00(
        _this: *const usd_CollectionMembershipQuery_t,
        path: *const sdf_Path_t,
        expansionRule: *mut tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_IsPathIncluded_01(
        _this: *const usd_CollectionMembershipQuery_t,
        path: *const sdf_Path_t,
        parentExpansionRule: *const tf_Token_t,
        expansionRule: *mut tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_HasExcludes(
        _this: *const usd_CollectionMembershipQuery_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_op_eq(
        _this: *const usd_CollectionMembershipQuery_t,
        rhs: *const usd_CollectionMembershipQuery_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_op_neq(
        _this: *const usd_CollectionMembershipQuery_t,
        rhs: *const usd_CollectionMembershipQuery_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_GetHash(
        _this: *const usd_CollectionMembershipQuery_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_GetAsPathExpansionRuleMap(
        _this: *const usd_CollectionMembershipQuery_t,
        _result: *mut *const usd_CollectionMembershipQueryPathExpansionRuleMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_GetIncludedCollections(
        _this: *const usd_CollectionMembershipQuery_t,
        _result: *mut *const sdf_PathSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_default(
        _result: *mut *mut usd_CollectionMembershipQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQuery_dtor(
        _this: *mut usd_CollectionMembershipQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQueryHash_default(
        _result: *mut *mut usd_CollectionMembershipQueryHash_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQueryHash_dtor(
        _this: *mut usd_CollectionMembershipQueryHash_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQueryPathExpansionRuleMap_default(
        _result: *mut *mut usd_CollectionMembershipQueryPathExpansionRuleMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CollectionMembershipQueryPathExpansionRuleMap_dtor(
        _this: *mut usd_CollectionMembershipQueryPathExpansionRuleMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_MetadataValueMap_at_const(
        _this: *const usd_MetadataValueMap_t,
        __k: *const tf_Token_t,
        _result: *mut *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_MetadataValueMap_at(
        _this: *mut usd_MetadataValueMap_t,
        __k: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_MetadataValueMap_dtor(_this: *mut usd_MetadataValueMap_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfo_Open(
        fileName: *const std_String_t,
        _result: *mut *mut usd_CrateInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfo_GetSummaryStats(
        _this: *const usd_CrateInfo_t,
        _result: *mut usd_CrateInfoSummaryStats_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfo_GetSections(
        _this: *const usd_CrateInfo_t,
        _result: *mut *mut usd_CratreInfoSectionVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfo_GetFileVersion(
        _this: *const usd_CrateInfo_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfo_GetSoftwareVersion(
        _this: *const usd_CrateInfo_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfo_op_bool(
        _this: *const usd_CrateInfo_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfo_dtor(_this: *mut usd_CrateInfo_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfoSection_default(
        _result: *mut *mut usd_CrateInfoSection_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfoSection_ctor_01(
        name: *const std_String_t,
        start: ::std::os::raw::c_long,
        size: ::std::os::raw::c_long,
        _result: *mut *mut usd_CrateInfoSection_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CrateInfoSection_dtor(_this: *mut usd_CrateInfoSection_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_data(
        _this: *mut usd_CratreInfoSectionVector_t,
        _result: *mut *mut usd_CrateInfoSection_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_data_const(
        _this: *const usd_CratreInfoSectionVector_t,
        _result: *mut *const usd_CrateInfoSection_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_empty(
        _this: *const usd_CratreInfoSectionVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_size(
        _this: *const usd_CratreInfoSectionVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_max_size(
        _this: *const usd_CratreInfoSectionVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_capacity(
        _this: *const usd_CratreInfoSectionVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_clear(
        _this: *mut usd_CratreInfoSectionVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_pop_back(
        _this: *mut usd_CratreInfoSectionVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_op_index(
        _this: *const usd_CratreInfoSectionVector_t,
        __n: usize,
        _result: *mut *const usd_CrateInfoSection_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_default(
        _result: *mut *mut usd_CratreInfoSectionVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_CratreInfoSectionVector_dtor(
        _this: *mut usd_CratreInfoSectionVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_op_eq(
        _this: *const usd_EditTarget_t,
        other: *const usd_EditTarget_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_IsNull(
        _this: *const usd_EditTarget_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_IsValid(
        _this: *const usd_EditTarget_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_GetLayer(
        _this: *const usd_EditTarget_t,
        _result: *mut *const sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_MapToSpecPath(
        _this: *const usd_EditTarget_t,
        scenePath: *const sdf_Path_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_GetPrimSpecForScenePath(
        _this: *const usd_EditTarget_t,
        scenePath: *const sdf_Path_t,
        _result: *mut *mut sdf_PrimSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_GetPropertySpecForScenePath(
        _this: *const usd_EditTarget_t,
        scenePath: *const sdf_Path_t,
        _result: *mut *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_GetSpecForScenePath(
        _this: *const usd_EditTarget_t,
        scenePath: *const sdf_Path_t,
        _result: *mut *mut sdf_SpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_GetMapFunction(
        _this: *const usd_EditTarget_t,
        _result: *mut *const pcp_MapFunction_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_ComposeOver(
        _this: *const usd_EditTarget_t,
        weaker: *const usd_EditTarget_t,
        _result: *mut *mut usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_ForLocalDirectVariant(
        layer: *const sdf_LayerHandle_t,
        varSelPath: *const sdf_Path_t,
        _result: *mut *mut usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_default(_result: *mut *mut usd_EditTarget_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_from_layer(
        param00: *mut sdf_LayerHandle_t,
        param01: *mut sdf_LayerOffset_t,
        _result: *mut *mut usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_from_layer_and_node(
        param00: *mut sdf_LayerHandle_t,
        param01: *mut pcp_NodeRef_t,
        _result: *mut *mut usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_EditTarget_dtor(_this: *mut usd_EditTarget_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Inherits_AddInherit(
        _this: *mut usd_Inherits_t,
        primPath: *const sdf_Path_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Inherits_RemoveInherit(
        _this: *mut usd_Inherits_t,
        primPath: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Inherits_ClearInherits(
        _this: *mut usd_Inherits_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Inherits_SetInherits(
        _this: *mut usd_Inherits_t,
        items: *const sdf_PathVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Inherits_GetAllDirectInherits(
        _this: *const usd_Inherits_t,
        _result: *mut *mut sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Inherits_GetPrim(
        _this: *const usd_Inherits_t,
        _result: *mut *const usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Inherits_op_bool(
        _this: *mut usd_Inherits_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Inherits_dtor(_this: *mut usd_Inherits_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_Get(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_ModelAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetKind(
        _this: *const usd_ModelAPI_t,
        kind: *mut tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_SetKind(
        _this: *const usd_ModelAPI_t,
        kind: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_IsKind(
        _this: *const usd_ModelAPI_t,
        baseKind: *const tf_Token_t,
        validation: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_IsModel(
        _this: *const usd_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_IsGroup(
        _this: *const usd_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetAssetIdentifier(
        _this: *const usd_ModelAPI_t,
        identifier: *mut sdf_AssetPath_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_SetAssetIdentifier(
        _this: *const usd_ModelAPI_t,
        identifier: *const sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetAssetName(
        _this: *const usd_ModelAPI_t,
        assetName: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_SetAssetName(
        _this: *const usd_ModelAPI_t,
        assetName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetAssetVersion(
        _this: *const usd_ModelAPI_t,
        version: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_SetAssetVersion(
        _this: *const usd_ModelAPI_t,
        version: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetPayloadAssetDependencies(
        _this: *const usd_ModelAPI_t,
        assetDeps: *mut sdf_AssetPathArray_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_SetPayloadAssetDependencies(
        _this: *const usd_ModelAPI_t,
        assetDeps: *const sdf_AssetPathArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetAssetInfo(
        _this: *const usd_ModelAPI_t,
        info: *mut vt_Dictionary_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_SetAssetInfo(
        _this: *const usd_ModelAPI_t,
        info: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_from_prim(
        prim: *const usd_Prim_t,
        _result: *mut *mut usd_ModelAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_from_schema(
        schemaObj: *const usd_SchemaBase_t,
        _result: *mut *mut usd_ModelAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_dtor(_this: *mut usd_ModelAPI_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_IsConcrete(
        _this: *const usd_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_IsTyped(
        _this: *const usd_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_IsAPISchema(
        _this: *const usd_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_IsAppliedAPISchema(
        _this: *const usd_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_IsMultipleApplyAPISchema(
        _this: *const usd_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetSchemaKind(
        _this: *const usd_ModelAPI_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetPrim(
        _this: *const usd_ModelAPI_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetPath(
        _this: *const usd_ModelAPI_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_GetSchemaClassPrimDefinition(
        _this: *const usd_ModelAPI_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ModelAPI_op_bool(
        _this: *const usd_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Notice_dtor(_this: *mut usd_Notice_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageNotice_GetStage(
        _this: *const usd_StageNotice_t,
        _result: *mut *const usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageNotice_ctor_00(
        stage: *const usd_StageWeakPtr_t,
        _result: *mut *mut usd_StageNotice_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageNotice_dtor(_this: *mut usd_StageNotice_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageContentsChanged_ctor_00(
        stage: *const usd_StageWeakPtr_t,
        _result: *mut *mut usd_StageContentsChanged_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageContentsChanged_dtor(
        _this: *mut usd_StageContentsChanged_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageContentsChanged_GetStage(
        _this: *const usd_StageContentsChanged_t,
        _result: *mut *const usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_AffectedObject(
        _this: *const usd_ObjectsChanged_t,
        obj: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_ResyncedObject(
        _this: *const usd_ObjectsChanged_t,
        obj: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_ChangedInfoOnly(
        _this: *const usd_ObjectsChanged_t,
        obj: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_GetResyncedPaths(
        _this: *const usd_ObjectsChanged_t,
        _result: *mut *mut usd_ObjectsChangedPathRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_GetChangedInfoOnlyPaths(
        _this: *const usd_ObjectsChanged_t,
        _result: *mut *mut usd_ObjectsChangedPathRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_GetChangedFields_00(
        _this: *const usd_ObjectsChanged_t,
        obj: *const usd_Object_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_GetChangedFields_01(
        _this: *const usd_ObjectsChanged_t,
        path: *const sdf_Path_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_HasChangedFields_00(
        _this: *const usd_ObjectsChanged_t,
        obj: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_HasChangedFields_01(
        _this: *const usd_ObjectsChanged_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_dtor(_this: *mut usd_ObjectsChanged_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChanged_GetStage(
        _this: *const usd_ObjectsChanged_t,
        _result: *mut *const usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRange_empty(
        _this: *const usd_ObjectsChangedPathRange_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRange_size(
        _this: *const usd_ObjectsChangedPathRange_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRange_begin(
        _this: *const usd_ObjectsChangedPathRange_t,
        _result: *mut *mut usd_ObjectsChangedPathRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRange_cbegin(
        _this: *const usd_ObjectsChangedPathRange_t,
        _result: *mut *mut usd_ObjectsChangedPathRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRange_end(
        _this: *const usd_ObjectsChangedPathRange_t,
        _result: *mut *mut usd_ObjectsChangedPathRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRange_cend(
        _this: *const usd_ObjectsChangedPathRange_t,
        _result: *mut *mut usd_ObjectsChangedPathRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRange_find(
        _this: *const usd_ObjectsChangedPathRange_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_ObjectsChangedPathRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRange_default(
        _result: *mut *mut usd_ObjectsChangedPathRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRange_dtor(
        _this: *mut usd_ObjectsChangedPathRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRangeIterator_GetChangedFields(
        _this: *const usd_ObjectsChangedPathRangeIterator_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRangeIterator_HasChangedFields(
        _this: *const usd_ObjectsChangedPathRangeIterator_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRangeIterator_default(
        _result: *mut *mut usd_ObjectsChangedPathRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectsChangedPathRangeIterator_dtor(
        _this: *mut usd_ObjectsChangedPathRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageEditTargetChanged_ctor_00(
        stage: *const usd_StageWeakPtr_t,
        _result: *mut *mut usd_StageEditTargetChanged_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageEditTargetChanged_dtor(
        _this: *mut usd_StageEditTargetChanged_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageEditTargetChanged_GetStage(
        _this: *const usd_StageEditTargetChanged_t,
        _result: *mut *const usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_LayerMutingChanged_GetMutedLayers(
        _this: *const usd_LayerMutingChanged_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_LayerMutingChanged_GetUnmutedLayers(
        _this: *const usd_LayerMutingChanged_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_LayerMutingChanged_ctor_00(
        stage: *const usd_StageWeakPtr_t,
        mutedLayers: *const std_StringVector_t,
        unmutedLayers: *const std_StringVector_t,
        _result: *mut *mut usd_LayerMutingChanged_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_LayerMutingChanged_dtor(
        _this: *mut usd_LayerMutingChanged_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_LayerMutingChanged_GetStage(
        _this: *const usd_LayerMutingChanged_t,
        _result: *mut *const usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetVariability(
        _this: *const usd_Attribute_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetVariability(
        _this: *const usd_Attribute_t,
        variability: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetTypeName(
        _this: *const usd_Attribute_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetTypeName(
        _this: *const usd_Attribute_t,
        typeName: *const sdf_ValueTypeName_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetRoleName(
        _this: *const usd_Attribute_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_AddConnection(
        _this: *const usd_Attribute_t,
        source: *const sdf_Path_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_RemoveConnection(
        _this: *const usd_Attribute_t,
        source: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetConnections(
        _this: *const usd_Attribute_t,
        sources: *const sdf_PathVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearConnections(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetConnections(
        _this: *const usd_Attribute_t,
        sources: *mut sdf_PathVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredConnections(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetColorSpace(
        _this: *const usd_Attribute_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetColorSpace(
        _this: *const usd_Attribute_t,
        colorSpace: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasColorSpace(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearColorSpace(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetTimeSamples(
        _this: *const usd_Attribute_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetTimeSamplesInInterval(
        _this: *const usd_Attribute_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetNumTimeSamples(
        _this: *const usd_Attribute_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetBracketingTimeSamples(
        _this: *const usd_Attribute_t,
        desiredTime: f64,
        lower: *mut f64,
        upper: *mut f64,
        hasTimeSamples: *mut bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasValue(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredValueOpinion(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredValue(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasFallbackValue(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ValueMightBeTimeVarying(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_Get(
        _this: *const usd_Attribute_t,
        value: *mut vt_Value_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetResolveInfo_at_time(
        _this: *const usd_Attribute_t,
        time: usd_TimeCode_t,
        _result: *mut *mut usd_ResolveInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetResolveInfo(
        _this: *const usd_Attribute_t,
        _result: *mut *mut usd_ResolveInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_Set(
        _this: *const usd_Attribute_t,
        value: *const vt_Value_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_Clear(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearAtTime(
        _this: *const usd_Attribute_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearDefault(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_Block(_this: *const usd_Attribute_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetUnionedTimeSamples(
        attrs: *const usd_AttributeVector_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetUnionedTimeSamplesInInterval(
        attrs: *const usd_AttributeVector_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_default(_result: *mut *mut usd_Attribute_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_dtor(_this: *mut usd_Attribute_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_Is_Attribute(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_Is_Relationship(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_Is_Property(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_Is_Prim(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_As_Attribute(
        _this: *const usd_Attribute_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_As_Relationship(
        _this: *const usd_Attribute_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_As_Property(
        _this: *const usd_Attribute_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_As_Prim(
        _this: *const usd_Attribute_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetMetadata_value(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetMetadata_value(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearMetadata(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasMetadata(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredMetadata(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetMetadataByDictKey_value(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetMetadataByDictKey_value(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearMetadataByDictKey(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasMetadataDictKey(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredMetadataDictKey(
        _this: *const usd_Attribute_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetAllMetadata(
        _this: *const usd_Attribute_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetAllAuthoredMetadata(
        _this: *const usd_Attribute_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_IsHidden(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetHidden(
        _this: *const usd_Attribute_t,
        hidden: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearHidden(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredHidden(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetCustomData(
        _this: *const usd_Attribute_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetCustomDataByKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetCustomData(
        _this: *const usd_Attribute_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetCustomDataByKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearCustomData(_this: *const usd_Attribute_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearCustomDataByKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasCustomData(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasCustomDataKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredCustomData(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredCustomDataKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetAssetInfo(
        _this: *const usd_Attribute_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetAssetInfoByKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetAssetInfo(
        _this: *const usd_Attribute_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetAssetInfoByKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearAssetInfo(_this: *const usd_Attribute_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearAssetInfoByKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAssetInfo(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAssetInfoKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredAssetInfo(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredAssetInfoKey(
        _this: *const usd_Attribute_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetDocumentation(
        _this: *const usd_Attribute_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetDocumentation(
        _this: *const usd_Attribute_t,
        doc: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearDocumentation(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredDocumentation(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetDisplayName(
        _this: *const usd_Attribute_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetDisplayName(
        _this: *const usd_Attribute_t,
        name: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearDisplayName(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredDisplayName(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_IsValid(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetStage(
        _this: *const usd_Attribute_t,
        _result: *mut *mut usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetPath(
        _this: *const usd_Attribute_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetPrimPath(
        _this: *const usd_Attribute_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetPrim(
        _this: *const usd_Attribute_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetName(
        _this: *const usd_Attribute_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetDescription(
        _this: *const usd_Attribute_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetPropertyStack(
        _this: *const usd_Attribute_t,
        time: usd_TimeCode_t,
        _result: *mut *mut sdf_PropertySpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetPropertyStackWithLayerOffsets(
        _this: *const usd_Attribute_t,
        time: usd_TimeCode_t,
        _result: *mut *mut sdf_PropertySpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetBaseName(
        _this: *const usd_Attribute_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetNamespace(
        _this: *const usd_Attribute_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SplitName(
        _this: *const usd_Attribute_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetDisplayGroup(
        _this: *const usd_Attribute_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetDisplayGroup(
        _this: *const usd_Attribute_t,
        displayGroup: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_ClearDisplayGroup(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_HasAuthoredDisplayGroup(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_GetNestedDisplayGroups(
        _this: *const usd_Attribute_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetNestedDisplayGroups(
        _this: *const usd_Attribute_t,
        nestedGroups: *const std_StringVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_IsCustom(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_SetCustom(
        _this: *const usd_Attribute_t,
        isCustom: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_IsDefined(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_IsAuthored(
        _this: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_IsAuthoredAt(
        _this: *const usd_Attribute_t,
        editTarget: *const usd_EditTarget_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_FlattenTo_prim(
        _this: *const usd_Attribute_t,
        parent: *const usd_Prim_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_FlattenTo_named_property(
        _this: *const usd_Attribute_t,
        parent: *const usd_Prim_t,
        propName: *const tf_Token_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Attribute_FlattenTo_property(
        _this: *const usd_Attribute_t,
        property: *const usd_Property_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_data(
        _this: *mut usd_AttributeVector_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_data_const(
        _this: *const usd_AttributeVector_t,
        _result: *mut *const usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_empty(
        _this: *const usd_AttributeVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_size(
        _this: *const usd_AttributeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_max_size(
        _this: *const usd_AttributeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_capacity(
        _this: *const usd_AttributeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_clear(_this: *mut usd_AttributeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_pop_back(_this: *mut usd_AttributeVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_op_index(
        _this: *const usd_AttributeVector_t,
        __n: usize,
        _result: *mut *const usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_default(
        _result: *mut *mut usd_AttributeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_AttributeVector_dtor(_this: *mut usd_AttributeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_Is_Attribute(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_Is_Relationship(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_Is_Property(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_Is_Prim(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_As_Attribute(
        _this: *const usd_Object_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_As_Relationship(
        _this: *const usd_Object_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_As_Property(
        _this: *const usd_Object_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_As_Prim(
        _this: *const usd_Object_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetMetadata_value(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_SetMetadata_value(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_ClearMetadata(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasMetadata(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAuthoredMetadata(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetMetadataByDictKey_value(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_SetMetadataByDictKey_value(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_ClearMetadataByDictKey(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasMetadataDictKey(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAuthoredMetadataDictKey(
        _this: *const usd_Object_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetAllMetadata(
        _this: *const usd_Object_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetAllAuthoredMetadata(
        _this: *const usd_Object_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_IsHidden(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_SetHidden(
        _this: *const usd_Object_t,
        hidden: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_ClearHidden(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAuthoredHidden(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetCustomData(
        _this: *const usd_Object_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetCustomDataByKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_SetCustomData(
        _this: *const usd_Object_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_SetCustomDataByKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_ClearCustomData(_this: *const usd_Object_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_ClearCustomDataByKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasCustomData(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasCustomDataKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAuthoredCustomData(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAuthoredCustomDataKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetAssetInfo(
        _this: *const usd_Object_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetAssetInfoByKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_SetAssetInfo(
        _this: *const usd_Object_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_SetAssetInfoByKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_ClearAssetInfo(_this: *const usd_Object_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_ClearAssetInfoByKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAssetInfo(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAssetInfoKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAuthoredAssetInfo(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAuthoredAssetInfoKey(
        _this: *const usd_Object_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetDocumentation(
        _this: *const usd_Object_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_SetDocumentation(
        _this: *const usd_Object_t,
        doc: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_ClearDocumentation(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAuthoredDocumentation(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetDisplayName(
        _this: *const usd_Object_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_SetDisplayName(
        _this: *const usd_Object_t,
        name: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_ClearDisplayName(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_HasAuthoredDisplayName(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_IsValid(
        _this: *const usd_Object_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetStage(
        _this: *const usd_Object_t,
        _result: *mut *mut usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetPath(
        _this: *const usd_Object_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetPrimPath(
        _this: *const usd_Object_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetPrim(
        _this: *const usd_Object_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetName(
        _this: *const usd_Object_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetNamespaceDelimiter(
        _result: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_GetDescription(
        _this: *const usd_Object_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_default(_result: *mut *mut usd_Object_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Object_dtor(_this: *mut usd_Object_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectSet_default(_result: *mut *mut usd_ObjectSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ObjectSet_dtor(_this: *mut usd_ObjectSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrimTypeInfo(
        _this: *const usd_Prim_t,
        _result: *mut *const usd_PrimTypeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrimDefinition(
        _this: *const usd_Prim_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetSpecifier(
        _this: *const usd_Prim_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetSpecifier(
        _this: *const usd_Prim_t,
        specifier: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrimStack(
        _this: *const usd_Prim_t,
        _result: *mut *mut sdf_PrimSpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrimStackWithLayerOffsets(
        _this: *const usd_Prim_t,
        _result: *mut *mut sdf_PrimSpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetTypeName(
        _this: *const usd_Prim_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetTypeName(
        _this: *const usd_Prim_t,
        typeName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearTypeName(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredTypeName(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsActive(_this: *const usd_Prim_t, _result: *mut bool)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetActive(
        _this: *const usd_Prim_t,
        active: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearActive(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredActive(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsLoaded(_this: *const usd_Prim_t, _result: *mut bool)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsModel(_this: *const usd_Prim_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsGroup(_this: *const usd_Prim_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsAbstract(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsDefined(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasDefiningSpecifier(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAppliedSchemas(
        _this: *const usd_Prim_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPropertyNames(
        _this: *const usd_Prim_t,
        predicate: ::std::option::Option<
            unsafe extern "C" fn(param00: *const tf_Token_t, _result: *mut bool),
        >,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAuthoredPropertyNames(
        _this: *const usd_Prim_t,
        predicate: ::std::option::Option<
            unsafe extern "C" fn(param00: *const tf_Token_t, _result: *mut bool),
        >,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetProperties_matching_predicate(
        _this: *const usd_Prim_t,
        predicate: ::std::option::Option<
            unsafe extern "C" fn(param00: *const tf_Token_t, _result: *mut bool),
        >,
        _result: *mut *mut usd_PropertyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAuthoredProperties_matching_predicate(
        _this: *const usd_Prim_t,
        predicate: ::std::option::Option<
            unsafe extern "C" fn(param00: *const tf_Token_t, _result: *mut bool),
        >,
        _result: *mut *mut usd_PropertyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPropertiesInNamespace(
        _this: *const usd_Prim_t,
        namespaces: *const std_String_t,
        _result: *mut *mut usd_PropertyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAuthoredPropertiesInNamespace(
        _this: *const usd_Prim_t,
        namespaces: *const std_String_t,
        _result: *mut *mut usd_PropertyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPropertyOrder(
        _this: *const usd_Prim_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetPropertyOrder(
        _this: *const usd_Prim_t,
        order: *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearPropertyOrder(_this: *const usd_Prim_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_RemoveProperty(
        _this: *mut usd_Prim_t,
        propName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetProperty(
        _this: *const usd_Prim_t,
        propName: *const tf_Token_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasProperty(
        _this: *const usd_Prim_t,
        propName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_AddAppliedSchema(
        _this: *const usd_Prim_t,
        appliedSchemaName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_RemoveAppliedSchema(
        _this: *const usd_Prim_t,
        appliedSchemaName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsA(
        _this: *const usd_Prim_t,
        schemaIdentifier: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsA_with_version(
        _this: *const usd_Prim_t,
        schemaFamily: *const tf_Token_t,
        schemaVersion: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsInFamily(
        _this: *const usd_Prim_t,
        schemaFamily: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsInFamily_with_policy(
        _this: *const usd_Prim_t,
        schemaIdentifier: *const tf_Token_t,
        versionPolicy: ::std::os::raw::c_int,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsInFamily_with_policy_and_version(
        _this: *const usd_Prim_t,
        schemaFamily: *const tf_Token_t,
        schemaVersion: ::std::os::raw::c_uint,
        versionPolicy: ::std::os::raw::c_int,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsInFamily_with_type(
        _this: *const usd_Prim_t,
        schemaType: *const tf_Type_t,
        versionPolicy: ::std::os::raw::c_int,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetVersionIfIsInFamily(
        _this: *const usd_Prim_t,
        schemaFamily: *const tf_Token_t,
        schemaVersion: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAPI(
        _this: *const usd_Prim_t,
        schemaType: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAPI_with_instance_name(
        _this: *const usd_Prim_t,
        schemaType: *const tf_Type_t,
        instanceName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAPI_with_schema_identifier(
        _this: *const usd_Prim_t,
        schemaIdentifier: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAPI_with_instance_name_and_schema_identifier(
        _this: *const usd_Prim_t,
        schemaIdentifier: *const tf_Token_t,
        instanceName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAPIInFamily(
        _this: *const usd_Prim_t,
        schemaFamily: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAPIInFamily_with_instance(
        _this: *const usd_Prim_t,
        schemaFamily: *const tf_Token_t,
        instanceName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAPIInFamily_with_version(
        _this: *const usd_Prim_t,
        schemaFamily: *const tf_Token_t,
        schemaVersion: ::std::os::raw::c_uint,
        versionPolicy: ::std::os::raw::c_int,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAPIInFamily_with_version_and_instance(
        _this: *const usd_Prim_t,
        schemaFamily: *const tf_Token_t,
        schemaVersion: ::std::os::raw::c_uint,
        versionPolicy: ::std::os::raw::c_int,
        instanceName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetVersionIfHasAPIInFamily(
        _this: *const usd_Prim_t,
        schemaFamily: *const tf_Token_t,
        instanceName: *const tf_Token_t,
        schemaVersion: *mut ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_CanApplyAPI(
        _this: *const usd_Prim_t,
        schemaType: *const tf_Type_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ApplyAPI(
        _this: *const usd_Prim_t,
        schemaType: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_RemoveAPI(
        _this: *const usd_Prim_t,
        schemaType: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetChild(
        _this: *const usd_Prim_t,
        name: *const tf_Token_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetChildren(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_PrimSiblingRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAllChildren(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_PrimSiblingRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetFilteredChildren(
        _this: *const usd_Prim_t,
        pred: *const usd_PrimFlagsPredicate_t,
        _result: *mut *mut usd_PrimSiblingRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetChildrenNames(
        _this: *const usd_Prim_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetFilteredChildrenNames(
        _this: *const usd_Prim_t,
        predicate: *const usd_PrimFlagsPredicate_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetDescendants(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_PrimSubtreeRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAllDescendants(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_PrimSubtreeRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetFilteredDescendants(
        _this: *const usd_Prim_t,
        pred: *const usd_PrimFlagsPredicate_t,
        _result: *mut *mut usd_PrimSubtreeRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetChildrenReorder(
        _this: *const usd_Prim_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetChildrenReorder(
        _this: *const usd_Prim_t,
        order: *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearChildrenReorder(_this: *const usd_Prim_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetParent(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetNextSibling(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetFilteredNextSibling(
        _this: *const usd_Prim_t,
        predicate: *const usd_PrimFlagsPredicate_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsPseudoRoot(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrimAtPath(
        _this: *const usd_Prim_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetObjectAtPath(
        _this: *const usd_Prim_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Object_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPropertyAtPath(
        _this: *const usd_Prim_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAttributeAtPath(
        _this: *const usd_Prim_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetRelationshipAtPath(
        _this: *const usd_Prim_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetVariantSets(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_UsdVariantSets_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetVariantSet(
        _this: *const usd_Prim_t,
        variantSetName: *const std_String_t,
        _result: *mut *mut usd_UsdVariantSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasVariantSets(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_CreateAttribute(
        _this: *const usd_Prim_t,
        name: *const tf_Token_t,
        typeName: *const sdf_ValueTypeName_t,
        custom: bool,
        variability: ::std::os::raw::c_uint,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAttributes(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_AttributeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAuthoredAttributes(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_AttributeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAttribute(
        _this: *const usd_Prim_t,
        attrName: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAttribute(
        _this: *const usd_Prim_t,
        attrName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_FindAllAttributeConnectionPaths(
        _this: *const usd_Prim_t,
        pred: ::std::option::Option<
            unsafe extern "C" fn(param00: *const usd_Attribute_t, _result: *mut bool),
        >,
        recurseOnSources: bool,
        _result: *mut *mut sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_CreateRelationship(
        _this: *const usd_Prim_t,
        relName: *const tf_Token_t,
        custom: bool,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetRelationships(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_RelationshipVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAuthoredRelationships(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_RelationshipVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetRelationship(
        _this: *const usd_Prim_t,
        relName: *const tf_Token_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasRelationship(
        _this: *const usd_Prim_t,
        relName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_FindAllRelationshipTargetPaths(
        _this: *const usd_Prim_t,
        pred: ::std::option::Option<
            unsafe extern "C" fn(param00: *const usd_Relationship_t, _result: *mut bool),
        >,
        recurseOnTargets: bool,
        _result: *mut *mut sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPayloads(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Payloads_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredPayloads(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_Load(
        _this: *const usd_Prim_t,
        policy: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_Unload(_this: *const usd_Prim_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetReferences(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_References_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredReferences(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetInherits(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Inherits_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredInherits(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetSpecializes(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Specializes_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredSpecializes(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsInstanceable(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetInstanceable(
        _this: *const usd_Prim_t,
        instanceable: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearInstanceable(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredInstanceable(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsInstance(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsInstanceProxy(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsPrototypePath(
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsPathInPrototype(
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsPrototype(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsInPrototype(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrototype(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrimInPrototype(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetInstances(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_PrimVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrimIndex(
        _this: *const usd_Prim_t,
        _result: *mut *const pcp_PrimIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ComputeExpandedPrimIndex(
        _this: *const usd_Prim_t,
        _result: *mut *mut pcp_PrimIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_MakeResolveTargetUpToEditTarget(
        _this: *const usd_Prim_t,
        editTarget: *const usd_EditTarget_t,
        _result: *mut *mut usd_ResolveTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_MakeResolveTargetStrongerThanEditTarget(
        _this: *const usd_Prim_t,
        editTarget: *const usd_EditTarget_t,
        _result: *mut *mut usd_ResolveTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_default(_result: *mut *mut usd_Prim_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_dtor(_this: *mut usd_Prim_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_Is_Attribute(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_Is_Relationship(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_Is_Property(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_Is_Prim(_this: *const usd_Prim_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_As_Attribute(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_As_Relationship(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_As_Property(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_As_Prim(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetMetadata_value(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetMetadata_value(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearMetadata(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasMetadata(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredMetadata(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetMetadataByDictKey_value(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetMetadataByDictKey_value(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearMetadataByDictKey(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasMetadataDictKey(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredMetadataDictKey(
        _this: *const usd_Prim_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAllMetadata(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAllAuthoredMetadata(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsHidden(_this: *const usd_Prim_t, _result: *mut bool)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetHidden(
        _this: *const usd_Prim_t,
        hidden: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearHidden(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredHidden(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetCustomData(
        _this: *const usd_Prim_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetCustomDataByKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetCustomData(
        _this: *const usd_Prim_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetCustomDataByKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearCustomData(_this: *const usd_Prim_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearCustomDataByKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasCustomData(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasCustomDataKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredCustomData(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredCustomDataKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAssetInfo(
        _this: *const usd_Prim_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAssetInfoByKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetAssetInfo(
        _this: *const usd_Prim_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetAssetInfoByKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearAssetInfo(_this: *const usd_Prim_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearAssetInfoByKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAssetInfo(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAssetInfoKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredAssetInfo(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredAssetInfoKey(
        _this: *const usd_Prim_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetDocumentation(
        _this: *const usd_Prim_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetDocumentation(
        _this: *const usd_Prim_t,
        doc: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearDocumentation(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredDocumentation(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetDisplayName(
        _this: *const usd_Prim_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_SetDisplayName(
        _this: *const usd_Prim_t,
        name: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_ClearDisplayName(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_HasAuthoredDisplayName(
        _this: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_IsValid(_this: *const usd_Prim_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetStage(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPath(
        _this: *const usd_Prim_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrimPath(
        _this: *const usd_Prim_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetPrim(
        _this: *const usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetName(
        _this: *const usd_Prim_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetDescription(
        _this: *const usd_Prim_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimTypeInfo_GetTypeName(
        _this: *const usd_PrimTypeInfo_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimTypeInfo_GetAppliedAPISchemas(
        _this: *const usd_PrimTypeInfo_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimTypeInfo_GetSchemaType(
        _this: *const usd_PrimTypeInfo_t,
        _result: *mut *const tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimTypeInfo_GetSchemaTypeName(
        _this: *const usd_PrimTypeInfo_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimTypeInfo_GetPrimDefinition(
        _this: *const usd_PrimTypeInfo_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimTypeInfo_GetEmptyPrimType(
        _result: *mut *const usd_PrimTypeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimTypeInfo_dtor(_this: *mut usd_PrimTypeInfo_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_data(
        _this: *mut usd_PrimVector_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_data_const(
        _this: *const usd_PrimVector_t,
        _result: *mut *const usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_empty(
        _this: *const usd_PrimVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_size(
        _this: *const usd_PrimVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_max_size(
        _this: *const usd_PrimVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_capacity(
        _this: *const usd_PrimVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_clear(_this: *mut usd_PrimVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_pop_back(_this: *mut usd_PrimVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_op_index(
        _this: *const usd_PrimVector_t,
        __n: usize,
        _result: *mut *const usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_default(_result: *mut *mut usd_PrimVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimVector_dtor(_this: *mut usd_PrimVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimFlagsPredicate_dtor(
        _this: *mut usd_PrimFlagsPredicate_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetPropertyStack(
        _this: *const usd_Property_t,
        time: usd_TimeCode_t,
        _result: *mut *mut sdf_PropertySpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetPropertyStackWithLayerOffsets(
        _this: *const usd_Property_t,
        time: usd_TimeCode_t,
        _result: *mut *mut sdf_PropertySpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetBaseName(
        _this: *const usd_Property_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetNamespace(
        _this: *const usd_Property_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SplitName(
        _this: *const usd_Property_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetDisplayGroup(
        _this: *const usd_Property_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetDisplayGroup(
        _this: *const usd_Property_t,
        displayGroup: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearDisplayGroup(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredDisplayGroup(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetNestedDisplayGroups(
        _this: *const usd_Property_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetNestedDisplayGroups(
        _this: *const usd_Property_t,
        nestedGroups: *const std_StringVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_IsCustom(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetCustom(
        _this: *const usd_Property_t,
        isCustom: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_IsDefined(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_IsAuthored(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_IsAuthoredAt(
        _this: *const usd_Property_t,
        editTarget: *const usd_EditTarget_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_FlattenTo_prim(
        _this: *const usd_Property_t,
        parent: *const usd_Prim_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_FlattenTo_named_property(
        _this: *const usd_Property_t,
        parent: *const usd_Prim_t,
        propName: *const tf_Token_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_FlattenTo_property(
        _this: *const usd_Property_t,
        property: *const usd_Property_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_default(_result: *mut *mut usd_Property_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_dtor(_this: *mut usd_Property_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_Is_Attribute(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_Is_Relationship(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_Is_Property(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_Is_Prim(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_As_Attribute(
        _this: *const usd_Property_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_As_Relationship(
        _this: *const usd_Property_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_As_Property(
        _this: *const usd_Property_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_As_Prim(
        _this: *const usd_Property_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetMetadata_value(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetMetadata_value(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearMetadata(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasMetadata(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredMetadata(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetMetadataByDictKey_value(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetMetadataByDictKey_value(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearMetadataByDictKey(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasMetadataDictKey(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredMetadataDictKey(
        _this: *const usd_Property_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetAllMetadata(
        _this: *const usd_Property_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetAllAuthoredMetadata(
        _this: *const usd_Property_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_IsHidden(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetHidden(
        _this: *const usd_Property_t,
        hidden: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearHidden(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredHidden(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetCustomData(
        _this: *const usd_Property_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetCustomDataByKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetCustomData(
        _this: *const usd_Property_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetCustomDataByKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearCustomData(_this: *const usd_Property_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearCustomDataByKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasCustomData(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasCustomDataKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredCustomData(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredCustomDataKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetAssetInfo(
        _this: *const usd_Property_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetAssetInfoByKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetAssetInfo(
        _this: *const usd_Property_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetAssetInfoByKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearAssetInfo(_this: *const usd_Property_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearAssetInfoByKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAssetInfo(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAssetInfoKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredAssetInfo(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredAssetInfoKey(
        _this: *const usd_Property_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetDocumentation(
        _this: *const usd_Property_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetDocumentation(
        _this: *const usd_Property_t,
        doc: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearDocumentation(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredDocumentation(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetDisplayName(
        _this: *const usd_Property_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_SetDisplayName(
        _this: *const usd_Property_t,
        name: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_ClearDisplayName(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_HasAuthoredDisplayName(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_IsValid(
        _this: *const usd_Property_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetStage(
        _this: *const usd_Property_t,
        _result: *mut *mut usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetPath(
        _this: *const usd_Property_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetPrimPath(
        _this: *const usd_Property_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetPrim(
        _this: *const usd_Property_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetName(
        _this: *const usd_Property_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Property_GetDescription(
        _this: *const usd_Property_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_data(
        _this: *mut usd_PropertyVector_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_data_const(
        _this: *const usd_PropertyVector_t,
        _result: *mut *const usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_empty(
        _this: *const usd_PropertyVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_size(
        _this: *const usd_PropertyVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_max_size(
        _this: *const usd_PropertyVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_capacity(
        _this: *const usd_PropertyVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_clear(_this: *mut usd_PropertyVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_pop_back(_this: *mut usd_PropertyVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_op_index(
        _this: *const usd_PropertyVector_t,
        __n: usize,
        _result: *mut *const usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_default(
        _result: *mut *mut usd_PropertyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PropertyVector_dtor(_this: *mut usd_PropertyVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_AddTarget(
        _this: *const usd_Relationship_t,
        target: *const sdf_Path_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_RemoveTarget(
        _this: *const usd_Relationship_t,
        target: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetTargets(
        _this: *const usd_Relationship_t,
        targets: *const sdf_PathVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearTargets(
        _this: *const usd_Relationship_t,
        removeSpec: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetTargets(
        _this: *const usd_Relationship_t,
        targets: *mut sdf_PathVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetForwardedTargets(
        _this: *const usd_Relationship_t,
        targets: *mut sdf_PathVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredTargets(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_default(_result: *mut *mut usd_Relationship_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_dtor(_this: *mut usd_Relationship_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_Is_Attribute(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_Is_Relationship(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_Is_Property(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_Is_Prim(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_As_Attribute(
        _this: *const usd_Relationship_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_As_Relationship(
        _this: *const usd_Relationship_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_As_Property(
        _this: *const usd_Relationship_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_As_Prim(
        _this: *const usd_Relationship_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetMetadata_value(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetMetadata_value(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearMetadata(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasMetadata(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredMetadata(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetMetadataByDictKey_value(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetMetadataByDictKey_value(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearMetadataByDictKey(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasMetadataDictKey(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredMetadataDictKey(
        _this: *const usd_Relationship_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetAllMetadata(
        _this: *const usd_Relationship_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetAllAuthoredMetadata(
        _this: *const usd_Relationship_t,
        _result: *mut *mut usd_MetadataValueMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_IsHidden(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetHidden(
        _this: *const usd_Relationship_t,
        hidden: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearHidden(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredHidden(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetCustomData(
        _this: *const usd_Relationship_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetCustomDataByKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetCustomData(
        _this: *const usd_Relationship_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetCustomDataByKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearCustomData(
        _this: *const usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearCustomDataByKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasCustomData(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasCustomDataKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredCustomData(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredCustomDataKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetAssetInfo(
        _this: *const usd_Relationship_t,
        _result: *mut *mut vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetAssetInfoByKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetAssetInfo(
        _this: *const usd_Relationship_t,
        customData: *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetAssetInfoByKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearAssetInfo(
        _this: *const usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearAssetInfoByKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAssetInfo(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAssetInfoKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredAssetInfo(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredAssetInfoKey(
        _this: *const usd_Relationship_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetDocumentation(
        _this: *const usd_Relationship_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetDocumentation(
        _this: *const usd_Relationship_t,
        doc: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearDocumentation(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredDocumentation(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetDisplayName(
        _this: *const usd_Relationship_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetDisplayName(
        _this: *const usd_Relationship_t,
        name: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearDisplayName(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredDisplayName(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_IsValid(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetStage(
        _this: *const usd_Relationship_t,
        _result: *mut *mut usd_StageWeakPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetPath(
        _this: *const usd_Relationship_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetPrimPath(
        _this: *const usd_Relationship_t,
        _result: *mut *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetPrim(
        _this: *const usd_Relationship_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetName(
        _this: *const usd_Relationship_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetDescription(
        _this: *const usd_Relationship_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetPropertyStack(
        _this: *const usd_Relationship_t,
        time: usd_TimeCode_t,
        _result: *mut *mut sdf_PropertySpecHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetPropertyStackWithLayerOffsets(
        _this: *const usd_Relationship_t,
        time: usd_TimeCode_t,
        _result: *mut *mut sdf_PropertySpecHandleOffsetPairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetBaseName(
        _this: *const usd_Relationship_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetNamespace(
        _this: *const usd_Relationship_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SplitName(
        _this: *const usd_Relationship_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetDisplayGroup(
        _this: *const usd_Relationship_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetDisplayGroup(
        _this: *const usd_Relationship_t,
        displayGroup: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_ClearDisplayGroup(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_HasAuthoredDisplayGroup(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_GetNestedDisplayGroups(
        _this: *const usd_Relationship_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetNestedDisplayGroups(
        _this: *const usd_Relationship_t,
        nestedGroups: *const std_StringVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_IsCustom(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_SetCustom(
        _this: *const usd_Relationship_t,
        isCustom: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_IsDefined(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_IsAuthored(
        _this: *const usd_Relationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_IsAuthoredAt(
        _this: *const usd_Relationship_t,
        editTarget: *const usd_EditTarget_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_FlattenTo_prim(
        _this: *const usd_Relationship_t,
        parent: *const usd_Prim_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_FlattenTo_named_property(
        _this: *const usd_Relationship_t,
        parent: *const usd_Prim_t,
        propName: *const tf_Token_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Relationship_FlattenTo_property(
        _this: *const usd_Relationship_t,
        property: *const usd_Property_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_data(
        _this: *mut usd_RelationshipVector_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_data_const(
        _this: *const usd_RelationshipVector_t,
        _result: *mut *const usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_empty(
        _this: *const usd_RelationshipVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_size(
        _this: *const usd_RelationshipVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_max_size(
        _this: *const usd_RelationshipVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_capacity(
        _this: *const usd_RelationshipVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_clear(
        _this: *mut usd_RelationshipVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_pop_back(
        _this: *mut usd_RelationshipVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_op_index(
        _this: *const usd_RelationshipVector_t,
        __n: usize,
        _result: *mut *const usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_default(
        _result: *mut *mut usd_RelationshipVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_RelationshipVector_dtor(
        _this: *mut usd_RelationshipVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_AddPayload(
        _this: *mut usd_Payloads_t,
        payload: *const sdf_Payload_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_AddPayload_with_identifier_and_path(
        _this: *mut usd_Payloads_t,
        identifier: *const std_String_t,
        primPath: *const sdf_Path_t,
        layerOffset: *const sdf_LayerOffset_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_AddPayload_with_identifier(
        _this: *mut usd_Payloads_t,
        identifier: *const std_String_t,
        layerOffset: *const sdf_LayerOffset_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_AddInternalPayload(
        _this: *mut usd_Payloads_t,
        primPath: *const sdf_Path_t,
        layerOffset: *const sdf_LayerOffset_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_RemovePayload(
        _this: *mut usd_Payloads_t,
        ref_: *const sdf_Payload_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_ClearPayloads(
        _this: *mut usd_Payloads_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_SetPayloads(
        _this: *mut usd_Payloads_t,
        items: *const sdf_PayloadVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_GetPrim(
        _this: *const usd_Payloads_t,
        _result: *mut *const usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_op_bool(
        _this: *mut usd_Payloads_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Payloads_dtor(_this: *mut usd_Payloads_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQuery_SetFilter(
        _this: *mut usd_PrimCompositionQuery_t,
        filter: *const usd_PrimCompositionQueryFilter_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQuery_GetFilter(
        _this: *const usd_PrimCompositionQuery_t,
        _result: *mut usd_PrimCompositionQueryFilter_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQuery_GetCompositionArcs(
        _this: *mut usd_PrimCompositionQuery_t,
        _result: *mut *mut usd_PrimCompositionQueryArcVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQuery_GetDirectInherits(
        prim: *const usd_Prim_t,
        _result: *mut *mut usd_PrimCompositionQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQuery_GetDirectReferences(
        prim: *const usd_Prim_t,
        _result: *mut *mut usd_PrimCompositionQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQuery_GetDirectRootLayerArcs(
        prim: *const usd_Prim_t,
        _result: *mut *mut usd_PrimCompositionQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQuery_ctor(
        prim: *const usd_Prim_t,
        filter: *const usd_PrimCompositionQueryFilter_t,
        _result: *mut *mut usd_PrimCompositionQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQuery_dtor(
        _this: *mut usd_PrimCompositionQuery_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetTargetNode(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetIntroducingNode(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetTargetLayer(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetTargetPrimPath(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_MakeResolveTargetUpTo(
        _this: *const usd_PrimCompositionQueryArc_t,
        subLayer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_ResolveTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_MakeResolveTargetStrongerThan(
        _this: *const usd_PrimCompositionQueryArc_t,
        subLayer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_ResolveTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetIntroducingLayer(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetIntroducingPrimPath(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetIntroducingListEditor_reference(
        _this: *const usd_PrimCompositionQueryArc_t,
        editor: *mut sdf_ReferenceEditorProxy_t,
        ref_: *mut sdf_Reference_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetIntroducingListEditor_payload(
        _this: *const usd_PrimCompositionQueryArc_t,
        editor: *mut sdf_PayloadEditorProxy_t,
        payload: *mut sdf_Payload_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetIntroducingListEditor_path(
        _this: *const usd_PrimCompositionQueryArc_t,
        editor: *mut sdf_PathEditorProxy_t,
        path: *mut sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetIntroducingListEditor_name(
        _this: *const usd_PrimCompositionQueryArc_t,
        editor: *mut sdf_NameEditorProxy_t,
        name: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_GetArcType(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_IsImplicit(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_IsAncestral(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_HasSpecs(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_IsIntroducedInRootLayerStack(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_IsIntroducedInRootLayerPrimSpec(
        _this: *const usd_PrimCompositionQueryArc_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArc_dtor(
        _this: *mut usd_PrimCompositionQueryArc_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_data(
        _this: *mut usd_PrimCompositionQueryArcVector_t,
        _result: *mut *mut usd_PrimCompositionQueryArc_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_data_const(
        _this: *const usd_PrimCompositionQueryArcVector_t,
        _result: *mut *const usd_PrimCompositionQueryArc_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_empty(
        _this: *const usd_PrimCompositionQueryArcVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_size(
        _this: *const usd_PrimCompositionQueryArcVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_max_size(
        _this: *const usd_PrimCompositionQueryArcVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_capacity(
        _this: *const usd_PrimCompositionQueryArcVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_clear(
        _this: *mut usd_PrimCompositionQueryArcVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_pop_back(
        _this: *mut usd_PrimCompositionQueryArcVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_op_index(
        _this: *const usd_PrimCompositionQueryArcVector_t,
        __n: usize,
        _result: *mut *const usd_PrimCompositionQueryArc_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_default(
        _result: *mut *mut usd_PrimCompositionQueryArcVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimCompositionQueryArcVector_dtor(
        _this: *mut usd_PrimCompositionQueryArcVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetPropertyNames(
        _this: *const usd_PrimDefinition_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetAppliedAPISchemas(
        _this: *const usd_PrimDefinition_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetPropertyDefinition(
        _this: *const usd_PrimDefinition_t,
        propName: *const tf_Token_t,
        _result: *mut *mut usd_PrimDefinitionProperty_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetAttributeDefinition(
        _this: *const usd_PrimDefinition_t,
        attrName: *const tf_Token_t,
        _result: *mut *mut usd_PrimDefinitionAttribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetRelationshipDefinition(
        _this: *const usd_PrimDefinition_t,
        relName: *const tf_Token_t,
        _result: *mut *mut usd_PrimDefinitionRelationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetSpecType(
        _this: *const usd_PrimDefinition_t,
        propName: *const tf_Token_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetSchemaPropertySpec(
        _this: *const usd_PrimDefinition_t,
        propName: *const tf_Token_t,
        _result: *mut *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetSchemaAttributeSpec(
        _this: *const usd_PrimDefinition_t,
        attrName: *const tf_Token_t,
        _result: *mut *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetSchemaRelationshipSpec(
        _this: *const usd_PrimDefinition_t,
        relName: *const tf_Token_t,
        _result: *mut *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_ListMetadataFields(
        _this: *const usd_PrimDefinition_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetDocumentation(
        _this: *const usd_PrimDefinition_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_ListPropertyMetadataFields(
        _this: *const usd_PrimDefinition_t,
        propName: *const tf_Token_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_GetPropertyDocumentation(
        _this: *const usd_PrimDefinition_t,
        propName: *const tf_Token_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_FlattenTo(
        _this: *const usd_PrimDefinition_t,
        layer: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        newSpecSpecifier: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_FlattenTo_prim_under_parent(
        _this: *const usd_PrimDefinition_t,
        parent: *const usd_Prim_t,
        name: *const tf_Token_t,
        newSpecSpecifier: ::std::os::raw::c_uint,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_FlattenTo_prim(
        _this: *const usd_PrimDefinition_t,
        prim: *const usd_Prim_t,
        newSpecSpecifier: ::std::os::raw::c_uint,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinition_dtor(_this: *mut usd_PrimDefinition_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_GetName(
        _this: *const usd_PrimDefinitionProperty_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_op_bool(
        _this: *const usd_PrimDefinitionProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_IsAttribute(
        _this: *const usd_PrimDefinitionProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_IsRelationship(
        _this: *const usd_PrimDefinitionProperty_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_GetSpecType(
        _this: *const usd_PrimDefinitionProperty_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_ListMetadataFields(
        _this: *const usd_PrimDefinitionProperty_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_GetVariability(
        _this: *const usd_PrimDefinitionProperty_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_GetDocumentation(
        _this: *const usd_PrimDefinitionProperty_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_default(
        _result: *mut *mut usd_PrimDefinitionProperty_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionProperty_dtor(
        _this: *mut usd_PrimDefinitionProperty_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_GetTypeName(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_GetTypeNameToken(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_default(
        _result: *mut *mut usd_PrimDefinitionAttribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_dtor(
        _this: *mut usd_PrimDefinitionAttribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_GetName(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_op_bool(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_IsAttribute(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_IsRelationship(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_GetSpecType(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_ListMetadataFields(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_GetVariability(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionAttribute_GetDocumentation(
        _this: *const usd_PrimDefinitionAttribute_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_default(
        _result: *mut *mut usd_PrimDefinitionRelationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_dtor(
        _this: *mut usd_PrimDefinitionRelationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_GetName(
        _this: *const usd_PrimDefinitionRelationship_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_op_bool(
        _this: *const usd_PrimDefinitionRelationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_IsAttribute(
        _this: *const usd_PrimDefinitionRelationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_IsRelationship(
        _this: *const usd_PrimDefinitionRelationship_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_GetSpecType(
        _this: *const usd_PrimDefinitionRelationship_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_ListMetadataFields(
        _this: *const usd_PrimDefinitionRelationship_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_GetVariability(
        _this: *const usd_PrimDefinitionRelationship_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionRelationship_GetDocumentation(
        _this: *const usd_PrimDefinitionRelationship_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRange_begin(
        _this: *const usd_PrimRange_t,
        _result: *mut *mut usd_PrimRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRange_end(
        _this: *const usd_PrimRange_t,
        _result: *mut *mut usd_PrimRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRange_from_prim(
        start: *mut usd_Prim_t,
        _result: *mut *mut usd_PrimRange_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRange_dtor(_this: *mut usd_PrimRange_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRangeIterator_op_inc(
        _this: *mut usd_PrimRangeIterator_t,
        _result: *mut *mut usd_PrimRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRangeIterator_op_assign(
        _this: *mut usd_PrimRangeIterator_t,
        param00: *const usd_PrimRangeIterator_t,
        _result: *mut *mut usd_PrimRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRangeIterator_op_eq(
        _this: *const usd_PrimRangeIterator_t,
        other: *const usd_PrimRangeIterator_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRangeIterator_deref(
        _this: *const usd_PrimRangeIterator_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRangeIterator_new(
        _result: *mut *mut usd_PrimRangeIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimRangeIterator_dtor(_this: *mut usd_PrimRangeIterator_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimSiblingRange_begin(
        _this: *const usd_PrimSiblingRange_t,
        _result: *mut *mut usd_PrimSiblingIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimSiblingRange_end(
        _this: *const usd_PrimSiblingRange_t,
        _result: *mut *mut usd_PrimSiblingIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimSiblingRange_dtor(_this: *mut usd_PrimSiblingRange_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimSiblingIterator_deref(
        _this: *const usd_PrimSiblingIterator_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimSiblingIterator_op_inc(
        _this: *mut usd_PrimSiblingIterator_t,
        _result: *mut *mut usd_PrimSiblingIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimSiblingIterator_dtor(
        _this: *mut usd_PrimSiblingIterator_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimSubtreeRange_dtor(_this: *mut usd_PrimSubtreeRange_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_AddReference(
        _this: *mut usd_References_t,
        ref_: *const sdf_Reference_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_AddReference_with_identifier_and_path(
        _this: *mut usd_References_t,
        identifier: *const std_String_t,
        primPath: *const sdf_Path_t,
        layerOffset: *const sdf_LayerOffset_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_AddReference_with_identifier(
        _this: *mut usd_References_t,
        identifier: *const std_String_t,
        layerOffset: *const sdf_LayerOffset_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_AddInternalReference(
        _this: *mut usd_References_t,
        primPath: *const sdf_Path_t,
        layerOffset: *const sdf_LayerOffset_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_RemoveReference(
        _this: *mut usd_References_t,
        ref_: *const sdf_Reference_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_ClearReferences(
        _this: *mut usd_References_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_SetReferences(
        _this: *mut usd_References_t,
        items: *const sdf_ReferenceVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_GetPrim(
        _this: *const usd_References_t,
        _result: *mut *const usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_op_bool(
        _this: *mut usd_References_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_References_dtor(_this: *mut usd_References_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveInfo_GetSource(
        _this: *const usd_ResolveInfo_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveInfo_HasAuthoredValueOpinion(
        _this: *const usd_ResolveInfo_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveInfo_HasAuthoredValue(
        _this: *const usd_ResolveInfo_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveInfo_GetNode(
        _this: *const usd_ResolveInfo_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveInfo_ValueIsBlocked(
        _this: *const usd_ResolveInfo_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveInfo_default(_result: *mut *mut usd_ResolveInfo_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveInfo_dtor(_this: *mut usd_ResolveInfo_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveTarget_GetPrimIndex(
        _this: *const usd_ResolveTarget_t,
        _result: *mut *const pcp_PrimIndex_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveTarget_GetStartNode(
        _this: *const usd_ResolveTarget_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveTarget_GetStartLayer(
        _this: *const usd_ResolveTarget_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveTarget_GetStopNode(
        _this: *const usd_ResolveTarget_t,
        _result: *mut *mut pcp_NodeRef_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveTarget_GetStopLayer(
        _this: *const usd_ResolveTarget_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveTarget_IsNull(
        _this: *const usd_ResolveTarget_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveTarget_default(
        _result: *mut *mut usd_ResolveTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_ResolveTarget_dtor(_this: *mut usd_ResolveTarget_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_dtor(_this: *mut usd_APISchemaBase_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_IsConcrete(
        _this: *const usd_APISchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_IsTyped(
        _this: *const usd_APISchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_IsAPISchema(
        _this: *const usd_APISchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_IsAppliedAPISchema(
        _this: *const usd_APISchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_IsMultipleApplyAPISchema(
        _this: *const usd_APISchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_GetSchemaKind(
        _this: *const usd_APISchemaBase_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_GetPrim(
        _this: *const usd_APISchemaBase_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_GetPath(
        _this: *const usd_APISchemaBase_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_GetSchemaClassPrimDefinition(
        _this: *const usd_APISchemaBase_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_APISchemaBase_op_bool(
        _this: *const usd_APISchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_IsConcrete(
        _this: *const usd_SchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_IsTyped(
        _this: *const usd_SchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_IsAPISchema(
        _this: *const usd_SchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_IsAppliedAPISchema(
        _this: *const usd_SchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_IsMultipleApplyAPISchema(
        _this: *const usd_SchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_GetSchemaKind(
        _this: *const usd_SchemaBase_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_GetPrim(
        _this: *const usd_SchemaBase_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_GetPath(
        _this: *const usd_SchemaBase_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_GetSchemaClassPrimDefinition(
        _this: *const usd_SchemaBase_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_op_bool(
        _this: *const usd_SchemaBase_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_from_prim(
        prim: *const usd_Prim_t,
        _result: *mut *mut usd_SchemaBase_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaBase_dtor(_this: *mut usd_SchemaBase_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetInstance(
        _result: *mut *mut usd_SchemaRegistry_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_MakeSchemaIdentifierForFamilyAndVersion(
        schemaFamily: *const tf_Token_t,
        schemaVersion: ::std::os::raw::c_uint,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_ParseSchemaFamilyAndVersionFromIdentifier(
        schemaIdentifier: *const tf_Token_t,
        _result: *mut *mut usd_TokenSchemaVersionPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsAllowedSchemaFamily(
        schemaFamily: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsAllowedSchemaIdentifier(
        schemaIdentifier: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_FindSchemaInfo(
        schemaType: *const tf_Type_t,
        _result: *mut *const usd_SchemaRegistrySchemaInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_FindSchemaInfo_by_name(
        schemaIdentifier: *const tf_Token_t,
        _result: *mut *const usd_SchemaRegistrySchemaInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_FindSchemaInfo_03(
        schemaFamily: *const tf_Token_t,
        schemaVersion: ::std::os::raw::c_uint,
        _result: *mut *const usd_SchemaRegistrySchemaInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_FindSchemaInfosInFamily_00(
        schemaFamily: *const tf_Token_t,
        _result: *mut *const usd_SchemaRegistrySchemaInfoConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_FindSchemaInfosInFamily_01(
        schemaFamily: *const tf_Token_t,
        schemaVersion: ::std::os::raw::c_uint,
        versionPolicy: ::std::os::raw::c_int,
        _result: *mut *mut usd_SchemaRegistrySchemaInfoConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetSchemaTypeName(
        schemaType: *const tf_Type_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetConcreteSchemaTypeName(
        schemaType: *const tf_Type_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetAPISchemaTypeName(
        schemaType: *const tf_Type_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetTypeFromSchemaTypeName(
        typeName: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetConcreteTypeFromSchemaTypeName(
        typeName: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetAPITypeFromSchemaTypeName(
        typeName: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsDisallowedField(
        fieldName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsTyped(
        primType: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetSchemaKind_00(
        schemaType: *const tf_Type_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetSchemaKind_01(
        typeName: *const tf_Token_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsConcrete(
        primType: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsConcrete_by_name(
        primType: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsAbstract(
        primType: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsAbstract_by_name(
        primType: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsAppliedAPISchema(
        apiSchemaType: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsAppliedAPISchema_by_name(
        apiSchemaType: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsMultipleApplyAPISchema(
        apiSchemaType: *const tf_Type_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsMultipleApplyAPISchema_by_name(
        apiSchemaType: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetTypeFromName(
        typeName: *const tf_Token_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetTypeNameAndInstance(
        apiSchemaName: *const tf_Token_t,
        _result: *mut *mut tf_TokenTokenPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsAllowedAPISchemaInstanceName(
        apiSchemaName: *const tf_Token_t,
        instanceName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetAPISchemaCanOnlyApplyToTypeNames(
        apiSchemaName: *const tf_Token_t,
        instanceName: *const tf_Token_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetAutoApplyAPISchemas(
        _result: *mut *const usd_SchemaRegistryTokenToTokenVectorMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_CollectAddtionalAutoApplyAPISchemasFromPlugins(
        autoApplyAPISchemas: *mut usd_SchemaRegistryTokenToTokenVectorMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_MakeMultipleApplyNameTemplate(
        namespacePrefix: *const std_String_t,
        baseName: *const std_String_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_MakeMultipleApplyNameInstance(
        nameTemplate: *const std_String_t,
        instanceName: *const std_String_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetMultipleApplyNameTemplateBaseName(
        nameTemplate: *const std_String_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_IsMultipleApplyNameTemplate(
        nameTemplate: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_FindConcretePrimDefinition(
        _this: *const usd_SchemaRegistry_t,
        typeName: *const tf_Token_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_FindAppliedAPIPrimDefinition(
        _this: *const usd_SchemaRegistry_t,
        typeName: *const tf_Token_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetEmptyPrimDefinition(
        _this: *const usd_SchemaRegistry_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_BuildComposedPrimDefinition(
        _this: *const usd_SchemaRegistry_t,
        primType: *const tf_Token_t,
        appliedAPISchemas: *const tf_TokenVector_t,
        _result: *mut *mut usd_PrimDefinitionPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_GetFallbackPrimTypes(
        _this: *const usd_SchemaRegistry_t,
        _result: *mut *const vt_Dictionary_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistry_dtor(_this: *mut usd_SchemaRegistry_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfo_dtor(
        _this: *mut usd_SchemaRegistrySchemaInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_data(
        _this: *mut usd_SchemaRegistrySchemaInfoConstPtrVector_t,
        _result: *mut *mut *const usd_SchemaRegistrySchemaInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_data_const(
        _this: *const usd_SchemaRegistrySchemaInfoConstPtrVector_t,
        _result: *mut *const *const usd_SchemaRegistrySchemaInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_empty(
        _this: *const usd_SchemaRegistrySchemaInfoConstPtrVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_size(
        _this: *const usd_SchemaRegistrySchemaInfoConstPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_max_size(
        _this: *const usd_SchemaRegistrySchemaInfoConstPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_capacity(
        _this: *const usd_SchemaRegistrySchemaInfoConstPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_clear(
        _this: *mut usd_SchemaRegistrySchemaInfoConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_pop_back(
        _this: *mut usd_SchemaRegistrySchemaInfoConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_op_index(
        _this: *const usd_SchemaRegistrySchemaInfoConstPtrVector_t,
        __n: usize,
        _result: *mut *const *const usd_SchemaRegistrySchemaInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_default(
        _result: *mut *mut usd_SchemaRegistrySchemaInfoConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistrySchemaInfoConstPtrVector_dtor(
        _this: *mut usd_SchemaRegistrySchemaInfoConstPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TokenSchemaVersionPair_dtor(
        _this: *mut usd_TokenSchemaVersionPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_SchemaRegistryTokenToTokenVectorMap_dtor(
        _this: *mut usd_SchemaRegistryTokenToTokenVectorMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_dtor(_this: *mut usd_PrimDefinitionPtr_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetPropertyNames(
        _this: *const usd_PrimDefinitionPtr_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetAppliedAPISchemas(
        _this: *const usd_PrimDefinitionPtr_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetPropertyDefinition(
        _this: *const usd_PrimDefinitionPtr_t,
        propName: *const tf_Token_t,
        _result: *mut *mut usd_PrimDefinitionProperty_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetAttributeDefinition(
        _this: *const usd_PrimDefinitionPtr_t,
        attrName: *const tf_Token_t,
        _result: *mut *mut usd_PrimDefinitionAttribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetRelationshipDefinition(
        _this: *const usd_PrimDefinitionPtr_t,
        relName: *const tf_Token_t,
        _result: *mut *mut usd_PrimDefinitionRelationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetSpecType(
        _this: *const usd_PrimDefinitionPtr_t,
        propName: *const tf_Token_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetSchemaPropertySpec(
        _this: *const usd_PrimDefinitionPtr_t,
        propName: *const tf_Token_t,
        _result: *mut *mut sdf_PropertySpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetSchemaAttributeSpec(
        _this: *const usd_PrimDefinitionPtr_t,
        attrName: *const tf_Token_t,
        _result: *mut *mut sdf_AttributeSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetSchemaRelationshipSpec(
        _this: *const usd_PrimDefinitionPtr_t,
        relName: *const tf_Token_t,
        _result: *mut *mut sdf_RelationshipSpecHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_ListMetadataFields(
        _this: *const usd_PrimDefinitionPtr_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetDocumentation(
        _this: *const usd_PrimDefinitionPtr_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_ListPropertyMetadataFields(
        _this: *const usd_PrimDefinitionPtr_t,
        propName: *const tf_Token_t,
        _result: *mut *mut tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_GetPropertyDocumentation(
        _this: *const usd_PrimDefinitionPtr_t,
        propName: *const tf_Token_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_FlattenTo(
        _this: *const usd_PrimDefinitionPtr_t,
        layer: *const sdf_LayerHandle_t,
        path: *const sdf_Path_t,
        newSpecSpecifier: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_FlattenTo_prim_under_parent(
        _this: *const usd_PrimDefinitionPtr_t,
        parent: *const usd_Prim_t,
        name: *const tf_Token_t,
        newSpecSpecifier: ::std::os::raw::c_uint,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimDefinitionPtr_FlattenTo_prim(
        _this: *const usd_PrimDefinitionPtr_t,
        prim: *const usd_Prim_t,
        newSpecSpecifier: ::std::os::raw::c_uint,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Specializes_AddSpecialize(
        _this: *mut usd_Specializes_t,
        primPath: *const sdf_Path_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Specializes_RemoveSpecialize(
        _this: *mut usd_Specializes_t,
        primPath: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Specializes_ClearSpecializes(
        _this: *mut usd_Specializes_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Specializes_SetSpecializes(
        _this: *mut usd_Specializes_t,
        items: *const sdf_PathVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Specializes_GetPrim(
        _this: *const usd_Specializes_t,
        _result: *mut *const usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Specializes_op_bool(
        _this: *mut usd_Specializes_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Specializes_dtor(_this: *mut usd_Specializes_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Save(_this: *mut usd_Stage_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SaveSessionLayers(_this: *mut usd_Stage_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Load(
        _this: *mut usd_Stage_t,
        path: *const sdf_Path_t,
        policy: ::std::os::raw::c_uint,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Unload(
        _this: *mut usd_Stage_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_LoadAndUnload(
        _this: *mut usd_Stage_t,
        loadSet: *const sdf_PathSet_t,
        unloadSet: *const sdf_PathSet_t,
        policy: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetLoadSet(
        _this: *mut usd_Stage_t,
        _result: *mut *mut sdf_PathSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_FindLoadable(
        _this: *mut usd_Stage_t,
        rootPath: *const sdf_Path_t,
        _result: *mut *mut sdf_PathSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetLoadRules(
        _this: *const usd_Stage_t,
        _result: *mut *const usd_StageLoadRules_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetLoadRules(
        _this: *mut usd_Stage_t,
        rules: *const usd_StageLoadRules_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetPopulationMask(
        _this: *const usd_Stage_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetPopulationMask(
        _this: *mut usd_Stage_t,
        mask: *const usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_ExpandPopulationMask(
        _this: *mut usd_Stage_t,
        relPred: ::std::option::Option<
            unsafe extern "C" fn(param00: *const usd_Relationship_t, _result: *mut bool),
        >,
        attrPred: ::std::option::Option<
            unsafe extern "C" fn(param00: *const usd_Attribute_t, _result: *mut bool),
        >,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetSessionLayer(
        _this: *const usd_Stage_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetRootLayer(
        _this: *const usd_Stage_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetPathResolverContext(
        _this: *const usd_Stage_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_ResolveIdentifierToEditTarget(
        _this: *const usd_Stage_t,
        identifier: *const std_String_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetLayerStack(
        _this: *const usd_Stage_t,
        includeSessionLayers: bool,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetUsedLayers(
        _this: *const usd_Stage_t,
        includeClipLayers: bool,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_HasLocalLayer(
        _this: *const usd_Stage_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetEditTarget(
        _this: *const usd_Stage_t,
        _result: *mut *const usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetEditTargetForLocalLayer(
        _this: *mut usd_Stage_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetEditTargetForLocalLayer_with_index(
        _this: *mut usd_Stage_t,
        i: usize,
        _result: *mut *mut usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetEditTarget(
        _this: *mut usd_Stage_t,
        editTarget: *const usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_MuteLayer(
        _this: *mut usd_Stage_t,
        layerIdentifier: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_UnmuteLayer(
        _this: *mut usd_Stage_t,
        layerIdentifier: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_MuteAndUnmuteLayers(
        _this: *mut usd_Stage_t,
        muteLayers: *const std_StringVector_t,
        unmuteLayers: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetMutedLayers(
        _this: *const usd_Stage_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_IsLayerMuted(
        _this: *const usd_Stage_t,
        layerIdentifier: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Export(
        _this: *const usd_Stage_t,
        filename: *const std_String_t,
        addSourceFileComment: bool,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_ExportToString(
        _this: *const usd_Stage_t,
        result: *mut std_String_t,
        addSourceFileComment: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Flatten(
        _this: *const usd_Stage_t,
        addSourceFileComment: bool,
        _result: *mut *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetMetadata(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_HasMetadata(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_HasAuthoredMetadata(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetMetadata(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_ClearMetadata(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetMetadataByDictKey(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_HasMetadataDictKey(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_HasAuthoredMetadataDictKey(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetMetadataByDictKey(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_ClearMetadataByDictKey(
        _this: *const usd_Stage_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_WriteFallbackPrimTypes(_this: *mut usd_Stage_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetStartTimeCode(
        _this: *const usd_Stage_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetStartTimeCode(
        _this: *mut usd_Stage_t,
        param00: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetEndTimeCode(
        _this: *const usd_Stage_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetEndTimeCode(_this: *mut usd_Stage_t, param00: f64)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_HasAuthoredTimeCodeRange(
        _this: *const usd_Stage_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetTimeCodesPerSecond(
        _this: *const usd_Stage_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetTimeCodesPerSecond(
        _this: *const usd_Stage_t,
        timeCodesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetFramesPerSecond(
        _this: *const usd_Stage_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetFramesPerSecond(
        _this: *const usd_Stage_t,
        framesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetInterpolationType(
        _this: *mut usd_Stage_t,
        interpolationType: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetInterpolationType(
        _this: *const usd_Stage_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetPrototypes(
        _this: *const usd_Stage_t,
        _result: *mut *mut usd_PrimVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetGlobalVariantFallbacks(
        _result: *mut *mut pcp_VariantFallbackMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetGlobalVariantFallbacks(
        fallbacks: *const pcp_VariantFallbackMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_CreateInMemory(
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_CreateInMemory_with_identifier(
        identifier: *const std_String_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_CreateInMemory_with_resolver_context(
        identifier: *const std_String_t,
        pathResolverContext: *const ar_ResolverContext_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_CreateInMemory_with_session_layer(
        identifier: *const std_String_t,
        sessionLayer: *const sdf_LayerHandle_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_CreateInMemory_with_session_layer_and_resolver_context(
        identifier: *const std_String_t,
        sessionLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Open_with_resolver_context(
        filePath: *const std_String_t,
        pathResolverContext: *const ar_ResolverContext_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Open_at_root(
        rootLayer: *const sdf_LayerHandle_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Open_at_root_with_resolver_context(
        rootLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Open_at_root_with_session_layer_and_resolver_context(
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Open_at_root_with_session_layer(
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_OpenMasked(
        filePath: *const std_String_t,
        mask: *const usd_UsdStagePopulationMask_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_OpenMasked_with_resolver_context(
        filePath: *const std_String_t,
        pathResolverContext: *const ar_ResolverContext_t,
        mask: *const usd_UsdStagePopulationMask_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_OpenMasked_at_root(
        rootLayer: *const sdf_LayerHandle_t,
        mask: *const usd_UsdStagePopulationMask_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_OpenMasked_at_root_with_resolver_context(
        rootLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        mask: *const usd_UsdStagePopulationMask_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_OpenMasked_at_root_with_session_layer_and_resolver_context(
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        mask: *const usd_UsdStagePopulationMask_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_OpenMasked_at_root_with_session_layer(
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        mask: *const usd_UsdStagePopulationMask_t,
        load: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_IsSupportedFile(
        filePath: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Reload(_this: *mut usd_Stage_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetColorConfigFallbacks(
        colorConfiguration: *mut sdf_AssetPath_t,
        colorManagementSystem: *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetColorConfigFallbacks(
        colorConfiguration: *const sdf_AssetPath_t,
        colorManagementSystem: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetColorConfiguration(
        _this: *const usd_Stage_t,
        colorConfig: *const sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetColorConfiguration(
        _this: *const usd_Stage_t,
        _result: *mut *mut sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetColorManagementSystem(
        _this: *const usd_Stage_t,
        cms: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetColorManagementSystem(
        _this: *const usd_Stage_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetPseudoRoot(
        _this: *const usd_Stage_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetDefaultPrim(
        _this: *const usd_Stage_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_SetDefaultPrim(
        _this: *mut usd_Stage_t,
        prim: *const usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_ClearDefaultPrim(_this: *mut usd_Stage_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_HasDefaultPrim(
        _this: *const usd_Stage_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetPrimAtPath(
        _this: *const usd_Stage_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetObjectAtPath(
        _this: *const usd_Stage_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Object_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetPropertyAtPath(
        _this: *const usd_Stage_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetAttributeAtPath(
        _this: *const usd_Stage_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_GetRelationshipAtPath(
        _this: *const usd_Stage_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_OverridePrim(
        _this: *mut usd_Stage_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_DefinePrim(
        _this: *mut usd_Stage_t,
        path: *const sdf_Path_t,
        typeName: *const tf_Token_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_CreateClassPrim(
        _this: *mut usd_Stage_t,
        rootPrimPath: *const sdf_Path_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_RemovePrim(
        _this: *mut usd_Stage_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_dtor(_this: *mut usd_Stage_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_get(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut usd_Stage_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_is_invalid(
        _this: *const usd_StageRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_ctor(_result: *mut *mut usd_StageRefPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_dtor(_this: *mut usd_StageRefPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_Save(_this: *mut usd_StageRefPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SaveSessionLayers(
        _this: *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_Load(
        _this: *mut usd_StageRefPtr_t,
        path: *const sdf_Path_t,
        policy: ::std::os::raw::c_uint,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_Unload(
        _this: *mut usd_StageRefPtr_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_LoadAndUnload(
        _this: *mut usd_StageRefPtr_t,
        loadSet: *const sdf_PathSet_t,
        unloadSet: *const sdf_PathSet_t,
        policy: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetLoadSet(
        _this: *mut usd_StageRefPtr_t,
        _result: *mut *mut sdf_PathSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_FindLoadable(
        _this: *mut usd_StageRefPtr_t,
        rootPath: *const sdf_Path_t,
        _result: *mut *mut sdf_PathSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetLoadRules(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *const usd_StageLoadRules_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetLoadRules(
        _this: *mut usd_StageRefPtr_t,
        rules: *const usd_StageLoadRules_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetPopulationMask(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetPopulationMask(
        _this: *mut usd_StageRefPtr_t,
        mask: *const usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_ExpandPopulationMask(
        _this: *mut usd_StageRefPtr_t,
        relPred: ::std::option::Option<
            unsafe extern "C" fn(param00: *const usd_Relationship_t, _result: *mut bool),
        >,
        attrPred: ::std::option::Option<
            unsafe extern "C" fn(param00: *const usd_Attribute_t, _result: *mut bool),
        >,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetSessionLayer(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetRootLayer(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut sdf_LayerHandle_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetPathResolverContext(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut ar_ResolverContext_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_ResolveIdentifierToEditTarget(
        _this: *const usd_StageRefPtr_t,
        identifier: *const std_String_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetLayerStack(
        _this: *const usd_StageRefPtr_t,
        includeSessionLayers: bool,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetUsedLayers(
        _this: *const usd_StageRefPtr_t,
        includeClipLayers: bool,
        _result: *mut *mut sdf_LayerHandleVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_HasLocalLayer(
        _this: *const usd_StageRefPtr_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetEditTarget(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *const usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetEditTargetForLocalLayer(
        _this: *mut usd_StageRefPtr_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetEditTargetForLocalLayer_with_index(
        _this: *mut usd_StageRefPtr_t,
        i: usize,
        _result: *mut *mut usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetEditTarget(
        _this: *mut usd_StageRefPtr_t,
        editTarget: *const usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_MuteLayer(
        _this: *mut usd_StageRefPtr_t,
        layerIdentifier: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_UnmuteLayer(
        _this: *mut usd_StageRefPtr_t,
        layerIdentifier: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_MuteAndUnmuteLayers(
        _this: *mut usd_StageRefPtr_t,
        muteLayers: *const std_StringVector_t,
        unmuteLayers: *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetMutedLayers(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *const std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_IsLayerMuted(
        _this: *const usd_StageRefPtr_t,
        layerIdentifier: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_Export(
        _this: *const usd_StageRefPtr_t,
        filename: *const std_String_t,
        addSourceFileComment: bool,
        args: *const sdf_FileFormatFileFormatArguments_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_ExportToString(
        _this: *const usd_StageRefPtr_t,
        result: *mut std_String_t,
        addSourceFileComment: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_Flatten(
        _this: *const usd_StageRefPtr_t,
        addSourceFileComment: bool,
        _result: *mut *mut sdf_LayerRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetMetadata(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_HasMetadata(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_HasAuthoredMetadata(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetMetadata(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_ClearMetadata(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetMetadataByDictKey(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *mut vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_HasMetadataDictKey(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_HasAuthoredMetadataDictKey(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetMetadataByDictKey(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        value: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_ClearMetadataByDictKey(
        _this: *const usd_StageRefPtr_t,
        key: *const tf_Token_t,
        keyPath: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_WriteFallbackPrimTypes(
        _this: *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetStartTimeCode(
        _this: *const usd_StageRefPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetStartTimeCode(
        _this: *mut usd_StageRefPtr_t,
        param00: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetEndTimeCode(
        _this: *const usd_StageRefPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetEndTimeCode(
        _this: *mut usd_StageRefPtr_t,
        param00: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_HasAuthoredTimeCodeRange(
        _this: *const usd_StageRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetTimeCodesPerSecond(
        _this: *const usd_StageRefPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetTimeCodesPerSecond(
        _this: *const usd_StageRefPtr_t,
        timeCodesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetFramesPerSecond(
        _this: *const usd_StageRefPtr_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetFramesPerSecond(
        _this: *const usd_StageRefPtr_t,
        framesPerSecond: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetInterpolationType(
        _this: *mut usd_StageRefPtr_t,
        interpolationType: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetInterpolationType(
        _this: *const usd_StageRefPtr_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetPrototypes(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut usd_PrimVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_Reload(_this: *mut usd_StageRefPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetColorConfiguration(
        _this: *const usd_StageRefPtr_t,
        colorConfig: *const sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetColorConfiguration(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetColorManagementSystem(
        _this: *const usd_StageRefPtr_t,
        cms: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetColorManagementSystem(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetPseudoRoot(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetDefaultPrim(
        _this: *const usd_StageRefPtr_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_SetDefaultPrim(
        _this: *mut usd_StageRefPtr_t,
        prim: *const usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_ClearDefaultPrim(_this: *mut usd_StageRefPtr_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_HasDefaultPrim(
        _this: *const usd_StageRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetPrimAtPath(
        _this: *const usd_StageRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetObjectAtPath(
        _this: *const usd_StageRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Object_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetPropertyAtPath(
        _this: *const usd_StageRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Property_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetAttributeAtPath(
        _this: *const usd_StageRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_GetRelationshipAtPath(
        _this: *const usd_StageRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_OverridePrim(
        _this: *mut usd_StageRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_DefinePrim(
        _this: *mut usd_StageRefPtr_t,
        path: *const sdf_Path_t,
        typeName: *const tf_Token_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_CreateClassPrim(
        _this: *mut usd_StageRefPtr_t,
        rootPrimPath: *const sdf_Path_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtr_RemovePrim(
        _this: *mut usd_StageRefPtr_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_data(
        _this: *mut usd_StageRefPtrVector_t,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_data_const(
        _this: *const usd_StageRefPtrVector_t,
        _result: *mut *const usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_empty(
        _this: *const usd_StageRefPtrVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_size(
        _this: *const usd_StageRefPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_max_size(
        _this: *const usd_StageRefPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_capacity(
        _this: *const usd_StageRefPtrVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_clear(
        _this: *mut usd_StageRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_pop_back(
        _this: *mut usd_StageRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_op_index(
        _this: *const usd_StageRefPtrVector_t,
        __n: usize,
        _result: *mut *const usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_default(
        _result: *mut *mut usd_StageRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageRefPtrVector_dtor(_this: *mut usd_StageRefPtrVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageWeakPtr_get(
        _this: *const usd_StageWeakPtr_t,
        _result: *mut *mut usd_Stage_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageWeakPtr_is_invalid(
        _this: *const usd_StageWeakPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageWeakPtr_ctor(_result: *mut *mut usd_StageWeakPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageWeakPtr_dtor(_this: *mut usd_StageWeakPtr_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_GetAllStages(
        _this: *const usd_StageCache_t,
        _result: *mut *mut usd_StageRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_Size(
        _this: *const usd_StageCache_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_IsEmpty(
        _this: *const usd_StageCache_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_Find(
        _this: *const usd_StageCache_t,
        id: *mut usd_StageCacheId_t,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_FindOneMatching_with_root_layer(
        _this: *const usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_FindOneMatching_with_root_and_session_layer(
        _this: *const usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_FindOneMatching_with_root_layer_and_resolver(
        _this: *const usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_FindOneMatching_with_root_and_session_layer_and_resolver(
        _this: *const usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_FindAllMatching_with_root_layer(
        _this: *const usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_StageRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_FindAllMatching_with_root_and_session_layer(
        _this: *const usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_StageRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_FindAllMatching_with_root_layer_and_resolver(
        _this: *const usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        _result: *mut *mut usd_StageRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_FindAllMatching_with_root_and_session_layer_and_resolver(
        _this: *const usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        _result: *mut *mut usd_StageRefPtrVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_GetId(
        _this: *const usd_StageCache_t,
        stage: *const usd_StageRefPtr_t,
        _result: *mut *mut usd_StageCacheId_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_Contains(
        _this: *const usd_StageCache_t,
        stage: *const usd_StageRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_Contains_id(
        _this: *const usd_StageCache_t,
        id: *mut usd_StageCacheId_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_Insert(
        _this: *mut usd_StageCache_t,
        stage: *const usd_StageRefPtr_t,
        _result: *mut *mut usd_StageCacheId_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_Erase(
        _this: *mut usd_StageCache_t,
        stage: *const usd_StageRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_Erase_id(
        _this: *mut usd_StageCache_t,
        id: *mut usd_StageCacheId_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_EraseAll_with_root_layer(
        _this: *mut usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_EraseAll_with_root_and_session_layer(
        _this: *mut usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_EraseAll_with_root_and_session_layer_and_resolver(
        _this: *mut usd_StageCache_t,
        rootLayer: *const sdf_LayerHandle_t,
        sessionLayer: *const sdf_LayerHandle_t,
        pathResolverContext: *const ar_ResolverContext_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_Clear(_this: *mut usd_StageCache_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_SetDebugName(
        _this: *mut usd_StageCache_t,
        debugName: *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_GetDebugName(
        _this: *const usd_StageCache_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_default(_result: *mut *mut usd_StageCache_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCache_dtor(_this: *mut usd_StageCache_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCacheId_ToLongInt(
        _this: *const usd_StageCacheId_t,
        _result: *mut ::std::os::raw::c_long,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCacheId_ToString(
        _this: *const usd_StageCacheId_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCacheId_IsValid(
        _this: *const usd_StageCacheId_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCacheId_FromLongInt(
        val: ::std::os::raw::c_long,
        _result: *mut *mut usd_StageCacheId_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCacheId_FromString(
        s: *const std_String_t,
        _result: *mut *mut usd_StageCacheId_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageCacheId_dtor(_this: *mut usd_StageCacheId_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStageCacheRequest_IsSatisfiedBy_stage(
        _this: *const usd_UsdStageCacheRequest_t,
        stage: *const usd_StageRefPtr_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStageCacheRequest_IsSatisfiedBy_cache_request(
        _this: *const usd_UsdStageCacheRequest_t,
        pending: *const usd_UsdStageCacheRequest_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStageCacheRequest_Manufacture(
        _this: *mut usd_UsdStageCacheRequest_t,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStageCacheRequest_dtor(
        _this: *mut usd_UsdStageCacheRequest_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_LoadWithDescendants(
        _this: *mut usd_StageLoadRules_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_LoadWithoutDescendants(
        _this: *mut usd_StageLoadRules_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_Unload(
        _this: *mut usd_StageLoadRules_t,
        path: *const sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_LoadAndUnload(
        _this: *mut usd_StageLoadRules_t,
        loadSet: *const sdf_PathSet_t,
        unloadSet: *const sdf_PathSet_t,
        policy: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_AddRule(
        _this: *mut usd_StageLoadRules_t,
        path: *const sdf_Path_t,
        rule: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_Minimize(_this: *mut usd_StageLoadRules_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_IsLoaded(
        _this: *const usd_StageLoadRules_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_IsLoadedWithAllDescendants(
        _this: *const usd_StageLoadRules_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_IsLoadedWithNoDescendants(
        _this: *const usd_StageLoadRules_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_GetEffectiveRuleForPath(
        _this: *const usd_StageLoadRules_t,
        path: *const sdf_Path_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_GetRules(
        _this: *const usd_StageLoadRules_t,
        _result: *mut *const usd_PathStageLoadRulesRulePairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_LoadAll(
        _result: *mut *mut usd_StageLoadRules_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_LoadNone(
        _result: *mut *mut usd_StageLoadRules_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_default(
        _result: *mut *mut usd_StageLoadRules_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageLoadRules_dtor(_this: *mut usd_StageLoadRules_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePair_dtor(
        _this: *mut usd_PathStageLoadRulesRulePair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_data(
        _this: *mut usd_PathStageLoadRulesRulePairVector_t,
        _result: *mut *mut usd_PathStageLoadRulesRulePair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_data_const(
        _this: *const usd_PathStageLoadRulesRulePairVector_t,
        _result: *mut *const usd_PathStageLoadRulesRulePair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_empty(
        _this: *const usd_PathStageLoadRulesRulePairVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_size(
        _this: *const usd_PathStageLoadRulesRulePairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_max_size(
        _this: *const usd_PathStageLoadRulesRulePairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_capacity(
        _this: *const usd_PathStageLoadRulesRulePairVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_clear(
        _this: *mut usd_PathStageLoadRulesRulePairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_pop_back(
        _this: *mut usd_PathStageLoadRulesRulePairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_op_index(
        _this: *const usd_PathStageLoadRulesRulePairVector_t,
        __n: usize,
        _result: *mut *const usd_PathStageLoadRulesRulePair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_default(
        _result: *mut *mut usd_PathStageLoadRulesRulePairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PathStageLoadRulesRulePairVector_dtor(
        _this: *mut usd_PathStageLoadRulesRulePairVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_All(
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_Union(
        l: *const usd_UsdStagePopulationMask_t,
        r: *const usd_UsdStagePopulationMask_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_GetUnion(
        _this: *const usd_UsdStagePopulationMask_t,
        other: *const usd_UsdStagePopulationMask_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_GetUnion_with_path(
        _this: *const usd_UsdStagePopulationMask_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_Intersection(
        l: *const usd_UsdStagePopulationMask_t,
        r: *const usd_UsdStagePopulationMask_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_GetIntersection(
        _this: *const usd_UsdStagePopulationMask_t,
        other: *const usd_UsdStagePopulationMask_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_Includes(
        _this: *const usd_UsdStagePopulationMask_t,
        other: *const usd_UsdStagePopulationMask_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_Includes_path(
        _this: *const usd_UsdStagePopulationMask_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_IncludesSubtree(
        _this: *const usd_UsdStagePopulationMask_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_IsEmpty(
        _this: *const usd_UsdStagePopulationMask_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_GetIncludedChildNames(
        _this: *const usd_UsdStagePopulationMask_t,
        path: *const sdf_Path_t,
        childNames: *mut tf_TokenVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_GetPaths(
        _this: *const usd_UsdStagePopulationMask_t,
        _result: *mut *mut sdf_PathVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_Add(
        _this: *mut usd_UsdStagePopulationMask_t,
        other: *const usd_UsdStagePopulationMask_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_Add_path(
        _this: *mut usd_UsdStagePopulationMask_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_op_eq(
        _this: *const usd_UsdStagePopulationMask_t,
        other: *const usd_UsdStagePopulationMask_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_op_neq(
        _this: *const usd_UsdStagePopulationMask_t,
        other: *const usd_UsdStagePopulationMask_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_swap(
        _this: *mut usd_UsdStagePopulationMask_t,
        other: *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_default(
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_from_paths(
        paths: *const sdf_PathVector_t,
        _result: *mut *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdStagePopulationMask_dtor(
        _this: *mut usd_UsdStagePopulationMask_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCode_IsEarliestTime(
        _this: *const usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCode_IsDefault(
        _this: *const usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCode_IsNumeric(
        _this: *const usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCode_GetValue(
        _this: *const usd_TimeCode_t,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCode_EarliestTime(_result: *mut usd_TimeCode_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCode_Default(_result: *mut usd_TimeCode_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCode_SafeStep(
        maxValue: f64,
        maxCompression: f64,
        _result: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCode_from_time(
        param00: f64,
        _result: *mut usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCode_from_sdf_timecode(
        param00: sdf_TimeCode_t,
        _result: *mut usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_data(
        _this: *mut usd_TimeCodeVector_t,
        _result: *mut *mut usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_data_const(
        _this: *const usd_TimeCodeVector_t,
        _result: *mut *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_empty(
        _this: *const usd_TimeCodeVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_size(
        _this: *const usd_TimeCodeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_max_size(
        _this: *const usd_TimeCodeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_capacity(
        _this: *const usd_TimeCodeVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_clear(_this: *mut usd_TimeCodeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_pop_back(_this: *mut usd_TimeCodeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_op_index(
        _this: *const usd_TimeCodeVector_t,
        __n: usize,
        _result: *mut *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_default(
        _result: *mut *mut usd_TimeCodeVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_TimeCodeVector_dtor(_this: *mut usd_TimeCodeVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_AddVariant(
        _this: *mut usd_UsdVariantSet_t,
        variantName: *const std_String_t,
        position: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_GetVariantNames(
        _this: *const usd_UsdVariantSet_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_HasAuthoredVariant(
        _this: *const usd_UsdVariantSet_t,
        variantName: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_GetVariantSelection(
        _this: *const usd_UsdVariantSet_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_HasAuthoredVariantSelection(
        _this: *const usd_UsdVariantSet_t,
        value: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_SetVariantSelection(
        _this: *mut usd_UsdVariantSet_t,
        variantName: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_ClearVariantSelection(
        _this: *mut usd_UsdVariantSet_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_BlockVariantSelection(
        _this: *mut usd_UsdVariantSet_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_GetVariantEditTarget(
        _this: *const usd_UsdVariantSet_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_EditTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_GetVariantEditContext(
        _this: *const usd_UsdVariantSet_t,
        layer: *const sdf_LayerHandle_t,
        _result: *mut *mut usd_StageEditTargetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_GetPrim(
        _this: *const usd_UsdVariantSet_t,
        _result: *mut *const usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_GetName(
        _this: *const usd_UsdVariantSet_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_IsValid(
        _this: *const usd_UsdVariantSet_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_op_bool(
        _this: *const usd_UsdVariantSet_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSet_dtor(_this: *mut usd_UsdVariantSet_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_AddVariantSet(
        _this: *mut usd_UsdVariantSets_t,
        variantSetName: *const std_String_t,
        position: ::std::os::raw::c_uint,
        _result: *mut *mut usd_UsdVariantSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_GetNames_into(
        _this: *const usd_UsdVariantSets_t,
        names: *mut std_StringVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_GetNames(
        _this: *const usd_UsdVariantSets_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_op_index(
        _this: *const usd_UsdVariantSets_t,
        variantSetName: *const std_String_t,
        _result: *mut *mut usd_UsdVariantSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_GetVariantSet(
        _this: *const usd_UsdVariantSets_t,
        variantSetName: *const std_String_t,
        _result: *mut *mut usd_UsdVariantSet_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_HasVariantSet(
        _this: *const usd_UsdVariantSets_t,
        variantSetName: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_GetVariantSelection(
        _this: *const usd_UsdVariantSets_t,
        variantSetName: *const std_String_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_SetSelection(
        _this: *mut usd_UsdVariantSets_t,
        variantSetName: *const std_String_t,
        variantName: *const std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_GetAllVariantSelections(
        _this: *const usd_UsdVariantSets_t,
        _result: *mut *mut sdf_FileFormatFileFormatArguments_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdVariantSets_dtor(_this: *mut usd_UsdVariantSets_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_StageEditTargetPair_dtor(
        _this: *mut usd_StageEditTargetPair_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdIsSubtype(
        baseType: ::std::os::raw::c_uint,
        subType: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdIsConvertible(
        from: ::std::os::raw::c_uint,
        to: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdIsConcrete(
        type_: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetProperties(
        prim: *mut usd_Prim_t,
        _result: *mut *mut usd_PropertyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Prim_GetAuthoredProperties(
        prim: *mut usd_Prim_t,
        _result: *mut *mut usd_PropertyVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_PrimSiblingIterator_op_eq(
        lhs: *const usd_PrimSiblingIterator_t,
        rhs: *const usd_PrimSiblingIterator_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdSchemaRegistrySchemaInfo_identifier(
        info: *const usd_SchemaRegistrySchemaInfo_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdSchemaRegistrySchemaInfo_type(
        info: *const usd_SchemaRegistrySchemaInfo_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdSchemaRegistrySchemaInfo_family(
        info: *const usd_SchemaRegistrySchemaInfo_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdSchemaRegistrySchemaInfo_version(
        info: *const usd_SchemaRegistrySchemaInfo_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_UsdSchemaRegistrySchemaInfo_kind(
        info: *const usd_SchemaRegistrySchemaInfo_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_Open(
        filename: *const ::std::os::raw::c_char,
        loadSet: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usd_Stage_CreateNew(
        filename: *const ::std::os::raw::c_char,
        loadSet: ::std::os::raw::c_uint,
        _result: *mut *mut usd_StageRefPtr_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetTypeAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateTypeAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetBasisAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateBasisAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetWrapAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateWrapAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_BasisCurves_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_dtor(_this: *mut usdGeom_BasisCurves_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_IsConcrete(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_IsTyped(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_IsAPISchema(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_IsAppliedAPISchema(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_IsMultipleApplyAPISchema(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetSchemaKind(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetPrim(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetPath(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_op_bool(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetVisibilityAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateVisibilityAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetPurposeAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreatePurposeAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetProxyPrimRel(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateProxyPrimRel(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_MakeVisible(
        _this: *const usdGeom_BasisCurves_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_MakeInvisible(
        _this: *const usdGeom_BasisCurves_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputeVisibility(
        _this: *const usdGeom_BasisCurves_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetPurposeVisibilityAttr(
        _this: *const usdGeom_BasisCurves_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputePurposeInfo(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_BasisCurves_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputePurpose(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputeProxyPrim(
        _this: *const usdGeom_BasisCurves_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_SetProxyPrim(
        _this: *const usdGeom_BasisCurves_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputeWorldBound(
        _this: *const usdGeom_BasisCurves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputeLocalBound(
        _this: *const usdGeom_BasisCurves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputeUntransformedBound(
        _this: *const usdGeom_BasisCurves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputeLocalToWorldTransform(
        _this: *const usdGeom_BasisCurves_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputeParentToWorldTransform(
        _this: *const usdGeom_BasisCurves_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetXformOpOrderAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddXformOp(
        _this: *const usdGeom_BasisCurves_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddTranslateOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddScaleOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddRotateXOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddRotateYOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddRotateZOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddRotateXYZOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddRotateXZYOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddRotateYXZOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddRotateYZXOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddRotateZXYOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddRotateZYXOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddOrientOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_AddTransformOp(
        _this: *const usdGeom_BasisCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_SetResetXformStack(
        _this: *const usdGeom_BasisCurves_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_SetXformOpOrder(
        _this: *const usdGeom_BasisCurves_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetOrderedXformOps(
        _this: *const usdGeom_BasisCurves_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ClearXformOpOrder(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_MakeMatrixXform(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_TransformMightBeTimeVarying(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_BasisCurves_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetTimeSamples(
        _this: *const usdGeom_BasisCurves_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetTimeSamplesInInterval(
        _this: *const usdGeom_BasisCurves_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetLocalTransformation(
        _this: *const usdGeom_BasisCurves_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetLocalTransformation_with_ops(
        _this: *const usdGeom_BasisCurves_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetExtentAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateExtentAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetDisplayColorAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateDisplayColorAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetDisplayOpacityAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateDisplayOpacityAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetDoubleSidedAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateDoubleSidedAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetOrientationAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateOrientationAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetDisplayColorPrimvar(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateDisplayColorPrimvar(
        _this: *const usdGeom_BasisCurves_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetPointsAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreatePointsAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetVelocitiesAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateVelocitiesAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetAccelerationsAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateAccelerationsAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetNormalsAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateNormalsAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetNormalsInterpolation(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_SetNormalsInterpolation(
        _this: *mut usdGeom_BasisCurves_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_ComputePointsAtTime(
        _this: *const usdGeom_BasisCurves_t,
        points: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetCurveVertexCountsAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateCurveVertexCountsAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetWidthsAttr(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_CreateWidthsAttr(
        _this: *const usdGeom_BasisCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetWidthsInterpolation(
        _this: *const usdGeom_BasisCurves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_SetWidthsInterpolation(
        _this: *mut usdGeom_BasisCurves_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BasisCurves_GetCurveCount(
        _this: *const usdGeom_BasisCurves_t,
        timeCode: usd_TimeCode_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputeWorldBound(
        _this: *mut usdGeom_BBoxCache_t,
        prim: *const usd_Prim_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputeRelativeBound(
        _this: *mut usdGeom_BBoxCache_t,
        prim: *const usd_Prim_t,
        relativeToAncestorPrim: *const usd_Prim_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputeLocalBound(
        _this: *mut usdGeom_BBoxCache_t,
        prim: *const usd_Prim_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputeUntransformedBound(
        _this: *mut usdGeom_BBoxCache_t,
        prim: *const usd_Prim_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputePointInstanceWorldBound(
        _this: *mut usdGeom_BBoxCache_t,
        instancer: *const usdGeom_PointInstancer_t,
        instanceId: i64,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputePointInstanceWorldBounds(
        _this: *mut usdGeom_BBoxCache_t,
        instancer: *const usdGeom_PointInstancer_t,
        instanceIdBegin: *const i64,
        numIds: usize,
        result: *mut gf_BBox3d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputePointInstanceRelativeBounds(
        _this: *mut usdGeom_BBoxCache_t,
        instancer: *const usdGeom_PointInstancer_t,
        instanceIdBegin: *const i64,
        numIds: usize,
        relativeToAncestorPrim: *const usd_Prim_t,
        result: *mut gf_BBox3d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputePointInstanceRelativeBound(
        _this: *mut usdGeom_BBoxCache_t,
        instancer: *const usdGeom_PointInstancer_t,
        instanceId: i64,
        relativeToAncestorPrim: *const usd_Prim_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputePointInstanceLocalBounds(
        _this: *mut usdGeom_BBoxCache_t,
        instancer: *const usdGeom_PointInstancer_t,
        instanceIdBegin: *const i64,
        numIds: usize,
        result: *mut gf_BBox3d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputePointInstanceLocalBound(
        _this: *mut usdGeom_BBoxCache_t,
        instancer: *const usdGeom_PointInstancer_t,
        instanceId: i64,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputePointInstanceUntransformedBounds(
        _this: *mut usdGeom_BBoxCache_t,
        instancer: *const usdGeom_PointInstancer_t,
        instanceIdBegin: *const i64,
        numIds: usize,
        result: *mut gf_BBox3d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ComputePointInstanceUntransformedBound(
        _this: *mut usdGeom_BBoxCache_t,
        instancer: *const usdGeom_PointInstancer_t,
        instanceId: i64,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_Clear(_this: *mut usdGeom_BBoxCache_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_SetIncludedPurposes(
        _this: *mut usdGeom_BBoxCache_t,
        includedPurposes: *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_GetIncludedPurposes(
        _this: *mut usdGeom_BBoxCache_t,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_GetUseExtentsHint(
        _this: *const usdGeom_BBoxCache_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_GetIgnoreVisibility(
        _this: *const usdGeom_BBoxCache_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_SetTime(
        _this: *mut usdGeom_BBoxCache_t,
        time: usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_GetTime(
        _this: *const usdGeom_BBoxCache_t,
        _result: *mut usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_SetBaseTime(
        _this: *mut usdGeom_BBoxCache_t,
        baseTime: usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_GetBaseTime(
        _this: *const usdGeom_BBoxCache_t,
        _result: *mut usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ClearBaseTime(
        _this: *mut usdGeom_BBoxCache_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_HasBaseTime(
        _this: *const usdGeom_BBoxCache_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_ctor(
        time: usd_TimeCode_t,
        includedPurposes: *mut tf_TokenVector_t,
        useExtentsHint: bool,
        ignoreVisibility: bool,
        _result: *mut *mut usdGeom_BBoxCache_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_BBoxCache_dtor(_this: *mut usdGeom_BBoxCache_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PathMatrixHashMap_dtor(
        _this: *mut usdGeom_PathMatrixHashMap_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetExtentAttr(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_CreateExtentAttr(
        _this: *const usdGeom_Boundable_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Boundable_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_dtor(_this: *mut usdGeom_Boundable_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_IsConcrete(
        _this: *const usdGeom_Boundable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_IsTyped(
        _this: *const usdGeom_Boundable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_IsAPISchema(
        _this: *const usdGeom_Boundable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_IsAppliedAPISchema(
        _this: *const usdGeom_Boundable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Boundable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetSchemaKind(
        _this: *const usdGeom_Boundable_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetPrim(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetPath(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_op_bool(
        _this: *const usdGeom_Boundable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetVisibilityAttr(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_CreateVisibilityAttr(
        _this: *const usdGeom_Boundable_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetPurposeAttr(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_CreatePurposeAttr(
        _this: *const usdGeom_Boundable_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetProxyPrimRel(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_CreateProxyPrimRel(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_MakeVisible(
        _this: *const usdGeom_Boundable_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_MakeInvisible(
        _this: *const usdGeom_Boundable_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputeVisibility(
        _this: *const usdGeom_Boundable_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Boundable_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputePurposeInfo(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Boundable_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputePurpose(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputeProxyPrim(
        _this: *const usdGeom_Boundable_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_SetProxyPrim(
        _this: *const usdGeom_Boundable_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputeWorldBound(
        _this: *const usdGeom_Boundable_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputeLocalBound(
        _this: *const usdGeom_Boundable_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputeUntransformedBound(
        _this: *const usdGeom_Boundable_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Boundable_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ComputeParentToWorldTransform(
        _this: *const usdGeom_Boundable_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetXformOpOrderAttr(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddXformOp(
        _this: *const usdGeom_Boundable_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddTranslateOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddScaleOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddRotateXOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddRotateYOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddRotateZOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddRotateXYZOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddRotateXZYOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddRotateYXZOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddRotateYZXOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddRotateZXYOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddRotateZYXOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddOrientOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_AddTransformOp(
        _this: *const usdGeom_Boundable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_SetResetXformStack(
        _this: *const usdGeom_Boundable_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_SetXformOpOrder(
        _this: *const usdGeom_Boundable_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetOrderedXformOps(
        _this: *const usdGeom_Boundable_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_ClearXformOpOrder(
        _this: *const usdGeom_Boundable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_MakeMatrixXform(
        _this: *const usdGeom_Boundable_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_TransformMightBeTimeVarying(
        _this: *const usdGeom_Boundable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Boundable_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetTimeSamples(
        _this: *const usdGeom_Boundable_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetTimeSamplesInInterval(
        _this: *const usdGeom_Boundable_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetLocalTransformation(
        _this: *const usdGeom_Boundable_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Boundable_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Boundable_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetProjectionAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateProjectionAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetHorizontalApertureAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateHorizontalApertureAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetVerticalApertureAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateVerticalApertureAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetHorizontalApertureOffsetAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateHorizontalApertureOffsetAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetVerticalApertureOffsetAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateVerticalApertureOffsetAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetFocalLengthAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateFocalLengthAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetClippingRangeAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateClippingRangeAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetClippingPlanesAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateClippingPlanesAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetFStopAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateFStopAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetFocusDistanceAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateFocusDistanceAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetStereoRoleAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateStereoRoleAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetShutterOpenAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateShutterOpenAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetShutterCloseAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateShutterCloseAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetExposureAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateExposureAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetCamera(
        _this: *const usdGeom_Camera_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut gf_Camera_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_SetFromCamera(
        _this: *mut usdGeom_Camera_t,
        camera: *const gf_Camera_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Camera_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_dtor(_this: *mut usdGeom_Camera_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_IsConcrete(
        _this: *const usdGeom_Camera_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_IsTyped(
        _this: *const usdGeom_Camera_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_IsAPISchema(
        _this: *const usdGeom_Camera_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_IsAppliedAPISchema(
        _this: *const usdGeom_Camera_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Camera_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetSchemaKind(
        _this: *const usdGeom_Camera_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetPrim(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetPath(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Camera_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_op_bool(
        _this: *const usdGeom_Camera_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetVisibilityAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateVisibilityAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetPurposeAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreatePurposeAttr(
        _this: *const usdGeom_Camera_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetProxyPrimRel(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_CreateProxyPrimRel(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_MakeVisible(
        _this: *const usdGeom_Camera_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_MakeInvisible(
        _this: *const usdGeom_Camera_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputeVisibility(
        _this: *const usdGeom_Camera_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Camera_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputePurposeInfo(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Camera_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputePurpose(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputeProxyPrim(
        _this: *const usdGeom_Camera_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_SetProxyPrim(
        _this: *const usdGeom_Camera_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputeWorldBound(
        _this: *const usdGeom_Camera_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputeLocalBound(
        _this: *const usdGeom_Camera_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputeUntransformedBound(
        _this: *const usdGeom_Camera_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Camera_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ComputeParentToWorldTransform(
        _this: *const usdGeom_Camera_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetXformOpOrderAttr(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddXformOp(
        _this: *const usdGeom_Camera_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddTranslateOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddScaleOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddRotateXOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddRotateYOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddRotateZOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddRotateXYZOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddRotateXZYOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddRotateYXZOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddRotateYZXOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddRotateZXYOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddRotateZYXOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddOrientOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_AddTransformOp(
        _this: *const usdGeom_Camera_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_SetResetXformStack(
        _this: *const usdGeom_Camera_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_SetXformOpOrder(
        _this: *const usdGeom_Camera_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetOrderedXformOps(
        _this: *const usdGeom_Camera_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_ClearXformOpOrder(
        _this: *const usdGeom_Camera_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_MakeMatrixXform(
        _this: *const usdGeom_Camera_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_TransformMightBeTimeVarying(
        _this: *const usdGeom_Camera_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Camera_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetTimeSamples(
        _this: *const usdGeom_Camera_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetTimeSamplesInInterval(
        _this: *const usdGeom_Camera_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetLocalTransformation(
        _this: *const usdGeom_Camera_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Camera_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Camera_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetHeightAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateHeightAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetRadiusAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateRadiusAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetAxisAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateAxisAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Capsule_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_dtor(_this: *mut usdGeom_Capsule_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_IsConcrete(
        _this: *const usdGeom_Capsule_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_IsTyped(
        _this: *const usdGeom_Capsule_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_IsAPISchema(
        _this: *const usdGeom_Capsule_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_IsAppliedAPISchema(
        _this: *const usdGeom_Capsule_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Capsule_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetSchemaKind(
        _this: *const usdGeom_Capsule_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetPrim(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetPath(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_op_bool(
        _this: *const usdGeom_Capsule_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetVisibilityAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateVisibilityAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetPurposeAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreatePurposeAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetProxyPrimRel(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateProxyPrimRel(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_MakeVisible(
        _this: *const usdGeom_Capsule_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_MakeInvisible(
        _this: *const usdGeom_Capsule_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputeVisibility(
        _this: *const usdGeom_Capsule_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Capsule_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputePurposeInfo(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Capsule_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputePurpose(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputeProxyPrim(
        _this: *const usdGeom_Capsule_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_SetProxyPrim(
        _this: *const usdGeom_Capsule_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputeWorldBound(
        _this: *const usdGeom_Capsule_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputeLocalBound(
        _this: *const usdGeom_Capsule_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputeUntransformedBound(
        _this: *const usdGeom_Capsule_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Capsule_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ComputeParentToWorldTransform(
        _this: *const usdGeom_Capsule_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetXformOpOrderAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddXformOp(
        _this: *const usdGeom_Capsule_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddTranslateOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddScaleOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddRotateXOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddRotateYOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddRotateZOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddRotateXYZOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddRotateXZYOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddRotateYXZOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddRotateYZXOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddRotateZXYOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddRotateZYXOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddOrientOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_AddTransformOp(
        _this: *const usdGeom_Capsule_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_SetResetXformStack(
        _this: *const usdGeom_Capsule_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_SetXformOpOrder(
        _this: *const usdGeom_Capsule_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetOrderedXformOps(
        _this: *const usdGeom_Capsule_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_ClearXformOpOrder(
        _this: *const usdGeom_Capsule_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_MakeMatrixXform(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_TransformMightBeTimeVarying(
        _this: *const usdGeom_Capsule_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Capsule_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetTimeSamples(
        _this: *const usdGeom_Capsule_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetTimeSamplesInInterval(
        _this: *const usdGeom_Capsule_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetLocalTransformation(
        _this: *const usdGeom_Capsule_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Capsule_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetExtentAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateExtentAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetDisplayColorAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateDisplayColorAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetDisplayOpacityAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetDoubleSidedAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateDoubleSidedAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetOrientationAttr(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateOrientationAttr(
        _this: *const usdGeom_Capsule_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_GetDisplayColorPrimvar(
        _this: *const usdGeom_Capsule_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Capsule_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Capsule_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetHeightAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateHeightAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetRadiusAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateRadiusAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetAxisAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateAxisAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Cone_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_dtor(_this: *mut usdGeom_Cone_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_IsConcrete(
        _this: *const usdGeom_Cone_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_IsTyped(
        _this: *const usdGeom_Cone_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_IsAPISchema(
        _this: *const usdGeom_Cone_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_IsAppliedAPISchema(
        _this: *const usdGeom_Cone_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Cone_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetSchemaKind(
        _this: *const usdGeom_Cone_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetPrim(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetPath(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Cone_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_op_bool(
        _this: *const usdGeom_Cone_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetVisibilityAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateVisibilityAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetPurposeAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreatePurposeAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetProxyPrimRel(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateProxyPrimRel(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_MakeVisible(
        _this: *const usdGeom_Cone_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_MakeInvisible(
        _this: *const usdGeom_Cone_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputeVisibility(
        _this: *const usdGeom_Cone_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Cone_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputePurposeInfo(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Cone_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputePurpose(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputeProxyPrim(
        _this: *const usdGeom_Cone_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_SetProxyPrim(
        _this: *const usdGeom_Cone_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputeWorldBound(
        _this: *const usdGeom_Cone_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputeLocalBound(
        _this: *const usdGeom_Cone_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputeUntransformedBound(
        _this: *const usdGeom_Cone_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Cone_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ComputeParentToWorldTransform(
        _this: *const usdGeom_Cone_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetXformOpOrderAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddXformOp(
        _this: *const usdGeom_Cone_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddTranslateOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddScaleOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddRotateXOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddRotateYOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddRotateZOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddRotateXYZOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddRotateXZYOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddRotateYXZOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddRotateYZXOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddRotateZXYOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddRotateZYXOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddOrientOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_AddTransformOp(
        _this: *const usdGeom_Cone_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_SetResetXformStack(
        _this: *const usdGeom_Cone_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_SetXformOpOrder(
        _this: *const usdGeom_Cone_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetOrderedXformOps(
        _this: *const usdGeom_Cone_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_ClearXformOpOrder(
        _this: *const usdGeom_Cone_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_MakeMatrixXform(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_TransformMightBeTimeVarying(
        _this: *const usdGeom_Cone_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Cone_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetTimeSamples(
        _this: *const usdGeom_Cone_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetTimeSamplesInInterval(
        _this: *const usdGeom_Cone_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetLocalTransformation(
        _this: *const usdGeom_Cone_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Cone_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetExtentAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateExtentAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetDisplayColorAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateDisplayColorAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetDisplayOpacityAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetDoubleSidedAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateDoubleSidedAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetOrientationAttr(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateOrientationAttr(
        _this: *const usdGeom_Cone_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_GetDisplayColorPrimvar(
        _this: *const usdGeom_Cone_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cone_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Cone_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_IsValid(
        attr: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_GetAttr(
        _this: *const usdGeom_ConstraintTarget_t,
        _result: *mut *const usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_IsDefined(
        _this: *const usdGeom_ConstraintTarget_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_Get(
        _this: *const usdGeom_ConstraintTarget_t,
        value: *mut gf_Matrix4d_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_Set(
        _this: *const usdGeom_ConstraintTarget_t,
        value: *const gf_Matrix4d_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_GetIdentifier(
        _this: *const usdGeom_ConstraintTarget_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_SetIdentifier(
        _this: *mut usdGeom_ConstraintTarget_t,
        identifier: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_ComputeInWorldSpace(
        _this: *const usdGeom_ConstraintTarget_t,
        time: usd_TimeCode_t,
        xfCache: *mut usdGeom_XformCache_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_GetConstraintAttrName(
        constraintName: *const std_String_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_new(
        param00: *const usd_Attribute_t,
        _result: *mut *mut usdGeom_ConstraintTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTarget_dtor(
        _this: *mut usdGeom_ConstraintTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_data(
        _this: *mut usdGeom_ConstraintTargetVector_t,
        _result: *mut *mut usdGeom_ConstraintTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_data_const(
        _this: *const usdGeom_ConstraintTargetVector_t,
        _result: *mut *const usdGeom_ConstraintTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_empty(
        _this: *const usdGeom_ConstraintTargetVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_size(
        _this: *const usdGeom_ConstraintTargetVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_max_size(
        _this: *const usdGeom_ConstraintTargetVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_capacity(
        _this: *const usdGeom_ConstraintTargetVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_clear(
        _this: *mut usdGeom_ConstraintTargetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_pop_back(
        _this: *mut usdGeom_ConstraintTargetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_op_index(
        _this: *const usdGeom_ConstraintTargetVector_t,
        __n: usize,
        _result: *mut *const usdGeom_ConstraintTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_default(
        _result: *mut *mut usdGeom_ConstraintTargetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ConstraintTargetVector_dtor(
        _this: *mut usdGeom_ConstraintTargetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetSizeAttr(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreateSizeAttr(
        _this: *const usdGeom_Cube_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Cube_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_dtor(_this: *mut usdGeom_Cube_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_IsConcrete(
        _this: *const usdGeom_Cube_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_IsTyped(
        _this: *const usdGeom_Cube_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_IsAPISchema(
        _this: *const usdGeom_Cube_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_IsAppliedAPISchema(
        _this: *const usdGeom_Cube_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Cube_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetSchemaKind(
        _this: *const usdGeom_Cube_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetPrim(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetPath(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Cube_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_op_bool(
        _this: *const usdGeom_Cube_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetVisibilityAttr(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreateVisibilityAttr(
        _this: *const usdGeom_Cube_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetPurposeAttr(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreatePurposeAttr(
        _this: *const usdGeom_Cube_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetProxyPrimRel(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreateProxyPrimRel(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_MakeVisible(
        _this: *const usdGeom_Cube_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_MakeInvisible(
        _this: *const usdGeom_Cube_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputeVisibility(
        _this: *const usdGeom_Cube_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Cube_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputePurposeInfo(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Cube_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputePurpose(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputeProxyPrim(
        _this: *const usdGeom_Cube_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_SetProxyPrim(
        _this: *const usdGeom_Cube_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputeWorldBound(
        _this: *const usdGeom_Cube_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputeLocalBound(
        _this: *const usdGeom_Cube_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputeUntransformedBound(
        _this: *const usdGeom_Cube_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Cube_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ComputeParentToWorldTransform(
        _this: *const usdGeom_Cube_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetXformOpOrderAttr(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddXformOp(
        _this: *const usdGeom_Cube_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddTranslateOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddScaleOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddRotateXOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddRotateYOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddRotateZOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddRotateXYZOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddRotateXZYOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddRotateYXZOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddRotateYZXOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddRotateZXYOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddRotateZYXOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddOrientOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_AddTransformOp(
        _this: *const usdGeom_Cube_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_SetResetXformStack(
        _this: *const usdGeom_Cube_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_SetXformOpOrder(
        _this: *const usdGeom_Cube_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetOrderedXformOps(
        _this: *const usdGeom_Cube_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_ClearXformOpOrder(
        _this: *const usdGeom_Cube_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_MakeMatrixXform(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_TransformMightBeTimeVarying(
        _this: *const usdGeom_Cube_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Cube_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetTimeSamples(
        _this: *const usdGeom_Cube_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetTimeSamplesInInterval(
        _this: *const usdGeom_Cube_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetLocalTransformation(
        _this: *const usdGeom_Cube_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Cube_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetExtentAttr(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreateExtentAttr(
        _this: *const usdGeom_Cube_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetDisplayColorAttr(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreateDisplayColorAttr(
        _this: *const usdGeom_Cube_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetDisplayOpacityAttr(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Cube_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetDoubleSidedAttr(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreateDoubleSidedAttr(
        _this: *const usdGeom_Cube_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetOrientationAttr(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreateOrientationAttr(
        _this: *const usdGeom_Cube_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_GetDisplayColorPrimvar(
        _this: *const usdGeom_Cube_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cube_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Cube_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetCurveVertexCountsAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateCurveVertexCountsAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetWidthsAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateWidthsAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetWidthsInterpolation(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_SetWidthsInterpolation(
        _this: *mut usdGeom_Curves_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetCurveCount(
        _this: *const usdGeom_Curves_t,
        timeCode: usd_TimeCode_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Curves_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_dtor(_this: *mut usdGeom_Curves_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_IsConcrete(
        _this: *const usdGeom_Curves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_IsTyped(
        _this: *const usdGeom_Curves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_IsAPISchema(
        _this: *const usdGeom_Curves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_IsAppliedAPISchema(
        _this: *const usdGeom_Curves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Curves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetSchemaKind(
        _this: *const usdGeom_Curves_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetPrim(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetPath(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Curves_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_op_bool(
        _this: *const usdGeom_Curves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetVisibilityAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateVisibilityAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetPurposeAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreatePurposeAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetProxyPrimRel(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateProxyPrimRel(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_MakeVisible(
        _this: *const usdGeom_Curves_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_MakeInvisible(
        _this: *const usdGeom_Curves_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputeVisibility(
        _this: *const usdGeom_Curves_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Curves_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputePurposeInfo(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Curves_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputePurpose(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputeProxyPrim(
        _this: *const usdGeom_Curves_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_SetProxyPrim(
        _this: *const usdGeom_Curves_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputeWorldBound(
        _this: *const usdGeom_Curves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputeLocalBound(
        _this: *const usdGeom_Curves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputeUntransformedBound(
        _this: *const usdGeom_Curves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Curves_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputeParentToWorldTransform(
        _this: *const usdGeom_Curves_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetXformOpOrderAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddXformOp(
        _this: *const usdGeom_Curves_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddTranslateOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddScaleOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddRotateXOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddRotateYOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddRotateZOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddRotateXYZOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddRotateXZYOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddRotateYXZOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddRotateYZXOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddRotateZXYOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddRotateZYXOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddOrientOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_AddTransformOp(
        _this: *const usdGeom_Curves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_SetResetXformStack(
        _this: *const usdGeom_Curves_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_SetXformOpOrder(
        _this: *const usdGeom_Curves_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetOrderedXformOps(
        _this: *const usdGeom_Curves_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ClearXformOpOrder(
        _this: *const usdGeom_Curves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_MakeMatrixXform(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_TransformMightBeTimeVarying(
        _this: *const usdGeom_Curves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Curves_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetTimeSamples(
        _this: *const usdGeom_Curves_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetTimeSamplesInInterval(
        _this: *const usdGeom_Curves_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetLocalTransformation(
        _this: *const usdGeom_Curves_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Curves_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetExtentAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateExtentAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetDisplayColorAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateDisplayColorAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetDisplayOpacityAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetDoubleSidedAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateDoubleSidedAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetOrientationAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateOrientationAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetDisplayColorPrimvar(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Curves_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetPointsAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreatePointsAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetVelocitiesAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateVelocitiesAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetAccelerationsAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateAccelerationsAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetNormalsAttr(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_CreateNormalsAttr(
        _this: *const usdGeom_Curves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_GetNormalsInterpolation(
        _this: *const usdGeom_Curves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_SetNormalsInterpolation(
        _this: *mut usdGeom_Curves_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Curves_ComputePointsAtTime(
        _this: *const usdGeom_Curves_t,
        points: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetHeightAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateHeightAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetRadiusAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateRadiusAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetAxisAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateAxisAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Cylinder_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_dtor(_this: *mut usdGeom_Cylinder_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_IsConcrete(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_IsTyped(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_IsAPISchema(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_IsAppliedAPISchema(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetSchemaKind(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetPrim(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetPath(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_op_bool(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetVisibilityAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateVisibilityAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetPurposeAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreatePurposeAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetProxyPrimRel(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateProxyPrimRel(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_MakeVisible(
        _this: *const usdGeom_Cylinder_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_MakeInvisible(
        _this: *const usdGeom_Cylinder_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputeVisibility(
        _this: *const usdGeom_Cylinder_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Cylinder_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputePurposeInfo(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Cylinder_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputePurpose(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputeProxyPrim(
        _this: *const usdGeom_Cylinder_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_SetProxyPrim(
        _this: *const usdGeom_Cylinder_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputeWorldBound(
        _this: *const usdGeom_Cylinder_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputeLocalBound(
        _this: *const usdGeom_Cylinder_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputeUntransformedBound(
        _this: *const usdGeom_Cylinder_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Cylinder_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ComputeParentToWorldTransform(
        _this: *const usdGeom_Cylinder_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetXformOpOrderAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddXformOp(
        _this: *const usdGeom_Cylinder_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddTranslateOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddScaleOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddRotateXOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddRotateYOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddRotateZOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddRotateXYZOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddRotateXZYOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddRotateYXZOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddRotateYZXOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddRotateZXYOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddRotateZYXOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddOrientOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_AddTransformOp(
        _this: *const usdGeom_Cylinder_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_SetResetXformStack(
        _this: *const usdGeom_Cylinder_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_SetXformOpOrder(
        _this: *const usdGeom_Cylinder_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetOrderedXformOps(
        _this: *const usdGeom_Cylinder_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_ClearXformOpOrder(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_MakeMatrixXform(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_TransformMightBeTimeVarying(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Cylinder_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetTimeSamples(
        _this: *const usdGeom_Cylinder_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetTimeSamplesInInterval(
        _this: *const usdGeom_Cylinder_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetLocalTransformation(
        _this: *const usdGeom_Cylinder_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Cylinder_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetExtentAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateExtentAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetDisplayColorAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateDisplayColorAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetDisplayOpacityAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetDoubleSidedAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateDoubleSidedAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetOrientationAttr(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateOrientationAttr(
        _this: *const usdGeom_Cylinder_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_GetDisplayColorPrimvar(
        _this: *const usdGeom_Cylinder_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Cylinder_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Cylinder_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetDisplayColorAttr(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_CreateDisplayColorAttr(
        _this: *const usdGeom_Gprim_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetDisplayOpacityAttr(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Gprim_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetDoubleSidedAttr(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_CreateDoubleSidedAttr(
        _this: *const usdGeom_Gprim_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetOrientationAttr(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_CreateOrientationAttr(
        _this: *const usdGeom_Gprim_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetDisplayColorPrimvar(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Gprim_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Gprim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_dtor(_this: *mut usdGeom_Gprim_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_IsConcrete(
        _this: *const usdGeom_Gprim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_IsTyped(
        _this: *const usdGeom_Gprim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_IsAPISchema(
        _this: *const usdGeom_Gprim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_IsAppliedAPISchema(
        _this: *const usdGeom_Gprim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Gprim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetSchemaKind(
        _this: *const usdGeom_Gprim_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetPrim(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetPath(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_op_bool(
        _this: *const usdGeom_Gprim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetVisibilityAttr(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_CreateVisibilityAttr(
        _this: *const usdGeom_Gprim_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetPurposeAttr(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_CreatePurposeAttr(
        _this: *const usdGeom_Gprim_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetProxyPrimRel(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_CreateProxyPrimRel(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_MakeVisible(
        _this: *const usdGeom_Gprim_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_MakeInvisible(
        _this: *const usdGeom_Gprim_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputeVisibility(
        _this: *const usdGeom_Gprim_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Gprim_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputePurposeInfo(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Gprim_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputePurpose(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputeProxyPrim(
        _this: *const usdGeom_Gprim_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_SetProxyPrim(
        _this: *const usdGeom_Gprim_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputeWorldBound(
        _this: *const usdGeom_Gprim_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputeLocalBound(
        _this: *const usdGeom_Gprim_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputeUntransformedBound(
        _this: *const usdGeom_Gprim_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Gprim_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ComputeParentToWorldTransform(
        _this: *const usdGeom_Gprim_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetXformOpOrderAttr(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddXformOp(
        _this: *const usdGeom_Gprim_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddTranslateOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddScaleOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddRotateXOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddRotateYOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddRotateZOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddRotateXYZOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddRotateXZYOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddRotateYXZOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddRotateYZXOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddRotateZXYOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddRotateZYXOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddOrientOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_AddTransformOp(
        _this: *const usdGeom_Gprim_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_SetResetXformStack(
        _this: *const usdGeom_Gprim_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_SetXformOpOrder(
        _this: *const usdGeom_Gprim_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetOrderedXformOps(
        _this: *const usdGeom_Gprim_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_ClearXformOpOrder(
        _this: *const usdGeom_Gprim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_MakeMatrixXform(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_TransformMightBeTimeVarying(
        _this: *const usdGeom_Gprim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Gprim_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetTimeSamples(
        _this: *const usdGeom_Gprim_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetTimeSamplesInInterval(
        _this: *const usdGeom_Gprim_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetLocalTransformation(
        _this: *const usdGeom_Gprim_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Gprim_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_GetExtentAttr(
        _this: *const usdGeom_Gprim_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Gprim_CreateExtentAttr(
        _this: *const usdGeom_Gprim_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetTangentsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateTangentsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_HermiteCurves_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_dtor(_this: *mut usdGeom_HermiteCurves_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_IsConcrete(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_IsTyped(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_IsAPISchema(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_IsAppliedAPISchema(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_IsMultipleApplyAPISchema(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetSchemaKind(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetPrim(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetPath(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_op_bool(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetVisibilityAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateVisibilityAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetPurposeAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreatePurposeAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetProxyPrimRel(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateProxyPrimRel(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_MakeVisible(
        _this: *const usdGeom_HermiteCurves_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_MakeInvisible(
        _this: *const usdGeom_HermiteCurves_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputeVisibility(
        _this: *const usdGeom_HermiteCurves_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetPurposeVisibilityAttr(
        _this: *const usdGeom_HermiteCurves_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputePurposeInfo(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_HermiteCurves_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputePurpose(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputeProxyPrim(
        _this: *const usdGeom_HermiteCurves_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_SetProxyPrim(
        _this: *const usdGeom_HermiteCurves_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputeWorldBound(
        _this: *const usdGeom_HermiteCurves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputeLocalBound(
        _this: *const usdGeom_HermiteCurves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputeUntransformedBound(
        _this: *const usdGeom_HermiteCurves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputeLocalToWorldTransform(
        _this: *const usdGeom_HermiteCurves_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputeParentToWorldTransform(
        _this: *const usdGeom_HermiteCurves_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetXformOpOrderAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddXformOp(
        _this: *const usdGeom_HermiteCurves_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddTranslateOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddScaleOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddRotateXOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddRotateYOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddRotateZOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddRotateXYZOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddRotateXZYOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddRotateYXZOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddRotateYZXOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddRotateZXYOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddRotateZYXOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddOrientOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_AddTransformOp(
        _this: *const usdGeom_HermiteCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_SetResetXformStack(
        _this: *const usdGeom_HermiteCurves_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_SetXformOpOrder(
        _this: *const usdGeom_HermiteCurves_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetOrderedXformOps(
        _this: *const usdGeom_HermiteCurves_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ClearXformOpOrder(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_MakeMatrixXform(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_TransformMightBeTimeVarying(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_HermiteCurves_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetTimeSamples(
        _this: *const usdGeom_HermiteCurves_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetTimeSamplesInInterval(
        _this: *const usdGeom_HermiteCurves_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetLocalTransformation(
        _this: *const usdGeom_HermiteCurves_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetLocalTransformation_with_ops(
        _this: *const usdGeom_HermiteCurves_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetExtentAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateExtentAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetDisplayColorAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateDisplayColorAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetDisplayOpacityAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateDisplayOpacityAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetDoubleSidedAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateDoubleSidedAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetOrientationAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateOrientationAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetDisplayColorPrimvar(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateDisplayColorPrimvar(
        _this: *const usdGeom_HermiteCurves_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetPointsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreatePointsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetVelocitiesAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateVelocitiesAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetAccelerationsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateAccelerationsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetNormalsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateNormalsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetNormalsInterpolation(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_SetNormalsInterpolation(
        _this: *mut usdGeom_HermiteCurves_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_ComputePointsAtTime(
        _this: *const usdGeom_HermiteCurves_t,
        points: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetCurveVertexCountsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateCurveVertexCountsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetWidthsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_CreateWidthsAttr(
        _this: *const usdGeom_HermiteCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetWidthsInterpolation(
        _this: *const usdGeom_HermiteCurves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_SetWidthsInterpolation(
        _this: *mut usdGeom_HermiteCurves_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_HermiteCurves_GetCurveCount(
        _this: *const usdGeom_HermiteCurves_t,
        timeCode: usd_TimeCode_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_GetVisibilityAttr(
        _this: *const usdGeom_Imageable_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_CreateVisibilityAttr(
        _this: *const usdGeom_Imageable_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_GetPurposeAttr(
        _this: *const usdGeom_Imageable_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_CreatePurposeAttr(
        _this: *const usdGeom_Imageable_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_GetProxyPrimRel(
        _this: *const usdGeom_Imageable_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_CreateProxyPrimRel(
        _this: *const usdGeom_Imageable_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_MakeVisible(
        _this: *const usdGeom_Imageable_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_MakeInvisible(
        _this: *const usdGeom_Imageable_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputeVisibility(
        _this: *const usdGeom_Imageable_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Imageable_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputePurposeInfo(
        _this: *const usdGeom_Imageable_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Imageable_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputePurpose(
        _this: *const usdGeom_Imageable_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputeProxyPrim(
        _this: *const usdGeom_Imageable_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_SetProxyPrim(
        _this: *const usdGeom_Imageable_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputeWorldBound(
        _this: *const usdGeom_Imageable_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputeLocalBound(
        _this: *const usdGeom_Imageable_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputeUntransformedBound(
        _this: *const usdGeom_Imageable_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Imageable_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_ComputeParentToWorldTransform(
        _this: *const usdGeom_Imageable_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Imageable_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_dtor(_this: *mut usdGeom_Imageable_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_IsConcrete(
        _this: *const usdGeom_Imageable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_IsTyped(
        _this: *const usdGeom_Imageable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_IsAPISchema(
        _this: *const usdGeom_Imageable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_IsAppliedAPISchema(
        _this: *const usdGeom_Imageable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Imageable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_GetSchemaKind(
        _this: *const usdGeom_Imageable_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_GetPrim(
        _this: *const usdGeom_Imageable_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_GetPath(
        _this: *const usdGeom_Imageable_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Imageable_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Imageable_op_bool(
        _this: *const usdGeom_Imageable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ImageablePurposeInfo_dtor(
        _this: *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetFaceVertexIndicesAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateFaceVertexIndicesAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetFaceVertexCountsAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateFaceVertexCountsAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetSubdivisionSchemeAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateSubdivisionSchemeAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetInterpolateBoundaryAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateInterpolateBoundaryAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetFaceVaryingLinearInterpolationAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateFaceVaryingLinearInterpolationAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetTriangleSubdivisionRuleAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateTriangleSubdivisionRuleAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetHoleIndicesAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateHoleIndicesAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetCornerIndicesAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateCornerIndicesAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetCornerSharpnessesAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateCornerSharpnessesAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetCreaseIndicesAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateCreaseIndicesAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetCreaseLengthsAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateCreaseLengthsAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetCreaseSharpnessesAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateCreaseSharpnessesAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetFaceCount(
        _this: *const usdGeom_Mesh_t,
        timeCode: usd_TimeCode_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Mesh_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_dtor(_this: *mut usdGeom_Mesh_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_IsConcrete(
        _this: *const usdGeom_Mesh_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_IsTyped(
        _this: *const usdGeom_Mesh_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_IsAPISchema(
        _this: *const usdGeom_Mesh_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_IsAppliedAPISchema(
        _this: *const usdGeom_Mesh_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Mesh_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetSchemaKind(
        _this: *const usdGeom_Mesh_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetPrim(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetPath(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_op_bool(
        _this: *const usdGeom_Mesh_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetVisibilityAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateVisibilityAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetPurposeAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreatePurposeAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetProxyPrimRel(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateProxyPrimRel(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_MakeVisible(
        _this: *const usdGeom_Mesh_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_MakeInvisible(
        _this: *const usdGeom_Mesh_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputeVisibility(
        _this: *const usdGeom_Mesh_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Mesh_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputePurposeInfo(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Mesh_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputePurpose(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputeProxyPrim(
        _this: *const usdGeom_Mesh_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_SetProxyPrim(
        _this: *const usdGeom_Mesh_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputeWorldBound(
        _this: *const usdGeom_Mesh_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputeLocalBound(
        _this: *const usdGeom_Mesh_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputeUntransformedBound(
        _this: *const usdGeom_Mesh_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Mesh_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputeParentToWorldTransform(
        _this: *const usdGeom_Mesh_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetXformOpOrderAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddXformOp(
        _this: *const usdGeom_Mesh_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddTranslateOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddScaleOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddRotateXOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddRotateYOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddRotateZOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddRotateXYZOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddRotateXZYOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddRotateYXZOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddRotateYZXOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddRotateZXYOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddRotateZYXOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddOrientOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_AddTransformOp(
        _this: *const usdGeom_Mesh_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_SetResetXformStack(
        _this: *const usdGeom_Mesh_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_SetXformOpOrder(
        _this: *const usdGeom_Mesh_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetOrderedXformOps(
        _this: *const usdGeom_Mesh_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ClearXformOpOrder(
        _this: *const usdGeom_Mesh_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_MakeMatrixXform(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_TransformMightBeTimeVarying(
        _this: *const usdGeom_Mesh_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Mesh_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetTimeSamples(
        _this: *const usdGeom_Mesh_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetTimeSamplesInInterval(
        _this: *const usdGeom_Mesh_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetLocalTransformation(
        _this: *const usdGeom_Mesh_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Mesh_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetExtentAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateExtentAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetDisplayColorAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateDisplayColorAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetDisplayOpacityAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetDoubleSidedAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateDoubleSidedAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetOrientationAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateOrientationAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetDisplayColorPrimvar(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Mesh_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetPointsAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreatePointsAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetVelocitiesAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateVelocitiesAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetAccelerationsAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateAccelerationsAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetNormalsAttr(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_CreateNormalsAttr(
        _this: *const usdGeom_Mesh_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_GetNormalsInterpolation(
        _this: *const usdGeom_Mesh_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_SetNormalsInterpolation(
        _this: *mut usdGeom_Mesh_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Mesh_ComputePointsAtTime(
        _this: *const usdGeom_Mesh_t,
        points: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetModelDrawModeAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateModelDrawModeAttr(
        _this: *const usdGeom_ModelAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetModelDrawModeColorAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateModelDrawModeColorAttr(
        _this: *const usdGeom_ModelAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetModelCardGeometryAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateModelCardGeometryAttr(
        _this: *const usdGeom_ModelAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetModelCardTextureXPosAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateModelCardTextureXPosAttr(
        _this: *const usdGeom_ModelAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetModelCardTextureXNegAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateModelCardTextureXNegAttr(
        _this: *const usdGeom_ModelAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetModelCardTextureYPosAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateModelCardTextureYPosAttr(
        _this: *const usdGeom_ModelAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetModelCardTextureYNegAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateModelCardTextureYNegAttr(
        _this: *const usdGeom_ModelAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetModelCardTextureZPosAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateModelCardTextureZPosAttr(
        _this: *const usdGeom_ModelAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetModelCardTextureZNegAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateModelCardTextureZNegAttr(
        _this: *const usdGeom_ModelAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_ComputeModelDrawMode(
        _this: *const usdGeom_ModelAPI_t,
        parentDrawMode: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetExtentsHint(
        _this: *const usdGeom_ModelAPI_t,
        extents: *mut gf_Vec3fArray_t,
        time: *const usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_SetExtentsHint(
        _this: *const usdGeom_ModelAPI_t,
        extents: *const gf_Vec3fArray_t,
        time: *const usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetExtentsHintAttr(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_ComputeExtentsHint(
        _this: *const usdGeom_ModelAPI_t,
        bboxCache: *mut usdGeom_BBoxCache_t,
        _result: *mut *mut gf_Vec3fArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetConstraintTarget(
        _this: *const usdGeom_ModelAPI_t,
        constraintName: *const std_String_t,
        _result: *mut *mut usdGeom_ConstraintTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetConstraintTargets(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usdGeom_ConstraintTargetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_CreateConstraintTarget(
        _this: *const usdGeom_ModelAPI_t,
        constraintName: *const std_String_t,
        _result: *mut *mut usdGeom_ConstraintTarget_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_ModelAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_dtor(_this: *mut usdGeom_ModelAPI_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_IsConcrete(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_IsTyped(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_IsAPISchema(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_IsAppliedAPISchema(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_IsMultipleApplyAPISchema(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetSchemaKind(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetPrim(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetPath(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_ModelAPI_op_bool(
        _this: *const usdGeom_ModelAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_GetMotionBlurScaleAttr(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_CreateMotionBlurScaleAttr(
        _this: *const usdGeom_MotionAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_GetVelocityScaleAttr(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_CreateVelocityScaleAttr(
        _this: *const usdGeom_MotionAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_GetNonlinearSampleCountAttr(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_CreateNonlinearSampleCountAttr(
        _this: *const usdGeom_MotionAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_ComputeVelocityScale(
        _this: *const usdGeom_MotionAPI_t,
        time: usd_TimeCode_t,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_ComputeMotionBlurScale(
        _this: *const usdGeom_MotionAPI_t,
        time: usd_TimeCode_t,
        _result: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_ComputeNonlinearSampleCount(
        _this: *const usdGeom_MotionAPI_t,
        time: usd_TimeCode_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_MotionAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_dtor(_this: *mut usdGeom_MotionAPI_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_IsConcrete(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_IsTyped(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_IsAPISchema(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_IsAppliedAPISchema(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_IsMultipleApplyAPISchema(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_GetSchemaKind(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_GetPrim(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_GetPath(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_MotionAPI_op_bool(
        _this: *const usdGeom_MotionAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetOrderAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateOrderAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetKnotsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateKnotsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetRangesAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateRangesAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetPointWeightsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreatePointWeightsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_NurbsCurves_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_dtor(_this: *mut usdGeom_NurbsCurves_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_IsConcrete(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_IsTyped(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_IsAPISchema(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_IsAppliedAPISchema(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_IsMultipleApplyAPISchema(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetSchemaKind(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetPrim(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetPath(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_op_bool(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetVisibilityAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateVisibilityAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetPurposeAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreatePurposeAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetProxyPrimRel(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateProxyPrimRel(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_MakeVisible(
        _this: *const usdGeom_NurbsCurves_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_MakeInvisible(
        _this: *const usdGeom_NurbsCurves_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputeVisibility(
        _this: *const usdGeom_NurbsCurves_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetPurposeVisibilityAttr(
        _this: *const usdGeom_NurbsCurves_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputePurposeInfo(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_NurbsCurves_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputePurpose(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputeProxyPrim(
        _this: *const usdGeom_NurbsCurves_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_SetProxyPrim(
        _this: *const usdGeom_NurbsCurves_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputeWorldBound(
        _this: *const usdGeom_NurbsCurves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputeLocalBound(
        _this: *const usdGeom_NurbsCurves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputeUntransformedBound(
        _this: *const usdGeom_NurbsCurves_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputeLocalToWorldTransform(
        _this: *const usdGeom_NurbsCurves_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputeParentToWorldTransform(
        _this: *const usdGeom_NurbsCurves_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetXformOpOrderAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddXformOp(
        _this: *const usdGeom_NurbsCurves_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddTranslateOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddScaleOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddRotateXOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddRotateYOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddRotateZOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddRotateXYZOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddRotateXZYOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddRotateYXZOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddRotateYZXOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddRotateZXYOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddRotateZYXOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddOrientOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_AddTransformOp(
        _this: *const usdGeom_NurbsCurves_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_SetResetXformStack(
        _this: *const usdGeom_NurbsCurves_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_SetXformOpOrder(
        _this: *const usdGeom_NurbsCurves_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetOrderedXformOps(
        _this: *const usdGeom_NurbsCurves_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ClearXformOpOrder(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_MakeMatrixXform(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_TransformMightBeTimeVarying(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_NurbsCurves_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetTimeSamples(
        _this: *const usdGeom_NurbsCurves_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetTimeSamplesInInterval(
        _this: *const usdGeom_NurbsCurves_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetLocalTransformation(
        _this: *const usdGeom_NurbsCurves_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetLocalTransformation_with_ops(
        _this: *const usdGeom_NurbsCurves_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetExtentAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateExtentAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetDisplayColorAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateDisplayColorAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetDisplayOpacityAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateDisplayOpacityAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetDoubleSidedAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateDoubleSidedAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetOrientationAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateOrientationAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetDisplayColorPrimvar(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateDisplayColorPrimvar(
        _this: *const usdGeom_NurbsCurves_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetPointsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreatePointsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetVelocitiesAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateVelocitiesAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetAccelerationsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateAccelerationsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetNormalsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateNormalsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetNormalsInterpolation(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_SetNormalsInterpolation(
        _this: *mut usdGeom_NurbsCurves_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_ComputePointsAtTime(
        _this: *const usdGeom_NurbsCurves_t,
        points: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetCurveVertexCountsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateCurveVertexCountsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetWidthsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_CreateWidthsAttr(
        _this: *const usdGeom_NurbsCurves_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetWidthsInterpolation(
        _this: *const usdGeom_NurbsCurves_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_SetWidthsInterpolation(
        _this: *mut usdGeom_NurbsCurves_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsCurves_GetCurveCount(
        _this: *const usdGeom_NurbsCurves_t,
        timeCode: usd_TimeCode_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetUVertexCountAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateUVertexCountAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetVVertexCountAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateVVertexCountAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetUOrderAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateUOrderAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetVOrderAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateVOrderAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetUKnotsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateUKnotsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetVKnotsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateVKnotsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetUFormAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateUFormAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetVFormAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateVFormAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetURangeAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateURangeAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetVRangeAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateVRangeAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetPointWeightsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreatePointWeightsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetTrimCurveCountsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateTrimCurveCountsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetTrimCurveOrdersAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateTrimCurveOrdersAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetTrimCurveVertexCountsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateTrimCurveVertexCountsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetTrimCurveKnotsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateTrimCurveKnotsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetTrimCurveRangesAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateTrimCurveRangesAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetTrimCurvePointsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateTrimCurvePointsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_NurbsPatch_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_dtor(_this: *mut usdGeom_NurbsPatch_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_IsConcrete(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_IsTyped(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_IsAPISchema(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_IsAppliedAPISchema(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_IsMultipleApplyAPISchema(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetSchemaKind(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetPrim(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetPath(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_op_bool(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetVisibilityAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateVisibilityAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetPurposeAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreatePurposeAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetProxyPrimRel(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateProxyPrimRel(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_MakeVisible(
        _this: *const usdGeom_NurbsPatch_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_MakeInvisible(
        _this: *const usdGeom_NurbsPatch_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputeVisibility(
        _this: *const usdGeom_NurbsPatch_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetPurposeVisibilityAttr(
        _this: *const usdGeom_NurbsPatch_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputePurposeInfo(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_NurbsPatch_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputePurpose(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputeProxyPrim(
        _this: *const usdGeom_NurbsPatch_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_SetProxyPrim(
        _this: *const usdGeom_NurbsPatch_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputeWorldBound(
        _this: *const usdGeom_NurbsPatch_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputeLocalBound(
        _this: *const usdGeom_NurbsPatch_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputeUntransformedBound(
        _this: *const usdGeom_NurbsPatch_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputeLocalToWorldTransform(
        _this: *const usdGeom_NurbsPatch_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputeParentToWorldTransform(
        _this: *const usdGeom_NurbsPatch_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetXformOpOrderAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddXformOp(
        _this: *const usdGeom_NurbsPatch_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddTranslateOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddScaleOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddRotateXOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddRotateYOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddRotateZOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddRotateXYZOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddRotateXZYOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddRotateYXZOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddRotateYZXOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddRotateZXYOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddRotateZYXOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddOrientOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_AddTransformOp(
        _this: *const usdGeom_NurbsPatch_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_SetResetXformStack(
        _this: *const usdGeom_NurbsPatch_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_SetXformOpOrder(
        _this: *const usdGeom_NurbsPatch_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetOrderedXformOps(
        _this: *const usdGeom_NurbsPatch_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ClearXformOpOrder(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_MakeMatrixXform(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_TransformMightBeTimeVarying(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_NurbsPatch_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetTimeSamples(
        _this: *const usdGeom_NurbsPatch_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetTimeSamplesInInterval(
        _this: *const usdGeom_NurbsPatch_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetLocalTransformation(
        _this: *const usdGeom_NurbsPatch_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetLocalTransformation_with_ops(
        _this: *const usdGeom_NurbsPatch_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetExtentAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateExtentAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetDisplayColorAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateDisplayColorAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetDisplayOpacityAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateDisplayOpacityAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetDoubleSidedAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateDoubleSidedAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetOrientationAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateOrientationAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetDisplayColorPrimvar(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateDisplayColorPrimvar(
        _this: *const usdGeom_NurbsPatch_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetPointsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreatePointsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetVelocitiesAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateVelocitiesAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetAccelerationsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateAccelerationsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetNormalsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_CreateNormalsAttr(
        _this: *const usdGeom_NurbsPatch_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_GetNormalsInterpolation(
        _this: *const usdGeom_NurbsPatch_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_SetNormalsInterpolation(
        _this: *mut usdGeom_NurbsPatch_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_NurbsPatch_ComputePointsAtTime(
        _this: *const usdGeom_NurbsPatch_t,
        points: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetWidthAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateWidthAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetLengthAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateLengthAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetAxisAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateAxisAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Plane_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_dtor(_this: *mut usdGeom_Plane_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_IsConcrete(
        _this: *const usdGeom_Plane_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_IsTyped(
        _this: *const usdGeom_Plane_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_IsAPISchema(
        _this: *const usdGeom_Plane_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_IsAppliedAPISchema(
        _this: *const usdGeom_Plane_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Plane_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetSchemaKind(
        _this: *const usdGeom_Plane_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetPrim(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetPath(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Plane_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_op_bool(
        _this: *const usdGeom_Plane_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetVisibilityAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateVisibilityAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetPurposeAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreatePurposeAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetProxyPrimRel(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateProxyPrimRel(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_MakeVisible(
        _this: *const usdGeom_Plane_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_MakeInvisible(
        _this: *const usdGeom_Plane_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputeVisibility(
        _this: *const usdGeom_Plane_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Plane_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputePurposeInfo(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Plane_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputePurpose(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputeProxyPrim(
        _this: *const usdGeom_Plane_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_SetProxyPrim(
        _this: *const usdGeom_Plane_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputeWorldBound(
        _this: *const usdGeom_Plane_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputeLocalBound(
        _this: *const usdGeom_Plane_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputeUntransformedBound(
        _this: *const usdGeom_Plane_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Plane_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ComputeParentToWorldTransform(
        _this: *const usdGeom_Plane_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetXformOpOrderAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddXformOp(
        _this: *const usdGeom_Plane_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddTranslateOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddScaleOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddRotateXOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddRotateYOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddRotateZOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddRotateXYZOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddRotateXZYOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddRotateYXZOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddRotateYZXOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddRotateZXYOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddRotateZYXOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddOrientOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_AddTransformOp(
        _this: *const usdGeom_Plane_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_SetResetXformStack(
        _this: *const usdGeom_Plane_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_SetXformOpOrder(
        _this: *const usdGeom_Plane_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetOrderedXformOps(
        _this: *const usdGeom_Plane_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_ClearXformOpOrder(
        _this: *const usdGeom_Plane_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_MakeMatrixXform(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_TransformMightBeTimeVarying(
        _this: *const usdGeom_Plane_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Plane_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetTimeSamples(
        _this: *const usdGeom_Plane_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetTimeSamplesInInterval(
        _this: *const usdGeom_Plane_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetLocalTransformation(
        _this: *const usdGeom_Plane_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Plane_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetExtentAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateExtentAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetDisplayColorAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateDisplayColorAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetDisplayOpacityAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetDoubleSidedAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateDoubleSidedAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetOrientationAttr(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateOrientationAttr(
        _this: *const usdGeom_Plane_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_GetDisplayColorPrimvar(
        _this: *const usdGeom_Plane_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Plane_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Plane_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetPointsAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreatePointsAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetVelocitiesAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateVelocitiesAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetAccelerationsAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateAccelerationsAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetNormalsAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateNormalsAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetNormalsInterpolation(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_SetNormalsInterpolation(
        _this: *mut usdGeom_PointBased_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputePointsAtTime(
        _this: *const usdGeom_PointBased_t,
        points: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_PointBased_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_dtor(_this: *mut usdGeom_PointBased_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_IsConcrete(
        _this: *const usdGeom_PointBased_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_IsTyped(
        _this: *const usdGeom_PointBased_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_IsAPISchema(
        _this: *const usdGeom_PointBased_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_IsAppliedAPISchema(
        _this: *const usdGeom_PointBased_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_IsMultipleApplyAPISchema(
        _this: *const usdGeom_PointBased_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetSchemaKind(
        _this: *const usdGeom_PointBased_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetPrim(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetPath(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_op_bool(
        _this: *const usdGeom_PointBased_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetVisibilityAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateVisibilityAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetPurposeAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreatePurposeAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetProxyPrimRel(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateProxyPrimRel(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_MakeVisible(
        _this: *const usdGeom_PointBased_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_MakeInvisible(
        _this: *const usdGeom_PointBased_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputeVisibility(
        _this: *const usdGeom_PointBased_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetPurposeVisibilityAttr(
        _this: *const usdGeom_PointBased_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputePurposeInfo(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_PointBased_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputePurpose(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputeProxyPrim(
        _this: *const usdGeom_PointBased_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_SetProxyPrim(
        _this: *const usdGeom_PointBased_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputeWorldBound(
        _this: *const usdGeom_PointBased_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputeLocalBound(
        _this: *const usdGeom_PointBased_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputeUntransformedBound(
        _this: *const usdGeom_PointBased_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputeLocalToWorldTransform(
        _this: *const usdGeom_PointBased_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ComputeParentToWorldTransform(
        _this: *const usdGeom_PointBased_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetXformOpOrderAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddXformOp(
        _this: *const usdGeom_PointBased_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddTranslateOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddScaleOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddRotateXOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddRotateYOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddRotateZOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddRotateXYZOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddRotateXZYOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddRotateYXZOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddRotateYZXOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddRotateZXYOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddRotateZYXOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddOrientOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_AddTransformOp(
        _this: *const usdGeom_PointBased_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_SetResetXformStack(
        _this: *const usdGeom_PointBased_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_SetXformOpOrder(
        _this: *const usdGeom_PointBased_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetOrderedXformOps(
        _this: *const usdGeom_PointBased_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_ClearXformOpOrder(
        _this: *const usdGeom_PointBased_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_MakeMatrixXform(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_TransformMightBeTimeVarying(
        _this: *const usdGeom_PointBased_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_PointBased_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetTimeSamples(
        _this: *const usdGeom_PointBased_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetTimeSamplesInInterval(
        _this: *const usdGeom_PointBased_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetLocalTransformation(
        _this: *const usdGeom_PointBased_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetLocalTransformation_with_ops(
        _this: *const usdGeom_PointBased_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetExtentAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateExtentAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetDisplayColorAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateDisplayColorAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetDisplayOpacityAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateDisplayOpacityAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetDoubleSidedAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateDoubleSidedAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetOrientationAttr(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateOrientationAttr(
        _this: *const usdGeom_PointBased_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_GetDisplayColorPrimvar(
        _this: *const usdGeom_PointBased_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointBased_CreateDisplayColorPrimvar(
        _this: *const usdGeom_PointBased_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetProtoIndicesAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateProtoIndicesAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetIdsAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateIdsAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetPositionsAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreatePositionsAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateOrientationsAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetOrientationsAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetScalesAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateScalesAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetVelocitiesAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateVelocitiesAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetAccelerationsAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateAccelerationsAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetAngularVelocitiesAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateAngularVelocitiesAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetPrototypesRel(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreatePrototypesRel(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeInstanceTransformsAtTime(
        _this: *const usdGeom_PointInstancer_t,
        xforms: *mut gf_Matrix4dArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        doProtoXforms: ::std::os::raw::c_uint,
        applyMask: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeInstanceTransformsAtTimes(
        _this: *const usdGeom_PointInstancer_t,
        xformsArray: *mut gf_Matrix4dArrayVector_t,
        times: *const usd_TimeCodeVector_t,
        baseTime: usd_TimeCode_t,
        doProtoXforms: ::std::os::raw::c_uint,
        applyMask: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeExtentAtTime(
        _this: *const usdGeom_PointInstancer_t,
        extent: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeExtentAtTime_with_transform(
        _this: *const usdGeom_PointInstancer_t,
        extent: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        transform: *const gf_Matrix4d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeExtentAtTimes(
        _this: *const usdGeom_PointInstancer_t,
        extents: *mut gf_Vec3fArrayVector_t,
        times: *const usd_TimeCodeVector_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeExtentAtTimes_with_transform(
        _this: *const usdGeom_PointInstancer_t,
        extents: *mut gf_Vec3fArrayVector_t,
        times: *const usd_TimeCodeVector_t,
        baseTime: usd_TimeCode_t,
        transform: *const gf_Matrix4d_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetInstanceCount(
        _this: *const usdGeom_PointInstancer_t,
        timeCode: usd_TimeCode_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_PointInstancer_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_dtor(
        _this: *mut usdGeom_PointInstancer_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_IsConcrete(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_IsTyped(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_IsAPISchema(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_IsAppliedAPISchema(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_IsMultipleApplyAPISchema(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetSchemaKind(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetPrim(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetPath(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_op_bool(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetVisibilityAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateVisibilityAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetPurposeAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreatePurposeAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetProxyPrimRel(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateProxyPrimRel(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_MakeVisible(
        _this: *const usdGeom_PointInstancer_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_MakeInvisible(
        _this: *const usdGeom_PointInstancer_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeVisibility(
        _this: *const usdGeom_PointInstancer_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetPurposeVisibilityAttr(
        _this: *const usdGeom_PointInstancer_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputePurposeInfo(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_PointInstancer_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputePurpose(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeProxyPrim(
        _this: *const usdGeom_PointInstancer_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_SetProxyPrim(
        _this: *const usdGeom_PointInstancer_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeWorldBound(
        _this: *const usdGeom_PointInstancer_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeLocalBound(
        _this: *const usdGeom_PointInstancer_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeUntransformedBound(
        _this: *const usdGeom_PointInstancer_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeLocalToWorldTransform(
        _this: *const usdGeom_PointInstancer_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ComputeParentToWorldTransform(
        _this: *const usdGeom_PointInstancer_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetXformOpOrderAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddXformOp(
        _this: *const usdGeom_PointInstancer_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddTranslateOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddScaleOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddRotateXOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddRotateYOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddRotateZOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddRotateXYZOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddRotateXZYOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddRotateYXZOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddRotateYZXOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddRotateZXYOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddRotateZYXOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddOrientOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_AddTransformOp(
        _this: *const usdGeom_PointInstancer_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_SetResetXformStack(
        _this: *const usdGeom_PointInstancer_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_SetXformOpOrder(
        _this: *const usdGeom_PointInstancer_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetOrderedXformOps(
        _this: *const usdGeom_PointInstancer_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_ClearXformOpOrder(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_MakeMatrixXform(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_TransformMightBeTimeVarying(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_PointInstancer_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetTimeSamples(
        _this: *const usdGeom_PointInstancer_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetTimeSamplesInInterval(
        _this: *const usdGeom_PointInstancer_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetLocalTransformation(
        _this: *const usdGeom_PointInstancer_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetLocalTransformation_with_ops(
        _this: *const usdGeom_PointInstancer_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_GetExtentAttr(
        _this: *const usdGeom_PointInstancer_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PointInstancer_CreateExtentAttr(
        _this: *const usdGeom_PointInstancer_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetWidthsAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateWidthsAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetIdsAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateIdsAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetWidthsInterpolation(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_SetWidthsInterpolation(
        _this: *mut usdGeom_Points_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetPointCount(
        _this: *const usdGeom_Points_t,
        timeCode: usd_TimeCode_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Points_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_dtor(_this: *mut usdGeom_Points_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_IsConcrete(
        _this: *const usdGeom_Points_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_IsTyped(
        _this: *const usdGeom_Points_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_IsAPISchema(
        _this: *const usdGeom_Points_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_IsAppliedAPISchema(
        _this: *const usdGeom_Points_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Points_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetSchemaKind(
        _this: *const usdGeom_Points_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetPrim(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetPath(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Points_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_op_bool(
        _this: *const usdGeom_Points_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetVisibilityAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateVisibilityAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetPurposeAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreatePurposeAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetProxyPrimRel(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateProxyPrimRel(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_MakeVisible(
        _this: *const usdGeom_Points_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_MakeInvisible(
        _this: *const usdGeom_Points_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputeVisibility(
        _this: *const usdGeom_Points_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Points_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputePurposeInfo(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Points_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputePurpose(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputeProxyPrim(
        _this: *const usdGeom_Points_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_SetProxyPrim(
        _this: *const usdGeom_Points_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputeWorldBound(
        _this: *const usdGeom_Points_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputeLocalBound(
        _this: *const usdGeom_Points_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputeUntransformedBound(
        _this: *const usdGeom_Points_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Points_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputeParentToWorldTransform(
        _this: *const usdGeom_Points_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetXformOpOrderAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddXformOp(
        _this: *const usdGeom_Points_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddTranslateOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddScaleOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddRotateXOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddRotateYOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddRotateZOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddRotateXYZOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddRotateXZYOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddRotateYXZOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddRotateYZXOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddRotateZXYOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddRotateZYXOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddOrientOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_AddTransformOp(
        _this: *const usdGeom_Points_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_SetResetXformStack(
        _this: *const usdGeom_Points_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_SetXformOpOrder(
        _this: *const usdGeom_Points_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetOrderedXformOps(
        _this: *const usdGeom_Points_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ClearXformOpOrder(
        _this: *const usdGeom_Points_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_MakeMatrixXform(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_TransformMightBeTimeVarying(
        _this: *const usdGeom_Points_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Points_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetTimeSamples(
        _this: *const usdGeom_Points_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetTimeSamplesInInterval(
        _this: *const usdGeom_Points_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetLocalTransformation(
        _this: *const usdGeom_Points_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Points_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetExtentAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateExtentAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetDisplayColorAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateDisplayColorAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetDisplayOpacityAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetDoubleSidedAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateDoubleSidedAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetOrientationAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateOrientationAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetDisplayColorPrimvar(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Points_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetPointsAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreatePointsAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetVelocitiesAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateVelocitiesAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetAccelerationsAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateAccelerationsAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetNormalsAttr(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_CreateNormalsAttr(
        _this: *const usdGeom_Points_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_GetNormalsInterpolation(
        _this: *const usdGeom_Points_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_SetNormalsInterpolation(
        _this: *mut usdGeom_Points_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Points_ComputePointsAtTime(
        _this: *const usdGeom_Points_t,
        points: *mut gf_Vec3fArray_t,
        time: usd_TimeCode_t,
        baseTime: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetInterpolation(
        _this: *const usdGeom_Primvar_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_SetInterpolation(
        _this: *mut usdGeom_Primvar_t,
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_HasAuthoredInterpolation(
        _this: *const usdGeom_Primvar_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetElementSize(
        _this: *const usdGeom_Primvar_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_SetElementSize(
        _this: *mut usdGeom_Primvar_t,
        eltSize: ::std::os::raw::c_int,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_HasAuthoredElementSize(
        _this: *const usdGeom_Primvar_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetDeclarationInfo(
        _this: *const usdGeom_Primvar_t,
        name: *mut tf_Token_t,
        typeName: *mut sdf_ValueTypeName_t,
        interpolation: *mut tf_Token_t,
        elementSize: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_Get(
        _this: *const usdGeom_Primvar_t,
        value: *mut vt_Value_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetAttr(
        _this: *const usdGeom_Primvar_t,
        _result: *mut *const usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_IsDefined(
        _this: *const usdGeom_Primvar_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_HasValue(
        _this: *const usdGeom_Primvar_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_HasAuthoredValue(
        _this: *const usdGeom_Primvar_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetPrimvarName(
        _this: *const usdGeom_Primvar_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetName(
        _this: *const usdGeom_Primvar_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_NameContainsNamespaces(
        _this: *const usdGeom_Primvar_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetBaseName(
        _this: *const usdGeom_Primvar_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetNamespace(
        _this: *const usdGeom_Primvar_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetTypeName(
        _this: *const usdGeom_Primvar_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_SplitName(
        _this: *const usdGeom_Primvar_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetTimeSamples(
        _this: *const usdGeom_Primvar_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_GetTimeSamplesInInterval(
        _this: *const usdGeom_Primvar_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_ValueMightBeTimeVarying(
        _this: *const usdGeom_Primvar_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_IsIdTarget(
        _this: *const usdGeom_Primvar_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_SetIdTarget(
        _this: *const usdGeom_Primvar_t,
        path: *const sdf_Path_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_IsPrimvar(
        attr: *const usd_Attribute_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_IsValidPrimvarName(
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_StripPrimvarsName(
        name: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_IsValidInterpolation(
        interpolation: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_new(
        param00: *const usd_Attribute_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Primvar_dtor(_this: *mut usdGeom_Primvar_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_data(
        _this: *mut usdGeom_PrimvarVector_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_data_const(
        _this: *const usdGeom_PrimvarVector_t,
        _result: *mut *const usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_empty(
        _this: *const usdGeom_PrimvarVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_size(
        _this: *const usdGeom_PrimvarVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_max_size(
        _this: *const usdGeom_PrimvarVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_capacity(
        _this: *const usdGeom_PrimvarVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_clear(
        _this: *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_pop_back(
        _this: *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_op_index(
        _this: *const usdGeom_PrimvarVector_t,
        __n: usize,
        _result: *mut *const usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_default(
        _result: *mut *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarVector_dtor(_this: *mut usdGeom_PrimvarVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_CreatePrimvar(
        _this: *const usdGeom_PrimvarsAPI_t,
        name: *const tf_Token_t,
        typeName: *const sdf_ValueTypeName_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_RemovePrimvar(
        _this: *mut usdGeom_PrimvarsAPI_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_BlockPrimvar(
        _this: *mut usdGeom_PrimvarsAPI_t,
        name: *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetPrimvar(
        _this: *const usdGeom_PrimvarsAPI_t,
        name: *const tf_Token_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetPrimvars(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetAuthoredPrimvars(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetPrimvarsWithValues(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetPrimvarsWithAuthoredValues(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_FindInheritablePrimvars(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_FindIncrementallyInheritablePrimvars(
        _this: *const usdGeom_PrimvarsAPI_t,
        inheritedFromAncestors: *const usdGeom_PrimvarVector_t,
        _result: *mut *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_FindPrimvarWithInheritance(
        _this: *const usdGeom_PrimvarsAPI_t,
        name: *const tf_Token_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_FindPrimvarWIthInheritance_from(
        _this: *const usdGeom_PrimvarsAPI_t,
        name: *const tf_Token_t,
        inheritedFromAncestors: *const usdGeom_PrimvarVector_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_FindPrimvarsWithInheritance(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_FindPrimvarsWIthInheritance_from(
        _this: *const usdGeom_PrimvarsAPI_t,
        inheritedFromAncestors: *const usdGeom_PrimvarVector_t,
        _result: *mut *mut usdGeom_PrimvarVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_HasPrimvar(
        _this: *const usdGeom_PrimvarsAPI_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_HasPossiblyInheritedPrimvar(
        _this: *const usdGeom_PrimvarsAPI_t,
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_Get(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usdGeom_PrimvarsAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_CanContainPropertyName(
        name: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_PrimvarsAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_dtor(_this: *mut usdGeom_PrimvarsAPI_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_IsConcrete(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_IsTyped(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_IsAPISchema(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_IsAppliedAPISchema(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_IsMultipleApplyAPISchema(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetSchemaKind(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetPrim(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetPath(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_PrimvarsAPI_op_bool(
        _this: *const usdGeom_PrimvarsAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_Get(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usdGeom_Scope_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_Define(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usdGeom_Scope_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Scope_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_dtor(_this: *mut usdGeom_Scope_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_IsConcrete(
        _this: *const usdGeom_Scope_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_IsTyped(
        _this: *const usdGeom_Scope_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_IsAPISchema(
        _this: *const usdGeom_Scope_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_IsAppliedAPISchema(
        _this: *const usdGeom_Scope_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Scope_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_GetSchemaKind(
        _this: *const usdGeom_Scope_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_GetPrim(
        _this: *const usdGeom_Scope_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_GetPath(
        _this: *const usdGeom_Scope_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Scope_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_op_bool(
        _this: *const usdGeom_Scope_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_GetVisibilityAttr(
        _this: *const usdGeom_Scope_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_CreateVisibilityAttr(
        _this: *const usdGeom_Scope_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_GetPurposeAttr(
        _this: *const usdGeom_Scope_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_CreatePurposeAttr(
        _this: *const usdGeom_Scope_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_GetProxyPrimRel(
        _this: *const usdGeom_Scope_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_CreateProxyPrimRel(
        _this: *const usdGeom_Scope_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_MakeVisible(
        _this: *const usdGeom_Scope_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_MakeInvisible(
        _this: *const usdGeom_Scope_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputeVisibility(
        _this: *const usdGeom_Scope_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Scope_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputePurposeInfo(
        _this: *const usdGeom_Scope_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Scope_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputePurpose(
        _this: *const usdGeom_Scope_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputeProxyPrim(
        _this: *const usdGeom_Scope_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_SetProxyPrim(
        _this: *const usdGeom_Scope_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputeWorldBound(
        _this: *const usdGeom_Scope_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputeLocalBound(
        _this: *const usdGeom_Scope_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputeUntransformedBound(
        _this: *const usdGeom_Scope_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Scope_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Scope_ComputeParentToWorldTransform(
        _this: *const usdGeom_Scope_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetRadiusAttr(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreateRadiusAttr(
        _this: *const usdGeom_Sphere_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Sphere_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_dtor(_this: *mut usdGeom_Sphere_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_IsConcrete(
        _this: *const usdGeom_Sphere_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_IsTyped(
        _this: *const usdGeom_Sphere_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_IsAPISchema(
        _this: *const usdGeom_Sphere_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_IsAppliedAPISchema(
        _this: *const usdGeom_Sphere_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Sphere_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetSchemaKind(
        _this: *const usdGeom_Sphere_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetPrim(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetPath(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_op_bool(
        _this: *const usdGeom_Sphere_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetVisibilityAttr(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreateVisibilityAttr(
        _this: *const usdGeom_Sphere_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetPurposeAttr(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreatePurposeAttr(
        _this: *const usdGeom_Sphere_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetProxyPrimRel(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreateProxyPrimRel(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_MakeVisible(
        _this: *const usdGeom_Sphere_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_MakeInvisible(
        _this: *const usdGeom_Sphere_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputeVisibility(
        _this: *const usdGeom_Sphere_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Sphere_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputePurposeInfo(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Sphere_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputePurpose(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputeProxyPrim(
        _this: *const usdGeom_Sphere_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_SetProxyPrim(
        _this: *const usdGeom_Sphere_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputeWorldBound(
        _this: *const usdGeom_Sphere_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputeLocalBound(
        _this: *const usdGeom_Sphere_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputeUntransformedBound(
        _this: *const usdGeom_Sphere_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Sphere_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ComputeParentToWorldTransform(
        _this: *const usdGeom_Sphere_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetXformOpOrderAttr(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddXformOp(
        _this: *const usdGeom_Sphere_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddTranslateOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddScaleOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddRotateXOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddRotateYOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddRotateZOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddRotateXYZOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddRotateXZYOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddRotateYXZOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddRotateYZXOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddRotateZXYOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddRotateZYXOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddOrientOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_AddTransformOp(
        _this: *const usdGeom_Sphere_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_SetResetXformStack(
        _this: *const usdGeom_Sphere_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_SetXformOpOrder(
        _this: *const usdGeom_Sphere_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetOrderedXformOps(
        _this: *const usdGeom_Sphere_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_ClearXformOpOrder(
        _this: *const usdGeom_Sphere_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_MakeMatrixXform(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_TransformMightBeTimeVarying(
        _this: *const usdGeom_Sphere_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Sphere_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetTimeSamples(
        _this: *const usdGeom_Sphere_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetTimeSamplesInInterval(
        _this: *const usdGeom_Sphere_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetLocalTransformation(
        _this: *const usdGeom_Sphere_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Sphere_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetExtentAttr(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreateExtentAttr(
        _this: *const usdGeom_Sphere_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetDisplayColorAttr(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreateDisplayColorAttr(
        _this: *const usdGeom_Sphere_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetDisplayOpacityAttr(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreateDisplayOpacityAttr(
        _this: *const usdGeom_Sphere_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetDoubleSidedAttr(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreateDoubleSidedAttr(
        _this: *const usdGeom_Sphere_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetOrientationAttr(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreateOrientationAttr(
        _this: *const usdGeom_Sphere_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_GetDisplayColorPrimvar(
        _this: *const usdGeom_Sphere_t,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Sphere_CreateDisplayColorPrimvar(
        _this: *const usdGeom_Sphere_t,
        interpolation: *const tf_Token_t,
        elementSize: ::std::os::raw::c_int,
        _result: *mut *mut usdGeom_Primvar_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetElementTypeAttr(
        _this: *const usdGeom_Subset_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_CreateElementTypeAttr(
        _this: *const usdGeom_Subset_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetIndicesAttr(
        _this: *const usdGeom_Subset_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_CreateIndicesAttr(
        _this: *const usdGeom_Subset_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetFamilyNameAttr(
        _this: *const usdGeom_Subset_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_CreateFamilyNameAttr(
        _this: *const usdGeom_Subset_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_Get(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usdGeom_Subset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_Define(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usdGeom_Subset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_CreateGeomSubset(
        geom: *const usdGeom_Imageable_t,
        subsetName: *const tf_Token_t,
        elementType: *const tf_Token_t,
        indices: *const vt_IntArray_t,
        familyName: *const tf_Token_t,
        familyType: *const tf_Token_t,
        _result: *mut *mut usdGeom_Subset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_CreateUniqueGeomSubset(
        geom: *const usdGeom_Imageable_t,
        subsetName: *const tf_Token_t,
        elementType: *const tf_Token_t,
        indices: *const vt_IntArray_t,
        familyName: *const tf_Token_t,
        familyType: *const tf_Token_t,
        _result: *mut *mut usdGeom_Subset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetAllGeomSubsets(
        geom: *const usdGeom_Imageable_t,
        _result: *mut *mut usdGeom_SubsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetGeomSubsets(
        geom: *const usdGeom_Imageable_t,
        elementType: *const tf_Token_t,
        familyName: *const tf_Token_t,
        _result: *mut *mut usdGeom_SubsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_SetFamilyType(
        geom: *const usdGeom_Imageable_t,
        familyName: *const tf_Token_t,
        familyType: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetFamilyType(
        geom: *const usdGeom_Imageable_t,
        familyName: *const tf_Token_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetUnassignedIndices(
        subsets: *const usdGeom_SubsetVector_t,
        elementCount: usize,
        time: *const usd_TimeCode_t,
        _result: *mut *mut vt_IntArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_ValidateSubsets(
        subsets: *const usdGeom_SubsetVector_t,
        elementCount: usize,
        familyType: *const tf_Token_t,
        reason: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_ValidateFamily(
        geom: *const usdGeom_Imageable_t,
        elementType: *const tf_Token_t,
        familyName: *const tf_Token_t,
        reason: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_Subset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_dtor(_this: *mut usdGeom_Subset_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_IsConcrete(
        _this: *const usdGeom_Subset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_IsTyped(
        _this: *const usdGeom_Subset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_IsAPISchema(
        _this: *const usdGeom_Subset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_IsAppliedAPISchema(
        _this: *const usdGeom_Subset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Subset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetSchemaKind(
        _this: *const usdGeom_Subset_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetPrim(
        _this: *const usdGeom_Subset_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetPath(
        _this: *const usdGeom_Subset_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Subset_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Subset_op_bool(
        _this: *const usdGeom_Subset_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_data(
        _this: *mut usdGeom_SubsetVector_t,
        _result: *mut *mut usdGeom_Subset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_data_const(
        _this: *const usdGeom_SubsetVector_t,
        _result: *mut *const usdGeom_Subset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_empty(
        _this: *const usdGeom_SubsetVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_size(
        _this: *const usdGeom_SubsetVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_max_size(
        _this: *const usdGeom_SubsetVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_capacity(
        _this: *const usdGeom_SubsetVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_clear(_this: *mut usdGeom_SubsetVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_pop_back(
        _this: *mut usdGeom_SubsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_op_index(
        _this: *const usdGeom_SubsetVector_t,
        __n: usize,
        _result: *mut *const usdGeom_Subset_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_default(
        _result: *mut *mut usdGeom_SubsetVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_SubsetVector_dtor(_this: *mut usdGeom_SubsetVector_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_GetGuideVisibilityAttr(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_CreateGuideVisibilityAttr(
        _this: *const usdGeom_VisibilityAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_GetProxyVisibilityAttr(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_CreateProxyVisibilityAttr(
        _this: *const usdGeom_VisibilityAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_GetRenderVisibilityAttr(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_CreateRenderVisibilityAttr(
        _this: *const usdGeom_VisibilityAPI_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_GetPurposeVisibilityAttr(
        _this: *const usdGeom_VisibilityAPI_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_Get(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usdGeom_VisibilityAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_CanApply(
        prim: *const usd_Prim_t,
        whyNot: *mut std_String_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_Apply(
        prim: *const usd_Prim_t,
        _result: *mut *mut usdGeom_VisibilityAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_VisibilityAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_dtor(_this: *mut usdGeom_VisibilityAPI_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_IsConcrete(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_IsTyped(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_IsAPISchema(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_IsAppliedAPISchema(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_IsMultipleApplyAPISchema(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_GetSchemaKind(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_GetPrim(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_GetPath(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_VisibilityAPI_op_bool(
        _this: *const usdGeom_VisibilityAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_Get(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usdGeom_Xform_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_Define(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usdGeom_Xform_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_new(_result: *mut *mut usdGeom_Xform_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_dtor(_this: *mut usdGeom_Xform_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_IsConcrete(
        _this: *const usdGeom_Xform_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_IsTyped(
        _this: *const usdGeom_Xform_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_IsAPISchema(
        _this: *const usdGeom_Xform_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_IsAppliedAPISchema(
        _this: *const usdGeom_Xform_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Xform_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetSchemaKind(
        _this: *const usdGeom_Xform_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetPrim(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetPath(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Xform_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_op_bool(
        _this: *const usdGeom_Xform_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetVisibilityAttr(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_CreateVisibilityAttr(
        _this: *const usdGeom_Xform_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetPurposeAttr(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_CreatePurposeAttr(
        _this: *const usdGeom_Xform_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetProxyPrimRel(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_CreateProxyPrimRel(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_MakeVisible(
        _this: *const usdGeom_Xform_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_MakeInvisible(
        _this: *const usdGeom_Xform_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputeVisibility(
        _this: *const usdGeom_Xform_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Xform_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputePurposeInfo(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Xform_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputePurpose(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputeProxyPrim(
        _this: *const usdGeom_Xform_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_SetProxyPrim(
        _this: *const usdGeom_Xform_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputeWorldBound(
        _this: *const usdGeom_Xform_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputeLocalBound(
        _this: *const usdGeom_Xform_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputeUntransformedBound(
        _this: *const usdGeom_Xform_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Xform_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ComputeParentToWorldTransform(
        _this: *const usdGeom_Xform_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetXformOpOrderAttr(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddXformOp(
        _this: *const usdGeom_Xform_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddTranslateOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddScaleOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddRotateXOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddRotateYOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddRotateZOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddRotateXYZOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddRotateXZYOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddRotateYXZOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddRotateYZXOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddRotateZXYOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddRotateZYXOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddOrientOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_AddTransformOp(
        _this: *const usdGeom_Xform_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_SetResetXformStack(
        _this: *const usdGeom_Xform_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_SetXformOpOrder(
        _this: *const usdGeom_Xform_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetOrderedXformOps(
        _this: *const usdGeom_Xform_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_ClearXformOpOrder(
        _this: *const usdGeom_Xform_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_MakeMatrixXform(
        _this: *const usdGeom_Xform_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_TransformMightBeTimeVarying(
        _this: *const usdGeom_Xform_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Xform_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetTimeSamples(
        _this: *const usdGeom_Xform_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetTimeSamplesInInterval(
        _this: *const usdGeom_Xform_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetLocalTransformation(
        _this: *const usdGeom_Xform_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xform_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Xform_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_GetLocalToWorldTransform(
        _this: *mut usdGeom_XformCache_t,
        prim: *const usd_Prim_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_GetParentToWorldTransform(
        _this: *mut usdGeom_XformCache_t,
        prim: *const usd_Prim_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_GetLocalTransformation(
        _this: *mut usdGeom_XformCache_t,
        prim: *const usd_Prim_t,
        resetsXformStack: *mut bool,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_ComputeRelativeTransform(
        _this: *mut usdGeom_XformCache_t,
        prim: *const usd_Prim_t,
        ancestor: *const usd_Prim_t,
        resetXformStack: *mut bool,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_IsAttributeIncludedInLocalTransform(
        _this: *mut usdGeom_XformCache_t,
        prim: *const usd_Prim_t,
        attrName: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_TransformMightBeTimeVarying(
        _this: *mut usdGeom_XformCache_t,
        prim: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_GetResetXformStack(
        _this: *mut usdGeom_XformCache_t,
        prim: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_Clear(_this: *mut usdGeom_XformCache_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_GetTime(
        _this: *mut usdGeom_XformCache_t,
        _result: *mut usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_SetTime(
        _this: *mut usdGeom_XformCache_t,
        time: usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_Swap(
        _this: *mut usdGeom_XformCache_t,
        other: *mut usdGeom_XformCache_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_new(
        time: usd_TimeCode_t,
        _result: *mut *mut usdGeom_XformCache_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCache_dtor(_this: *mut usdGeom_XformCache_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_SetXformVectors(
        _this: *const usdGeom_XformCommonAPI_t,
        translation: *const gf_Vec3d_t,
        rotation: *const gf_Vec3f_t,
        scale: *const gf_Vec3f_t,
        pivot: *const gf_Vec3f_t,
        rotOrder: ::std::os::raw::c_uint,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_GetXformVectors(
        _this: *const usdGeom_XformCommonAPI_t,
        translation: *mut gf_Vec3d_t,
        rotation: *mut gf_Vec3f_t,
        scale: *mut gf_Vec3f_t,
        pivot: *mut gf_Vec3f_t,
        rotOrder: *mut ::std::os::raw::c_uint,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_GetXformVectorsByAccumulation(
        _this: *const usdGeom_XformCommonAPI_t,
        translation: *mut gf_Vec3d_t,
        rotation: *mut gf_Vec3f_t,
        scale: *mut gf_Vec3f_t,
        pivot: *mut gf_Vec3f_t,
        rotOrder: *mut ::std::os::raw::c_uint,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_GetResetXformStack(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_SetResetXformStack(
        _this: *const usdGeom_XformCommonAPI_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_SetTranslate(
        _this: *const usdGeom_XformCommonAPI_t,
        translation: *const gf_Vec3d_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_SetPivot(
        _this: *const usdGeom_XformCommonAPI_t,
        pivot: *const gf_Vec3f_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_SetRotate(
        _this: *const usdGeom_XformCommonAPI_t,
        rotation: *const gf_Vec3f_t,
        rotOrder: ::std::os::raw::c_uint,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_SetScale(
        _this: *const usdGeom_XformCommonAPI_t,
        scale: *const gf_Vec3f_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_CreateXformOps_with_rotation_order(
        _this: *const usdGeom_XformCommonAPI_t,
        rotOrder: ::std::os::raw::c_uint,
        op1: ::std::os::raw::c_uint,
        op2: ::std::os::raw::c_uint,
        op3: ::std::os::raw::c_uint,
        op4: ::std::os::raw::c_uint,
        _result: *mut *mut usdGeom_XformCommonAPIOps_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_CreateXformOps(
        _this: *const usdGeom_XformCommonAPI_t,
        op1: ::std::os::raw::c_uint,
        op2: ::std::os::raw::c_uint,
        op3: ::std::os::raw::c_uint,
        op4: ::std::os::raw::c_uint,
        _result: *mut *mut usdGeom_XformCommonAPIOps_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_GetSchemaAttributeNames(
        includeInherited: bool,
        _result: *mut *const tf_TokenVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_Get(
        stage: *const usd_StageWeakPtr_t,
        path: *const sdf_Path_t,
        _result: *mut *mut usdGeom_XformCommonAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_ConvertRotationOrderToOpType(
        rotOrder: ::std::os::raw::c_uint,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_ConvertOpTypeToRotationOrder(
        opType: ::std::os::raw::c_uint,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_CanConvertOpTypeToRotationOrder(
        opType: ::std::os::raw::c_uint,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_GetRotationTransform(
        rotation: *const gf_Vec3f_t,
        rotationOrder: ::std::os::raw::c_uint,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_new(
        param00: *const usd_Prim_t,
        _result: *mut *mut usdGeom_XformCommonAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_dtor(
        _this: *mut usdGeom_XformCommonAPI_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_IsConcrete(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_IsTyped(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_IsAPISchema(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_IsAppliedAPISchema(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_IsMultipleApplyAPISchema(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_GetSchemaKind(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_GetPrim(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_GetPath(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPI_op_bool(
        _this: *const usdGeom_XformCommonAPI_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformCommonAPIOps_dtor(
        _this: *mut usdGeom_XformCommonAPIOps_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetXformOpOrderAttr(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddXformOp(
        _this: *const usdGeom_Xformable_t,
        opType: ::std::os::raw::c_uint,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddTranslateOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddScaleOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddRotateXOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddRotateYOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddRotateZOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddRotateXYZOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddRotateXZYOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddRotateYXZOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddRotateYZXOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddRotateZXYOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddRotateZYXOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddOrientOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_AddTransformOp(
        _this: *const usdGeom_Xformable_t,
        precision: ::std::os::raw::c_uint,
        opSuffix: *const tf_Token_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_SetResetXformStack(
        _this: *const usdGeom_Xformable_t,
        resetXform: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_SetXformOpOrder(
        _this: *const usdGeom_Xformable_t,
        orderedXformOps: *const usdGeom_XformOpVector_t,
        resetXformStack: bool,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetOrderedXformOps(
        _this: *const usdGeom_Xformable_t,
        resetsXformStack: *mut bool,
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ClearXformOpOrder(
        _this: *const usdGeom_Xformable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_MakeMatrixXform(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_TransformMightBeTimeVarying(
        _this: *const usdGeom_Xformable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_TransformMightBeTimeVarying_using(
        _this: *const usdGeom_Xformable_t,
        ops: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetTimeSamples(
        _this: *const usdGeom_Xformable_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetTimeSamplesInInterval(
        _this: *const usdGeom_Xformable_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetLocalTransformation(
        _this: *const usdGeom_Xformable_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetLocalTransformation_with_ops(
        _this: *const usdGeom_Xformable_t,
        transform: *mut gf_Matrix4d_t,
        resetsXformStack: *mut bool,
        ops: *const usdGeom_XformOpVector_t,
        time: usd_TimeCode_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_new(_result: *mut *mut usdGeom_Xformable_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_dtor(_this: *mut usdGeom_Xformable_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_IsConcrete(
        _this: *const usdGeom_Xformable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_IsTyped(
        _this: *const usdGeom_Xformable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_IsAPISchema(
        _this: *const usdGeom_Xformable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_IsAppliedAPISchema(
        _this: *const usdGeom_Xformable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_IsMultipleApplyAPISchema(
        _this: *const usdGeom_Xformable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetSchemaKind(
        _this: *const usdGeom_Xformable_t,
        _result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetPrim(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetPath(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut sdf_Path_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetSchemaClassPrimDefinition(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *const usd_PrimDefinition_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_op_bool(
        _this: *const usdGeom_Xformable_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetVisibilityAttr(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_CreateVisibilityAttr(
        _this: *const usdGeom_Xformable_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetPurposeAttr(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_CreatePurposeAttr(
        _this: *const usdGeom_Xformable_t,
        defaultValue: *const vt_Value_t,
        writeSparsely: bool,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetProxyPrimRel(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_CreateProxyPrimRel(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut usd_Relationship_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_MakeVisible(
        _this: *const usdGeom_Xformable_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_MakeInvisible(
        _this: *const usdGeom_Xformable_t,
        time: *const usd_TimeCode_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputeVisibility(
        _this: *const usdGeom_Xformable_t,
        time: *const usd_TimeCode_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_GetPurposeVisibilityAttr(
        _this: *const usdGeom_Xformable_t,
        purpose: *const tf_Token_t,
        _result: *mut *mut usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputePurposeInfo(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputePurposeInfo_given_parent(
        _this: *const usdGeom_Xformable_t,
        parentPurposeInfo: *const usdGeom_ImageablePurposeInfo_t,
        _result: *mut *mut usdGeom_ImageablePurposeInfo_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputePurpose(
        _this: *const usdGeom_Xformable_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputeProxyPrim(
        _this: *const usdGeom_Xformable_t,
        renderPrim: *mut usd_Prim_t,
        _result: *mut *mut usd_Prim_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_SetProxyPrim(
        _this: *const usdGeom_Xformable_t,
        proxy: *const usd_Prim_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputeWorldBound(
        _this: *const usdGeom_Xformable_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputeLocalBound(
        _this: *const usdGeom_Xformable_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputeUntransformedBound(
        _this: *const usdGeom_Xformable_t,
        time: *const usd_TimeCode_t,
        purpose1: *const tf_Token_t,
        purpose2: *const tf_Token_t,
        purpose3: *const tf_Token_t,
        purpose4: *const tf_Token_t,
        _result: *mut *mut gf_BBox3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputeLocalToWorldTransform(
        _this: *const usdGeom_Xformable_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_Xformable_ComputeParentToWorldTransform(
        _this: *const usdGeom_Xformable_t,
        time: *const usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetOpType(
        _this: *const usdGeom_XformOp_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetPrecision(
        _this: *const usdGeom_XformOp_t,
        _result: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_IsInverseOp(
        _this: *const usdGeom_XformOp_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetOpName(
        _this: *const usdGeom_XformOp_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_HasSuffix(
        _this: *const usdGeom_XformOp_t,
        suffix: *const tf_Token_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetAttr(
        _this: *const usdGeom_XformOp_t,
        _result: *mut *const usd_Attribute_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_IsDefined(
        _this: *const usdGeom_XformOp_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetName(
        _this: *const usdGeom_XformOp_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetBaseName(
        _this: *const usdGeom_XformOp_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetNamespace(
        _this: *const usdGeom_XformOp_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_SplitName(
        _this: *const usdGeom_XformOp_t,
        _result: *mut *mut std_StringVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetTypeName(
        _this: *const usdGeom_XformOp_t,
        _result: *mut *mut sdf_ValueTypeName_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetTimeSamples(
        _this: *const usdGeom_XformOp_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetTimeSamplesInInterval(
        _this: *const usdGeom_XformOp_t,
        interval: *const gf_Interval_t,
        times: *mut std_DoubleVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetNumTimeSamples(
        _this: *const usdGeom_XformOp_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_GetOpTransform(
        _this: *const usdGeom_XformOp_t,
        time: usd_TimeCode_t,
        _result: *mut gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_MightBeTimeVarying(
        _this: *const usdGeom_XformOp_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_new(
        attr: *const usd_Attribute_t,
        isInverseOp: bool,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOp_dtor(_this: *mut usdGeom_XformOp_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_data(
        _this: *mut usdGeom_XformOpVector_t,
        _result: *mut *mut usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_data_const(
        _this: *const usdGeom_XformOpVector_t,
        _result: *mut *const usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_empty(
        _this: *const usdGeom_XformOpVector_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_size(
        _this: *const usdGeom_XformOpVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_max_size(
        _this: *const usdGeom_XformOpVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_capacity(
        _this: *const usdGeom_XformOpVector_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_clear(
        _this: *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_pop_back(
        _this: *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_op_index(
        _this: *const usdGeom_XformOpVector_t,
        __n: usize,
        _result: *mut *const usdGeom_XformOp_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_default(
        _result: *mut *mut usdGeom_XformOpVector_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usdGeom_XformOpVector_dtor(_this: *mut usdGeom_XformOpVector_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsArrayValued(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsEmpty(_this: *const vt_Value_t, _result: *mut bool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_GetArraySize(
        _this: *const vt_Value_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_GetType(
        _this: *const vt_Value_t,
        _result: *mut *mut tf_Type_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_GetTypeName(
        _this: *const vt_Value_t,
        _result: *mut *mut std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_bool(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_bool(
        _this: *const vt_Value_t,
        _result: *mut *const bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_int(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_int(
        _this: *const vt_Value_t,
        _result: *mut *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_float(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_float(
        _this: *const vt_Value_t,
        _result: *mut *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_double(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_double(
        _this: *const vt_Value_t,
        _result: *mut *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_TfToken(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_TfToken(
        _this: *const vt_Value_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_SdfAssetPath(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_SdfAssetPath(
        _this: *const vt_Value_t,
        _result: *mut *const sdf_AssetPath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_string(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_string(
        _this: *const vt_Value_t,
        _result: *mut *const std_String_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec2d(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec2d(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec2h(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec2h(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec2h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec2f(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec2f(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec2i(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec2i(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec2i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec3d(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec3d(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec3h(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec3h(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec3h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec3f(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec3f(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec3i(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec3i(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec3i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec4d(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec4d(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec4h(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec4h(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec4h_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec4f(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec4f(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfVec4i(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfVec4i(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec4i_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfQuatd(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfQuatd(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Quatd_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfQuatf(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfQuatf(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Quatf_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfQuath(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfQuath(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Quath_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfMatrix2d(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfMatrix2d(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Matrix2d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfMatrix2f(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfMatrix2f(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Matrix2f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfMatrix3d(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfMatrix3d(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Matrix3d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfMatrix3f(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfMatrix3f(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Matrix3f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfMatrix4d(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfMatrix4d(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Matrix4d_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_GfMatrix4f(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_GfMatrix4f(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Matrix4f_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_VtTokenArray(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_VtTokenArray(
        _this: *const vt_Value_t,
        _result: *mut *const vt_TokenArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_VtIntArray(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_VtIntArray(
        _this: *const vt_Value_t,
        _result: *mut *const vt_IntArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_VtFloatArray(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_VtFloatArray(
        _this: *const vt_Value_t,
        _result: *mut *const vt_FloatArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_VtDoubleArray(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_VtDoubleArray(
        _this: *const vt_Value_t,
        _result: *mut *const vt_DoubleArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_VtVec2fArray(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_VtVec2fArray(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec2fArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_VtVec3fArray(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_VtVec3fArray(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec3fArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_IsHolding_VtVec4fArray(
        _this: *const vt_Value_t,
        _result: *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_Get_VtVec4fArray(
        _this: *const vt_Value_t,
        _result: *mut *const gf_Vec4fArray_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_new(_result: *mut *mut vt_Value_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_ctor(obj: f32, _result: *mut *mut vt_Value_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_bool(value: bool, _result: *mut *mut vt_Value_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_int(
        value: ::std::os::raw::c_int,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_float(value: f32, _result: *mut *mut vt_Value_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_double(value: f64, _result: *mut *mut vt_Value_t)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_TfToken(
        value: *mut tf_Token_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_SdfAssetPath(
        value: *mut sdf_AssetPath_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_string(
        value: *mut std_String_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec2d(
        value: gf_Vec2d_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec2h(
        value: gf_Vec2h_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec2f(
        value: gf_Vec2f_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec2i(
        value: gf_Vec2i_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec3d(
        value: gf_Vec3d_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec3h(
        value: gf_Vec3h_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec3f(
        value: gf_Vec3f_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec3i(
        value: gf_Vec3i_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec4d(
        value: gf_Vec4d_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec4h(
        value: gf_Vec4h_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec4f(
        value: gf_Vec4f_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfVec4i(
        value: gf_Vec4i_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfQuatd(
        value: gf_Quatd_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfQuatf(
        value: gf_Quatf_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfQuath(
        value: gf_Quath_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfMatrix2d(
        value: gf_Matrix2d_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfMatrix2f(
        value: gf_Matrix2f_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfMatrix3d(
        value: gf_Matrix3d_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfMatrix3f(
        value: gf_Matrix3f_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfMatrix4d(
        value: gf_Matrix4d_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_GfMatrix4f(
        value: gf_Matrix4f_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_VtTokenArray(
        value: *mut vt_TokenArray_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_VtIntArray(
        value: *mut vt_IntArray_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_VtFloatArray(
        value: *mut vt_FloatArray_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_VtDoubleArray(
        value: *mut vt_DoubleArray_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_VtVec2fArray(
        value: *mut gf_Vec2fArray_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_VtVec3fArray(
        value: *mut gf_Vec3fArray_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_from_VtVec4fArray(
        value: *mut gf_Vec4fArray_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Value_dtor(_this: *mut vt_Value_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_TokenArray_data(
        _this: *mut vt_TokenArray_t,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_TokenArray_data_const(
        _this: *const vt_TokenArray_t,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_TokenArray_size(
        _this: *const vt_TokenArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_TokenArray_resize(
        _this: *mut vt_TokenArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_TokenArray_op_index(
        _this: *mut vt_TokenArray_t,
        index: usize,
        _result: *mut *mut tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_TokenArray_op_index_const(
        _this: *const vt_TokenArray_t,
        index: usize,
        _result: *mut *const tf_Token_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_TokenArray_new(_result: *mut *mut vt_TokenArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_TokenArray_dtor(_this: *mut vt_TokenArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_BoolArray_data(
        _this: *mut vt_BoolArray_t,
        _result: *mut *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_BoolArray_data_const(
        _this: *const vt_BoolArray_t,
        _result: *mut *const bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_BoolArray_size(
        _this: *const vt_BoolArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_BoolArray_resize(_this: *mut vt_BoolArray_t, newSize: usize)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_BoolArray_op_index(
        _this: *mut vt_BoolArray_t,
        index: usize,
        _result: *mut *mut bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_BoolArray_op_index_const(
        _this: *const vt_BoolArray_t,
        index: usize,
        _result: *mut *const bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_BoolArray_new(_result: *mut *mut vt_BoolArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_BoolArray_dtor(_this: *mut vt_BoolArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_IntArray_data(
        _this: *mut vt_IntArray_t,
        _result: *mut *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_IntArray_data_const(
        _this: *const vt_IntArray_t,
        _result: *mut *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_IntArray_size(
        _this: *const vt_IntArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_IntArray_resize(_this: *mut vt_IntArray_t, newSize: usize) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_IntArray_op_index(
        _this: *mut vt_IntArray_t,
        index: usize,
        _result: *mut *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_IntArray_op_index_const(
        _this: *const vt_IntArray_t,
        index: usize,
        _result: *mut *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_IntArray_new(_result: *mut *mut vt_IntArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_IntArray_dtor(_this: *mut vt_IntArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_FloatArray_data(
        _this: *mut vt_FloatArray_t,
        _result: *mut *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_FloatArray_data_const(
        _this: *const vt_FloatArray_t,
        _result: *mut *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_FloatArray_size(
        _this: *const vt_FloatArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_FloatArray_resize(
        _this: *mut vt_FloatArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_FloatArray_op_index(
        _this: *mut vt_FloatArray_t,
        index: usize,
        _result: *mut *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_FloatArray_op_index_const(
        _this: *const vt_FloatArray_t,
        index: usize,
        _result: *mut *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_FloatArray_new(_result: *mut *mut vt_FloatArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_FloatArray_dtor(_this: *mut vt_FloatArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_DoubleArray_data(
        _this: *mut vt_DoubleArray_t,
        _result: *mut *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_DoubleArray_data_const(
        _this: *const vt_DoubleArray_t,
        _result: *mut *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_DoubleArray_size(
        _this: *const vt_DoubleArray_t,
        _result: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_DoubleArray_resize(
        _this: *mut vt_DoubleArray_t,
        newSize: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_DoubleArray_op_index(
        _this: *mut vt_DoubleArray_t,
        index: usize,
        _result: *mut *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_DoubleArray_op_index_const(
        _this: *const vt_DoubleArray_t,
        index: usize,
        _result: *mut *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_DoubleArray_new(_result: *mut *mut vt_DoubleArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_DoubleArray_dtor(_this: *mut vt_DoubleArray_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Dictionary_op_index(
        _this: *mut vt_Dictionary_t,
        key: *const std_String_t,
        _result: *mut *mut vt_Value_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vt_Dictionary_dtor(_this: *mut vt_Dictionary_t) -> ::std::os::raw::c_int;
}
